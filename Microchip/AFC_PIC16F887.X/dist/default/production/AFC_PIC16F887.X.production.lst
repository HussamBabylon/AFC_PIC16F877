

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Aug 07 03:17:19 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F887 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0088                     	;# 
   137  0089                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  0105                     	;# 
   161  0107                     	;# 
   162  0108                     	;# 
   163  0109                     	;# 
   164  010C                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  0185                     	;# 
   170  0187                     	;# 
   171  0188                     	;# 
   172  0189                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  008F                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  0105                     	;# 
   239  0107                     	;# 
   240  0108                     	;# 
   241  0109                     	;# 
   242  010C                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  0185                     	;# 
   248  0187                     	;# 
   249  0188                     	;# 
   250  0189                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  008F                     	;# 
   298  0090                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0093                     	;# 
   304  0094                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  0105                     	;# 
   317  0107                     	;# 
   318  0108                     	;# 
   319  0109                     	;# 
   320  010C                     	;# 
   321  010C                     	;# 
   322  010D                     	;# 
   323  010E                     	;# 
   324  010F                     	;# 
   325  0185                     	;# 
   326  0187                     	;# 
   327  0188                     	;# 
   328  0189                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331                           
   332                           	psect	idataCOMMON
   333  0800                     __pidataCOMMON:
   334                           
   335                           ;initializer for _c
   336  0800  3482               	retlw	130
   337  0801  3400               	retlw	0
   338                           
   339                           ;initializer for _BackLight_State
   340  0802  3408               	retlw	8
   341                           
   342                           	psect	idataBANK1
   343  1C89                     __pidataBANK1:
   344                           
   345                           ;initializer for _current_period
   346  1C89  3482               	retlw	130
   347  1C8A  3400               	retlw	0
   348  1C8B  3400               	retlw	0
   349  1C8C  3400               	retlw	0
   350                           
   351                           	psect	idataBANK3
   352  1C8D                     __pidataBANK3:
   353                           
   354                           ;initializer for _c2
   355  1C8D  3482               	retlw	130
   356  1C8E  3400               	retlw	0
   357                           
   358                           ;initializer for _tempMax
   359  1C8F  3482               	retlw	130
   360  1C90  3400               	retlw	0
   361                           
   362                           ;initializer for _tempMin
   363  1C91  344B               	retlw	75
   364  1C92  3400               	retlw	0
   365                           
   366                           	psect	strings
   367  1000                     __pstrings:
   368  1000                     stringtab:
   369  1000                     __stringtab:
   370                           
   371                           ;	String table - string pointers are 1 byte each
   372  1000  1BFF               	btfsc	btemp+1,7
   373  1001  280A               	ljmp	stringcode
   374  1002  1383               	bcf	3,7
   375  1003  187F               	btfsc	btemp+1,0
   376  1004  1783               	bsf	3,7
   377  1005  0800               	movf	0,w
   378  1006  0A84               	incf	4,f
   379  1007  1903               	skipnz
   380  1008  0AFF               	incf	btemp+1,f
   381  1009  0008               	return
   382  100A                     stringcode:
   383  100A                     stringdir:
   384  100A  3010               	movlw	high stringdir
   385  100B  008A               	movwf	10
   386  100C  0804               	movf	4,w
   387  100D  0A84               	incf	4,f
   388  100E  0782               	addwf	2,f
   389  100F                     __stringbase:
   390  100F  3400               	retlw	0
   391  1010                     __end_of__stringtab:
   392  1010                     _dpowers:
   393  1010  3401               	retlw	1
   394  1011  3400               	retlw	0
   395  1012  340A               	retlw	10
   396  1013  3400               	retlw	0
   397  1014  3464               	retlw	100
   398  1015  3400               	retlw	0
   399  1016  34E8               	retlw	232
   400  1017  3403               	retlw	3
   401  1018  3410               	retlw	16
   402  1019  3427               	retlw	39
   403  101A                     __end_of_dpowers:
   404  101A                     _total_period:
   405  101A  34C4               	retlw	196
   406  101B  3409               	retlw	9
   407  101C  3400               	retlw	0
   408  101D  3400               	retlw	0
   409  101E                     __end_of_total_period:
   410  101E                     log@coeff:
   411  101E  3400               	retlw	0
   412  101F  3400               	retlw	0
   413  1020  3400               	retlw	0
   414  1021  3400               	retlw	0
   415  1022  34C4               	retlw	196
   416  1023  34FF               	retlw	255
   417  1024  347F               	retlw	127
   418  1025  343F               	retlw	63
   419  1026  3480               	retlw	128
   420  1027  34EF               	retlw	239
   421  1028  34FF               	retlw	255
   422  1029  34BE               	retlw	190
   423  102A  3490               	retlw	144
   424  102B  34E1               	retlw	225
   425  102C  34A9               	retlw	169
   426  102D  343E               	retlw	62
   427  102E  34EC               	retlw	236
   428  102F  3482               	retlw	130
   429  1030  3476               	retlw	118
   430  1031  34BE               	retlw	190
   431  1032  3482               	retlw	130
   432  1033  34AD               	retlw	173
   433  1034  342B               	retlw	43
   434  1035  343E               	retlw	62
   435  1036  340E               	retlw	14
   436  1037  343C               	retlw	60
   437  1038  34C3               	retlw	195
   438  1039  34BD               	retlw	189
   439  103A  3487               	retlw	135
   440  103B  34D1               	retlw	209
   441  103C  3413               	retlw	19
   442  103D  343D               	retlw	61
   443  103E  3441               	retlw	65
   444  103F  3478               	retlw	120
   445  1040  34D3               	retlw	211
   446  1041  34BB               	retlw	187
   447  1042                     __end_oflog@coeff:
   448  1042                     STR_1:
   449  1042  3420               	retlw	32	;' '
   450  1043  3420               	retlw	32	;' '
   451  1044  3442               	retlw	66	;'B'
   452  1045  344D               	retlw	77	;'M'
   453  1046  3457               	retlw	87	;'W'
   454  1047  3420               	retlw	32	;' '
   455  1048  3441               	retlw	65	;'A'
   456  1049  344C               	retlw	76	;'L'
   457  104A  3420               	retlw	32	;' '
   458  104B  344D               	retlw	77	;'M'
   459  104C  3441               	retlw	65	;'A'
   460  104D  3452               	retlw	82	;'R'
   461  104E  3457               	retlw	87	;'W'
   462  104F  3441               	retlw	65	;'A'
   463  1050  3400               	retlw	0
   464  1051                     STR_2:
   465  1051  3420               	retlw	32	;' '
   466  1052  3420               	retlw	32	;' '
   467  1053  3430               	retlw	48	;'0'
   468  1054  3437               	retlw	55	;'7'
   469  1055  3437               	retlw	55	;'7'
   470  1056  3431               	retlw	49	;'1'
   471  1057  3430               	retlw	48	;'0'
   472  1058  3438               	retlw	56	;'8'
   473  1059  3435               	retlw	53	;'5'
   474  105A  3434               	retlw	52	;'4'
   475  105B  3432               	retlw	50	;'2'
   476  105C  3432               	retlw	50	;'2'
   477  105D  3432               	retlw	50	;'2'
   478  105E  3400               	retlw	0
   479  105F                     STR_3:
   480  105F  3420               	retlw	32	;' '
   481  1060  3420               	retlw	32	;' '
   482  1061  3420               	retlw	32	;' '
   483  1062  3420               	retlw	32	;' '
   484  1063  3420               	retlw	32	;' '
   485  1064  3446               	retlw	70	;'F'
   486  1065  3461               	retlw	97	;'a'
   487  1066  346E               	retlw	110	;'n'
   488  1067  3420               	retlw	32	;' '
   489  1068  3454               	retlw	84	;'T'
   490  1069  3465               	retlw	101	;'e'
   491  106A  3473               	retlw	115	;'s'
   492  106B  3474               	retlw	116	;'t'
   493  106C  3400               	retlw	0
   494  106D                     STR_10:
   495  106D  3457               	retlw	87	;'W'
   496  106E  3469               	retlw	105	;'i'
   497  106F  3472               	retlw	114	;'r'
   498  1070  3465               	retlw	101	;'e'
   499  1071  3420               	retlw	32	;' '
   500  1072  3420               	retlw	32	;' '
   501  1073  3443               	retlw	67	;'C'
   502  1074  3475               	retlw	117	;'u'
   503  1075  3474               	retlw	116	;'t'
   504  1076  3420               	retlw	32	;' '
   505  1077  3421               	retlw	33	;'!'
   506  1078  3421               	retlw	33	;'!'
   507  1079  3400               	retlw	0
   508  107A                     STR_4:
   509  107A  3420               	retlw	32	;' '
   510  107B  3420               	retlw	32	;' '
   511  107C  3420               	retlw	32	;' '
   512  107D  3420               	retlw	32	;' '
   513  107E  3420               	retlw	32	;' '
   514  107F  3446               	retlw	70	;'F'
   515  1080  3461               	retlw	97	;'a'
   516  1081  346E               	retlw	110	;'n'
   517  1082  3420               	retlw	32	;' '
   518  1083  344F               	retlw	79	;'O'
   519  1084  346B               	retlw	107	;'k'
   520  1085  3400               	retlw	0
   521  1086                     STR_7:
   522  1086  3454               	retlw	84	;'T'
   523  1087  3465               	retlw	101	;'e'
   524  1088  346D               	retlw	109	;'m'
   525  1089  3470               	retlw	112	;'p'
   526  108A  3420               	retlw	32	;' '
   527  108B  3449               	retlw	73	;'I'
   528  108C  3473               	retlw	115	;'s'
   529  108D  3420               	retlw	32	;' '
   530  108E  343A               	retlw	58	;':'
   531  108F  3420               	retlw	32	;' '
   532  1090  3400               	retlw	0
   533  1091                     STR_8:
   534  1091  3446               	retlw	70	;'F'
   535  1092  3461               	retlw	97	;'a'
   536  1093  346E               	retlw	110	;'n'
   537  1094  3453               	retlw	83	;'S'
   538  1095  3470               	retlw	112	;'p'
   539  1096  3465               	retlw	101	;'e'
   540  1097  3465               	retlw	101	;'e'
   541  1098  3464               	retlw	100	;'d'
   542  1099  343A               	retlw	58	;':'
   543  109A  3400               	retlw	0
   544  109B                     STR_5:
   545  109B  3425               	retlw	37	;'%'
   546  109C  3433               	retlw	51	;'3'
   547  109D  3464               	retlw	100	;'d'
   548  109E  3420               	retlw	32	;' '
   549  109F  3443               	retlw	67	;'C'
   550  10A0  3400               	retlw	0
   551  10A1                     STR_6:
   552  10A1  3425               	retlw	37	;'%'
   553  10A2  3433               	retlw	51	;'3'
   554  10A3  3464               	retlw	100	;'d'
   555  10A4  3400               	retlw	0
   556  10A5                     STR_9:
   557  10A5  3425               	retlw	37	;'%'
   558  10A6  3400               	retlw	0
   559  106D                     
   560                           	psect	nvBANK0
   561  006F                     __pnvBANK0:
   562  006F                     _i2c_add:
   563  006F                     	ds	1
   564  0015                     _CCPR1L	set	21
   565  0016                     _CCPR1H	set	22
   566  001E                     _ADRESH	set	30
   567  001F                     _ADCON0bits	set	31
   568  001F                     _ADCON0	set	31
   569  000B                     _INTCON	set	11
   570  0017                     _CCP1CON	set	23
   571  000E                     _TMR1L	set	14
   572  000F                     _TMR1H	set	15
   573  0010                     _T1CON	set	16
   574  0013                     _SSPBUF	set	19
   575  0014                     _SSPCON	set	20
   576  00F9                     _GO_DONE	set	249
   577  0062                     _CCP1IF	set	98
   578  003A                     _RC2	set	58
   579  0031                     _RB1	set	49
   580  0063                     _SSPIF	set	99
   581  009E                     _ADRESL	set	158
   582  009F                     _ADCON1	set	159
   583  0086                     _TRISBbits	set	134
   584  0087                     _TRISCbits	set	135
   585  0093                     _SSPADD	set	147
   586  0094                     _SSPSTAT	set	148
   587  0091                     _SSPCON2	set	145
   588  0462                     _CCP1IE	set	1122
   589  048B                     _RCEN	set	1163
   590  048E                     _ACKSTAT	set	1166
   591  048C                     _ACKEN	set	1164
   592  048D                     _ACKDT	set	1165
   593  048A                     _PEN	set	1162
   594  0489                     _RSEN	set	1161
   595  0488                     _SEN	set	1160
   596  043C                     _TRISC4	set	1084
   597  043B                     _TRISC3	set	1083
   598                           
   599                           	psect	cinit
   600  000F                     start_initialization:	
   601                           ; #config settings
   602                           
   603  000F                     __initialization:
   604                           
   605                           ; Initialize objects allocated to BANK3
   606  000F  1783               	bsf	3,7	;select IRP bank2
   607  0010  30D8               	movlw	low (__pdataBANK3+6)
   608  0011  00FD               	movwf	btemp+-1
   609  0012  301C               	movlw	high __pidataBANK3
   610  0013  00FE               	movwf	btemp
   611  0014  308D               	movlw	low __pidataBANK3
   612  0015  00FF               	movwf	btemp+1
   613  0016  30D2               	movlw	low __pdataBANK3
   614  0017  0084               	movwf	4
   615  0018  160A  158A  24EB  120A  118A  	fcall	init_ram0
   616                           
   617                           ; Initialize objects allocated to BANK1
   618  001D  1383               	bcf	3,7	;select IRP bank0
   619  001E  30F0               	movlw	low (__pdataBANK1+4)
   620  001F  00FD               	movwf	btemp+-1
   621  0020  301C               	movlw	high __pidataBANK1
   622  0021  00FE               	movwf	btemp
   623  0022  3089               	movlw	low __pidataBANK1
   624  0023  00FF               	movwf	btemp+1
   625  0024  30EC               	movlw	low __pdataBANK1
   626  0025  0084               	movwf	4
   627  0026  160A  158A  24EB  120A  118A  	fcall	init_ram0
   628                           
   629                           ; Initialize objects allocated to COMMON
   630  002B  120A  158A  2000  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   631  0030  00F9               	movwf	__pdataCOMMON& (0+127)
   632  0031  120A  158A  2001  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   633  0036  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   634  0037  120A  158A  2002  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   635  003C  00FB               	movwf	(__pdataCOMMON+2)& (0+127)
   636                           
   637                           ; Clear objects allocated to BANK3
   638  003D  1783               	bsf	3,7	;select IRP bank2
   639  003E  3090               	movlw	low __pbssBANK3
   640  003F  0084               	movwf	4
   641  0040  30D2               	movlw	low (__pbssBANK3+66)
   642  0041  160A  158A  2493  120A  118A  	fcall	clear_ram0
   643                           
   644                           ; Clear objects allocated to BANK1
   645  0046  1383               	bcf	3,7	;select IRP bank0
   646  0047  30E2               	movlw	low __pbssBANK1
   647  0048  0084               	movwf	4
   648  0049  30EC               	movlw	low (__pbssBANK1+10)
   649  004A  160A  158A  2493  120A  118A  	fcall	clear_ram0
   650                           
   651                           ; Clear objects allocated to COMMON
   652  004F  01F6               	clrf	__pbssCOMMON& (0+127)
   653  0050  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   654  0051  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   655  0052                     end_of_initialization:	
   656                           ;End of C runtime variable initialization code
   657                           
   658  0052                     __end_of__initialization:
   659  0052  0183               	clrf	3
   660  0053  120A  118A  2856   	ljmp	_main	;jump to C main() function
   661                           
   662                           	psect	bssCOMMON
   663  0076                     __pbssCOMMON:
   664  0076                     _RTemperature:
   665  0076                     	ds	2
   666  0078                     _RS:
   667  0078                     	ds	1
   668                           
   669                           	psect	dataCOMMON
   670  0079                     __pdataCOMMON:
   671  0079                     _c:
   672  0079                     	ds	2
   673  007B                     _BackLight_State:
   674  007B                     	ds	1
   675                           
   676                           	psect	bssBANK1
   677  00E2                     __pbssBANK1:
   678  00E2                     _i:
   679  00E2                     	ds	2
   680  00E4                     _RAlarm:
   681  00E4                     	ds	2
   682  00E6                     _Temperature:
   683  00E6                     	ds	2
   684  00E8                     _VRT:
   685  00E8                     	ds	4
   686                           
   687                           	psect	dataBANK1
   688  00EC                     __pdataBANK1:
   689  00EC                     _current_period:
   690  00EC                     	ds	4
   691                           
   692                           	psect	bssBANK3
   693  0190                     __pbssBANK3:
   694  0190                     _CCPR:
   695  0190                     	ds	4
   696  0194                     _VR:
   697  0194                     	ds	4
   698  0198                     _RT:
   699  0198                     	ds	4
   700  019C                     _Voltage:
   701  019C                     	ds	4
   702  01A0                     _errno:
   703  01A0                     	ds	2
   704  01A2                     _i2:
   705  01A2                     	ds	2
   706  01A4                     _fanLCD:
   707  01A4                     	ds	2
   708  01A6                     _fanSpeed:
   709  01A6                     	ds	2
   710  01A8                     _AN0RES:
   711  01A8                     	ds	2
   712  01AA                     _fanSTR:
   713  01AA                     	ds	16
   714  01BA                     _TempSTR:
   715  01BA                     	ds	16
   716  01CA                     _T0:
   717  01CA                     	ds	4
   718  01CE                     _ln:
   719  01CE                     	ds	4
   720                           
   721                           	psect	dataBANK3
   722  01D2                     __pdataBANK3:
   723  01D2                     _c2:
   724  01D2                     	ds	2
   725  01D4                     _tempMax:
   726  01D4                     	ds	2
   727  01D6                     _tempMin:
   728  01D6                     	ds	2
   729                           
   730                           	psect	inittext
   731  1CE7                     init_fetch0:	
   732                           ;	Called with low address in FSR and high address in W
   733                           
   734  1CE7  087E               	movf	btemp,w
   735  1CE8  008A               	movwf	10
   736  1CE9  087F               	movf	btemp+1,w
   737  1CEA  0082               	movwf	2
   738  1CEB                     init_ram0:	
   739                           ;Called with:
   740                           ;	high address of idata address in btemp 
   741                           ;	low address of idata address in btemp+1 
   742                           ;	low address of data in FSR
   743                           ;	high address + 1 of data in btemp-1
   744                           
   745  1CEB  160A  158A  24E7  160A  158A  	fcall	init_fetch0
   746  1CF0  0080               	movwf	0
   747  1CF1  0A84               	incf	4,f
   748  1CF2  0804               	movf	4,w
   749  1CF3  067D               	xorwf	btemp+-1,w
   750  1CF4  1903               	btfsc	3,2
   751  1CF5  3400               	retlw	0
   752  1CF6  0AFF               	incf	btemp+1,f
   753  1CF7  1903               	btfsc	3,2
   754  1CF8  0AFE               	incf	btemp,f
   755  1CF9  2CEB               	goto	init_ram0
   756                           
   757                           	psect	clrtext
   758  1C93                     clear_ram0:	
   759                           ;	Called with FSR containing the base address, and
   760                           ;	W with the last address+1
   761                           
   762  1C93  0064               	clrwdt	;clear the watchdog before getting into this loop
   763  1C94                     clrloop0:
   764  1C94  0180               	clrf	0	;clear RAM location pointed to by FSR
   765  1C95  0A84               	incf	4,f	;increment pointer
   766  1C96  0604               	xorwf	4,w	;XOR with final address
   767  1C97  1903               	btfsc	3,2	;have we reached the end yet?
   768  1C98  3400               	retlw	0	;all done for this memory range, return
   769  1C99  0604               	xorwf	4,w	;XOR again to restore value
   770  1C9A  2C94               	goto	clrloop0	;do the next byte
   771                           
   772                           	psect	cstackBANK3
   773  01D8                     __pcstackBANK3:
   774  01D8                     ??_main:
   775                           
   776                           ; 1 bytes @ 0x0
   777  01D8                     	ds	3
   778                           
   779                           	psect	cstackBANK1
   780  00A0                     __pcstackBANK1:
   781  00A0                     ?_eval_poly:
   782  00A0                     ?___fldiv:	
   783                           ; 4 bytes @ 0x0
   784                           
   785  00A0                     ___fldiv@a:	
   786                           ; 4 bytes @ 0x0
   787                           
   788  00A0                     eval_poly@x:	
   789                           ; 4 bytes @ 0x0
   790                           
   791                           
   792                           ; 4 bytes @ 0x0
   793  00A0                     	ds	4
   794  00A4                     eval_poly@d:
   795  00A4                     ___fldiv@b:	
   796                           ; 1 bytes @ 0x4
   797                           
   798                           
   799                           ; 4 bytes @ 0x4
   800  00A4                     	ds	1
   801  00A5                     eval_poly@n:
   802                           
   803                           ; 2 bytes @ 0x5
   804  00A5                     	ds	2
   805  00A7                     eval_poly@res:
   806                           
   807                           ; 4 bytes @ 0x7
   808  00A7                     	ds	1
   809  00A8                     ___fldiv@rem:
   810                           
   811                           ; 4 bytes @ 0x8
   812  00A8                     	ds	4
   813  00AC                     ___fldiv@sign:
   814                           
   815                           ; 1 bytes @ 0xC
   816  00AC                     	ds	1
   817  00AD                     ___fldiv@new_exp:
   818                           
   819                           ; 2 bytes @ 0xD
   820  00AD                     	ds	2
   821  00AF                     ___fldiv@grs:
   822                           
   823                           ; 4 bytes @ 0xF
   824  00AF                     	ds	4
   825  00B3                     ___fldiv@bexp:
   826                           
   827                           ; 1 bytes @ 0x13
   828  00B3                     	ds	1
   829  00B4                     ___fldiv@aexp:
   830                           
   831                           ; 1 bytes @ 0x14
   832  00B4                     	ds	1
   833  00B5                     ?_map:
   834  00B5                     ?_log:	
   835                           ; 4 bytes @ 0x15
   836                           
   837  00B5                     map@x:	
   838                           ; 4 bytes @ 0x15
   839                           
   840  00B5                     log@x:	
   841                           ; 4 bytes @ 0x15
   842                           
   843                           
   844                           ; 4 bytes @ 0x15
   845  00B5                     	ds	4
   846  00B9                     log@exponent:
   847  00B9                     map@in_min:	
   848                           ; 2 bytes @ 0x19
   849                           
   850                           
   851                           ; 4 bytes @ 0x19
   852  00B9                     	ds	4
   853  00BD                     map@in_max:
   854                           
   855                           ; 4 bytes @ 0x1D
   856  00BD                     	ds	4
   857  00C1                     map@out_min:
   858                           
   859                           ; 4 bytes @ 0x21
   860  00C1                     	ds	4
   861  00C5                     map@out_max:
   862                           
   863                           ; 4 bytes @ 0x25
   864  00C5                     	ds	4
   865  00C9                     _map$1060:
   866                           
   867                           ; 4 bytes @ 0x29
   868  00C9                     	ds	4
   869  00CD                     ?___fltol:
   870  00CD                     ___fltol@f1:	
   871                           ; 4 bytes @ 0x2D
   872                           
   873                           
   874                           ; 4 bytes @ 0x2D
   875  00CD                     	ds	4
   876  00D1                     ??___fltol:
   877                           
   878                           ; 1 bytes @ 0x31
   879  00D1                     	ds	5
   880  00D6                     ___fltol@sign1:
   881                           
   882                           ; 1 bytes @ 0x36
   883  00D6                     	ds	1
   884  00D7                     ___fltol@exp1:
   885                           
   886                           ; 1 bytes @ 0x37
   887  00D7                     	ds	1
   888  00D8                     ?_GetTemp:
   889                           
   890                           ; 2 bytes @ 0x38
   891  00D8                     	ds	2
   892  00DA                     ??_GetTemp:
   893                           
   894                           ; 1 bytes @ 0x3A
   895  00DA                     	ds	4
   896  00DE                     _GetTemp$1061:
   897                           
   898                           ; 4 bytes @ 0x3E
   899  00DE                     	ds	4
   900                           
   901                           	psect	cstackCOMMON
   902  0070                     __pcstackCOMMON:
   903  0070                     ?_isdigit:
   904  0070                     ?_IO_Expander_Write:	
   905                           ; 1 bit 
   906                           
   907  0070                     ?_LCD_CMD:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_ADC_Init:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_I2C_Master_Init:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_I2C_Master_Wait:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_I2C_Master_Start:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ?_I2C_Master_Stop:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ?_I2C_Master_Write:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ?_LCD_Init:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_LCD_Write_4Bit:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_LCD_Write_Char:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_LCD_Clear:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_main:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_ISR:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ??_ISR:	
   947                           ; 1 bytes @ 0x0
   948                           
   949                           
   950                           ; 1 bytes @ 0x0
   951  0070                     	ds	6
   952                           
   953                           	psect	cstackBANK0
   954  0020                     __pcstackBANK0:
   955  0020                     ?___fleq:
   956  0020                     ?___flge:	
   957                           ; 1 bit 
   958                           
   959  0020                     ??_ADC_Init:	
   960                           ; 1 bit 
   961                           
   962  0020                     ??_isdigit:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0020                     ??_I2C_Master_Init:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0020                     ??_I2C_Master_Wait:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0020                     ??_I2C_Master_Start:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0020                     ??_I2C_Master_Stop:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0020                     ??_I2C_Master_Write:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0020                     ?__Umul8_16:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0020                     ?_ADC_Read:	
   984                           ; 2 bytes @ 0x0
   985                           
   986  0020                     ?___wmul:	
   987                           ; 2 bytes @ 0x0
   988                           
   989  0020                     ?___lwdiv:	
   990                           ; 2 bytes @ 0x0
   991                           
   992  0020                     I2C_Master_Write@data:	
   993                           ; 2 bytes @ 0x0
   994                           
   995  0020                     __Umul8_16@multiplicand:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0020                     _isdigit$791:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0020                     ___wmul@multiplier:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0020                     ___lwdiv@divisor:	
  1005                           ; 2 bytes @ 0x0
  1006                           
  1007  0020                     ___fleq@ff1:	
  1008                           ; 2 bytes @ 0x0
  1009                           
  1010  0020                     ___flge@ff1:	
  1011                           ; 4 bytes @ 0x0
  1012                           
  1013                           
  1014                           ; 4 bytes @ 0x0
  1015  0020                     	ds	1
  1016  0021                     ??_IO_Expander_Write:
  1017  0021                     IO_Expander_Write@Data:	
  1018                           ; 1 bytes @ 0x1
  1019                           
  1020  0021                     isdigit@c:	
  1021                           ; 1 bytes @ 0x1
  1022                           
  1023                           
  1024                           ; 1 bytes @ 0x1
  1025  0021                     	ds	1
  1026  0022                     ??__Umul8_16:
  1027  0022                     ??_LCD_Write_4Bit:	
  1028                           ; 1 bytes @ 0x2
  1029                           
  1030  0022                     ??_ADC_Read:	
  1031                           ; 1 bytes @ 0x2
  1032                           
  1033  0022                     ___wmul@multiplicand:	
  1034                           ; 1 bytes @ 0x2
  1035                           
  1036  0022                     ___lwdiv@dividend:	
  1037                           ; 2 bytes @ 0x2
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x2
  1041  0022                     	ds	1
  1042  0023                     LCD_Write_4Bit@Nibble:
  1043                           
  1044                           ; 1 bytes @ 0x3
  1045  0023                     	ds	1
  1046  0024                     ??_LCD_CMD:
  1047  0024                     ??_LCD_Write_Char:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050  0024                     ??___wmul:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053  0024                     ??___lwdiv:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056  0024                     ADC_Read@ANC:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059  0024                     ___wmul@product:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062  0024                     __Umul8_16@product:	
  1063                           ; 2 bytes @ 0x4
  1064                           
  1065  0024                     ___fleq@ff2:	
  1066                           ; 2 bytes @ 0x4
  1067                           
  1068  0024                     ___flge@ff2:	
  1069                           ; 4 bytes @ 0x4
  1070                           
  1071                           
  1072                           ; 4 bytes @ 0x4
  1073  0024                     	ds	1
  1074  0025                     ?_Alarms:
  1075  0025                     ?___xxtofl:	
  1076                           ; 2 bytes @ 0x5
  1077                           
  1078  0025                     LCD_CMD@CMD:	
  1079                           ; 4 bytes @ 0x5
  1080                           
  1081  0025                     LCD_Write_Char@Data:	
  1082                           ; 1 bytes @ 0x5
  1083                           
  1084  0025                     ___lwdiv@counter:	
  1085                           ; 1 bytes @ 0x5
  1086                           
  1087  0025                     ___xxtofl@val:	
  1088                           ; 1 bytes @ 0x5
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x5
  1092  0025                     	ds	1
  1093  0026                     ??_LCD_Init:
  1094  0026                     ?_LCD_Write_String:	
  1095                           ; 1 bytes @ 0x6
  1096                           
  1097  0026                     ?_LCD_Set_Cursor:	
  1098                           ; 1 bytes @ 0x6
  1099                           
  1100  0026                     ??_LCD_Clear:	
  1101                           ; 1 bytes @ 0x6
  1102                           
  1103  0026                     LCD_Set_Cursor@COL:	
  1104                           ; 1 bytes @ 0x6
  1105                           
  1106  0026                     LCD_Write_String@Str:	
  1107                           ; 1 bytes @ 0x6
  1108                           
  1109  0026                     ___lwdiv@quotient:	
  1110                           ; 2 bytes @ 0x6
  1111                           
  1112  0026                     __Umul8_16@word_mpld:	
  1113                           ; 2 bytes @ 0x6
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0x6
  1117  0026                     	ds	1
  1118  0027                     ??_Alarms:
  1119  0027                     ??_LCD_Set_Cursor:	
  1120                           ; 1 bytes @ 0x7
  1121                           
  1122  0027                     LCD_Set_Cursor@ROW:	
  1123                           ; 1 bytes @ 0x7
  1124                           
  1125                           
  1126                           ; 1 bytes @ 0x7
  1127  0027                     	ds	1
  1128  0028                     ??_LCD_Write_String:
  1129  0028                     ??___fleq:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132  0028                     ??___flge:	
  1133                           ; 1 bytes @ 0x8
  1134                           
  1135  0028                     ?___lwmod:	
  1136                           ; 1 bytes @ 0x8
  1137                           
  1138  0028                     LCD_Init@I2C_Add:	
  1139                           ; 2 bytes @ 0x8
  1140                           
  1141  0028                     __Umul8_16@multiplier:	
  1142                           ; 1 bytes @ 0x8
  1143                           
  1144  0028                     ___lwmod@divisor:	
  1145                           ; 1 bytes @ 0x8
  1146                           
  1147                           
  1148                           ; 2 bytes @ 0x8
  1149  0028                     	ds	1
  1150  0029                     ??___xxtofl:
  1151                           
  1152                           ; 1 bytes @ 0x9
  1153  0029                     	ds	1
  1154  002A                     ___lwmod@dividend:
  1155                           
  1156                           ; 2 bytes @ 0xA
  1157  002A                     	ds	1
  1158  002B                     LCD_Write_String@i:
  1159                           
  1160                           ; 2 bytes @ 0xB
  1161  002B                     	ds	1
  1162  002C                     ??___lwmod:
  1163  002C                     ?_frexp:	
  1164                           ; 1 bytes @ 0xC
  1165                           
  1166  002C                     frexp@value:	
  1167                           ; 4 bytes @ 0xC
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0xC
  1171  002C                     	ds	1
  1172  002D                     ___lwmod@counter:
  1173  002D                     ___xxtofl@sign:	
  1174                           ; 1 bytes @ 0xD
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0xD
  1178  002D                     	ds	1
  1179  002E                     ?_sprintf:
  1180  002E                     sprintf@f:	
  1181                           ; 2 bytes @ 0xE
  1182                           
  1183  002E                     ___xxtofl@exp:	
  1184                           ; 1 bytes @ 0xE
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0xE
  1188  002E                     	ds	1
  1189  002F                     ___xxtofl@arg:
  1190                           
  1191                           ; 4 bytes @ 0xF
  1192  002F                     	ds	1
  1193  0030                     frexp@eptr:
  1194                           
  1195                           ; 1 bytes @ 0x10
  1196  0030                     	ds	1
  1197  0031                     ??_sprintf:
  1198  0031                     ??_frexp:	
  1199                           ; 1 bytes @ 0x11
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0x11
  1203  0031                     	ds	2
  1204  0033                     ?___fladd:
  1205  0033                     ___fladd@b:	
  1206                           ; 4 bytes @ 0x13
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x13
  1210  0033                     	ds	1
  1211  0034                     sprintf@ap:
  1212                           
  1213                           ; 1 bytes @ 0x14
  1214  0034                     	ds	1
  1215  0035                     sprintf@prec:
  1216                           
  1217                           ; 1 bytes @ 0x15
  1218  0035                     	ds	1
  1219  0036                     sprintf@flag:
  1220                           
  1221                           ; 1 bytes @ 0x16
  1222  0036                     	ds	1
  1223  0037                     sprintf@val:
  1224  0037                     ___fladd@a:	
  1225                           ; 2 bytes @ 0x17
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0x17
  1229  0037                     	ds	2
  1230  0039                     sprintf@sp:
  1231                           
  1232                           ; 1 bytes @ 0x19
  1233  0039                     	ds	1
  1234  003A                     sprintf@width:
  1235                           
  1236                           ; 2 bytes @ 0x1A
  1237  003A                     	ds	1
  1238  003B                     ??___fladd:
  1239                           
  1240                           ; 1 bytes @ 0x1B
  1241  003B                     	ds	1
  1242  003C                     sprintf@c:
  1243                           
  1244                           ; 1 bytes @ 0x1C
  1245  003C                     	ds	7
  1246  0043                     ___fladd@signs:
  1247                           
  1248                           ; 1 bytes @ 0x23
  1249  0043                     	ds	1
  1250  0044                     ___fladd@aexp:
  1251                           
  1252                           ; 1 bytes @ 0x24
  1253  0044                     	ds	1
  1254  0045                     ___fladd@bexp:
  1255                           
  1256                           ; 1 bytes @ 0x25
  1257  0045                     	ds	1
  1258  0046                     ___fladd@grs:
  1259                           
  1260                           ; 1 bytes @ 0x26
  1261  0046                     	ds	1
  1262  0047                     ?___flsub:
  1263  0047                     ___flsub@a:	
  1264                           ; 4 bytes @ 0x27
  1265                           
  1266                           
  1267                           ; 4 bytes @ 0x27
  1268  0047                     	ds	4
  1269  004B                     ___flsub@b:
  1270                           
  1271                           ; 4 bytes @ 0x2B
  1272  004B                     	ds	4
  1273  004F                     ??___flsub:
  1274  004F                     ?___flmul:	
  1275                           ; 1 bytes @ 0x2F
  1276                           
  1277  004F                     ___flmul@b:	
  1278                           ; 4 bytes @ 0x2F
  1279                           
  1280                           
  1281                           ; 4 bytes @ 0x2F
  1282  004F                     	ds	4
  1283  0053                     ___flmul@a:
  1284                           
  1285                           ; 4 bytes @ 0x33
  1286  0053                     	ds	4
  1287  0057                     ??___flmul:
  1288                           
  1289                           ; 1 bytes @ 0x37
  1290  0057                     	ds	5
  1291  005C                     ___flmul@sign:
  1292                           
  1293                           ; 1 bytes @ 0x3C
  1294  005C                     	ds	1
  1295  005D                     ___flmul@aexp:
  1296                           
  1297                           ; 1 bytes @ 0x3D
  1298  005D                     	ds	1
  1299  005E                     ___flmul@grs:
  1300                           
  1301                           ; 4 bytes @ 0x3E
  1302  005E                     	ds	4
  1303  0062                     ___flmul@bexp:
  1304                           
  1305                           ; 1 bytes @ 0x42
  1306  0062                     	ds	1
  1307  0063                     ___flmul@prod:
  1308                           
  1309                           ; 4 bytes @ 0x43
  1310  0063                     	ds	4
  1311  0067                     ___flmul@temp:
  1312                           
  1313                           ; 2 bytes @ 0x47
  1314  0067                     	ds	2
  1315  0069                     ??_eval_poly:
  1316  0069                     ??___fldiv:	
  1317                           ; 1 bytes @ 0x49
  1318                           
  1319                           
  1320                           ; 1 bytes @ 0x49
  1321  0069                     	ds	5
  1322  006E                     ??_map:
  1323  006E                     ??_log:	
  1324                           ; 1 bytes @ 0x4E
  1325                           
  1326                           
  1327                           ; 1 bytes @ 0x4E
  1328  006E                     	ds	1
  1329                           
  1330                           	psect	maintext
  1331  0056                     __pmaintext:	
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1334 ;;
  1335 ;; *************** function _main *****************
  1336 ;; Defined at:
  1337 ;;		line 65 in file "AFC.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : B00/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0
  1353 ;;      Temps:          0       0       0       3       0
  1354 ;;      Totals:         0       0       0       3       0
  1355 ;;Total ram usage:        3 bytes
  1356 ;; Hardware stack levels required when called:    7
  1357 ;; This function calls:
  1358 ;;		_ADC_Init
  1359 ;;		_Alarms
  1360 ;;		_GetTemp
  1361 ;;		_I2C_Master_Init
  1362 ;;		_LCD_Clear
  1363 ;;		_LCD_Init
  1364 ;;		_LCD_Set_Cursor
  1365 ;;		_LCD_Write_String
  1366 ;;		___fltol
  1367 ;;		___xxtofl
  1368 ;;		_map
  1369 ;;		_sprintf
  1370 ;; This function is called by:
  1371 ;;		Startup code after reset
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _main
  1377  0056                     _main:
  1378  0056                     l4096:	
  1379                           ;incstack = 0
  1380                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1381                           
  1382                           
  1383                           ;AFC.c: 67: I2C_Master_Init();
  1384  0056  160A  158A  24AD  120A  118A  	fcall	_I2C_Master_Init
  1385                           
  1386                           ;AFC.c: 68: LCD_Init(0x4E);
  1387  005B  304E               	movlw	78
  1388  005C  160A  118A  20EE  120A  118A  	fcall	_LCD_Init
  1389                           
  1390                           ;AFC.c: 69: LCD_Clear();
  1391  0061  160A  158A  24C7  120A  118A  	fcall	_LCD_Clear
  1392                           
  1393                           ;AFC.c: 70: ADC_Init();
  1394  0066  160A  158A  249B  120A  118A  	fcall	_ADC_Init
  1395  006B                     l4098:
  1396                           
  1397                           ;AFC.c: 73: TRISCbits.TRISC2 = 0;
  1398  006B  1683               	bsf	3,5	;RP0=1, select bank1
  1399  006C  1303               	bcf	3,6	;RP1=0, select bank1
  1400  006D  1107               	bcf	7,2	;volatile
  1401  006E                     l4100:
  1402                           
  1403                           ;AFC.c: 74: TRISBbits.TRISB1 = 0;
  1404  006E  1086               	bcf	6,1	;volatile
  1405  006F                     l4102:
  1406                           
  1407                           ;AFC.c: 75: RB1 = 0;
  1408  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0071  1086               	bcf	6,1	;volatile
  1411  0072                     l4104:
  1412                           
  1413                           ;AFC.c: 76: RC2 = 1;
  1414  0072  1507               	bsf	7,2	;volatile
  1415  0073                     l4106:
  1416                           
  1417                           ;AFC.c: 81: T1CON = 0x30;
  1418  0073  3030               	movlw	48
  1419  0074  0090               	movwf	16	;volatile
  1420  0075                     l4108:
  1421                           
  1422                           ;AFC.c: 82: TMR1H = 0;
  1423  0075  018F               	clrf	15	;volatile
  1424  0076                     l4110:
  1425                           
  1426                           ;AFC.c: 83: TMR1L = 0;
  1427  0076  018E               	clrf	14	;volatile
  1428  0077                     l4112:
  1429                           
  1430                           ;AFC.c: 85: CCP1CON = 0x0b;
  1431  0077  300B               	movlw	11
  1432  0078  0097               	movwf	23	;volatile
  1433  0079                     l4114:
  1434                           
  1435                           ;AFC.c: 86: CCPR = 0;
  1436  0079  3000               	movlw	0
  1437  007A  1683               	bsf	3,5	;RP0=1, select bank3
  1438  007B  1703               	bsf	3,6	;RP1=1, select bank3
  1439  007C  0093               	movwf	(_CCPR+3)^(0+384)
  1440  007D  3000               	movlw	0
  1441  007E  0092               	movwf	(_CCPR+2)^(0+384)
  1442  007F  3000               	movlw	0
  1443  0080  0091               	movwf	(_CCPR+1)^(0+384)
  1444  0081  3000               	movlw	0
  1445  0082  0090               	movwf	_CCPR^(0+384)
  1446  0083                     l4116:
  1447                           
  1448                           ;AFC.c: 87: CCP1IF = 0;
  1449  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0085  110C               	bcf	12,2	;volatile
  1452  0086                     l4118:
  1453                           
  1454                           ;AFC.c: 88: CCP1IE = 1;
  1455  0086  1683               	bsf	3,5	;RP0=1, select bank1
  1456  0087  1303               	bcf	3,6	;RP1=0, select bank1
  1457  0088  150C               	bsf	12,2	;volatile
  1458  0089                     l4120:
  1459                           
  1460                           ;AFC.c: 89: INTCON = 0xC0;
  1461  0089  30C0               	movlw	192
  1462  008A  008B               	movwf	11	;volatile
  1463  008B                     l4122:
  1464                           
  1465                           ;AFC.c: 90: T1CON = 0x31;
  1466  008B  3031               	movlw	49
  1467  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1468  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1469  008E  0090               	movwf	16	;volatile
  1470  008F                     l4124:
  1471                           
  1472                           ;AFC.c: 93: LCD_Clear();
  1473  008F  160A  158A  24C7  120A  118A  	fcall	_LCD_Clear
  1474  0094                     l4126:
  1475                           
  1476                           ;AFC.c: 94: LCD_Set_Cursor(1, 1);
  1477  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0096  01A6               	clrf	LCD_Set_Cursor@COL
  1480  0097  0AA6               	incf	LCD_Set_Cursor@COL,f
  1481  0098  3001               	movlw	1
  1482  0099  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  1483  009E                     l4128:
  1484                           
  1485                           ;AFC.c: 95: LCD_Write_String("  BMW AL MARWA");
  1486  009E  3033               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1487  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1488  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1489  00A1  00A6               	movwf	LCD_Write_String@Str
  1490  00A2  3080               	movlw	128
  1491  00A3  00A7               	movwf	LCD_Write_String@Str+1
  1492  00A4  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  1493  00A9                     l4130:
  1494                           
  1495                           ;AFC.c: 96: LCD_Set_Cursor(2, 1);
  1496  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1497  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1498  00AB  01A6               	clrf	LCD_Set_Cursor@COL
  1499  00AC  0AA6               	incf	LCD_Set_Cursor@COL,f
  1500  00AD  3002               	movlw	2
  1501  00AE  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  1502  00B3                     l4132:
  1503                           
  1504                           ;AFC.c: 97: LCD_Write_String("  07710854222");
  1505  00B3  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1506  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1507  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1508  00B6  00A6               	movwf	LCD_Write_String@Str
  1509  00B7  3080               	movlw	128
  1510  00B8  00A7               	movwf	LCD_Write_String@Str+1
  1511  00B9  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  1512  00BE                     l4134:
  1513                           
  1514                           ;AFC.c: 98: RB1 = 1;
  1515  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1516  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1517  00C0  1486               	bsf	6,1	;volatile
  1518                           
  1519                           ;AFC.c: 99: _delay((unsigned long)((5000)*(8000000/4000.0)));
  1520  00C1  3033               	movlw	51
  1521  00C2  1683               	bsf	3,5	;RP0=1, select bank3
  1522  00C3  1703               	bsf	3,6	;RP1=1, select bank3
  1523  00C4  00DA               	movwf	(??_main^(0+384)+2)
  1524  00C5  30BB               	movlw	187
  1525  00C6  00D9               	movwf	(??_main^(0+384)+1)
  1526  00C7  30DF               	movlw	223
  1527  00C8  00D8               	movwf	??_main^(0+384)
  1528  00C9                     u5597:
  1529  00C9  0BD8               	decfsz	??_main^(0+384),f
  1530  00CA  28C9               	goto	u5597
  1531  00CB  0BD9               	decfsz	(??_main^(0+384)+1),f
  1532  00CC  28C9               	goto	u5597
  1533  00CD  0BDA               	decfsz	(??_main^(0+384)+2),f
  1534  00CE  28C9               	goto	u5597
  1535  00CF                     l4136:
  1536                           
  1537                           ;AFC.c: 100: RB1 = 0;
  1538  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1539  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1540  00D1  1086               	bcf	6,1	;volatile
  1541  00D2                     l4138:
  1542                           
  1543                           ;AFC.c: 101: LCD_Clear();
  1544  00D2  160A  158A  24C7  120A  118A  	fcall	_LCD_Clear
  1545  00D7                     l4140:
  1546                           
  1547                           ;AFC.c: 102: LCD_Set_Cursor(1, 1);
  1548  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1549  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1550  00D9  01A6               	clrf	LCD_Set_Cursor@COL
  1551  00DA  0AA6               	incf	LCD_Set_Cursor@COL,f
  1552  00DB  3001               	movlw	1
  1553  00DC  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  1554  00E1                     l4142:
  1555                           
  1556                           ;AFC.c: 103: LCD_Write_String("     Fan Test");
  1557  00E1  3050               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1558  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1559  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1560  00E4  00A6               	movwf	LCD_Write_String@Str
  1561  00E5  3080               	movlw	128
  1562  00E6  00A7               	movwf	LCD_Write_String@Str+1
  1563  00E7  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  1564  00EC  2913               	goto	l4152
  1565  00ED                     l4144:
  1566                           
  1567                           ;AFC.c: 105: current_period = c;
  1568  00ED  0879               	movf	_c,w
  1569  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1570  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1571  00F0  00EC               	movwf	_current_period^(0+128)
  1572  00F1  087A               	movf	_c+1,w
  1573  00F2  00ED               	movwf	(_current_period+1)^(0+128)
  1574  00F3  3000               	movlw	0
  1575  00F4  1BED               	btfsc	(_current_period+1)^(0+128),7
  1576  00F5  30FF               	movlw	255
  1577  00F6  00EE               	movwf	(_current_period+2)^(0+128)
  1578  00F7  00EF               	movwf	(_current_period+3)^(0+128)
  1579  00F8                     l4146:
  1580                           
  1581                           ;AFC.c: 106: c = c + 5;
  1582  00F8  0879               	movf	_c,w
  1583  00F9  3E05               	addlw	5
  1584  00FA  00F9               	movwf	_c
  1585  00FB  087A               	movf	_c+1,w
  1586  00FC  1803               	skipnc
  1587  00FD  3E01               	addlw	1
  1588  00FE  3E00               	addlw	0
  1589  00FF  00FA               	movwf	_c+1
  1590  0100                     l4148:
  1591                           
  1592                           ;AFC.c: 107: _delay((unsigned long)((10)*(8000000/4000.0)));
  1593  0100  301A               	movlw	26
  1594  0101  1683               	bsf	3,5	;RP0=1, select bank3
  1595  0102  1703               	bsf	3,6	;RP1=1, select bank3
  1596  0103  00D9               	movwf	(??_main^(0+384)+1)
  1597  0104  30F7               	movlw	247
  1598  0105  00D8               	movwf	??_main^(0+384)
  1599  0106                     u5607:
  1600  0106  0BD8               	decfsz	??_main^(0+384),f
  1601  0107  2906               	goto	u5607
  1602  0108  0BD9               	decfsz	(??_main^(0+384)+1),f
  1603  0109  2906               	goto	u5607
  1604  010A  290B               	nop2
  1605  010B                     l4150:
  1606  010B  3001               	movlw	1
  1607  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1608  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1609  010E  07E2               	addwf	_i^(0+128),f
  1610  010F  1803               	skipnc
  1611  0110  0AE3               	incf	(_i+1)^(0+128),f
  1612  0111  3000               	movlw	0
  1613  0112  07E3               	addwf	(_i+1)^(0+128),f
  1614  0113                     l4152:
  1615  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1616  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1617  0115  0863               	movf	(_i+1)^(0+128),w
  1618  0116  3A80               	xorlw	128
  1619  0117  00FF               	movwf	btemp+1
  1620  0118  3080               	movlw	128
  1621  0119  027F               	subwf	btemp+1,w
  1622  011A  1D03               	skipz
  1623  011B  291E               	goto	u5505
  1624  011C  3097               	movlw	151
  1625  011D  0262               	subwf	_i^(0+128),w
  1626  011E                     u5505:
  1627  011E  1C03               	skipc
  1628  011F  2921               	goto	u5501
  1629  0120  2922               	goto	u5500
  1630  0121                     u5501:
  1631  0121  28ED               	goto	l4144
  1632  0122                     u5500:
  1633  0122                     l4154:
  1634                           
  1635                           ;AFC.c: 108: };AFC.c: 109: current_period = c;
  1636  0122  0879               	movf	_c,w
  1637  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1638  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1639  0125  00EC               	movwf	_current_period^(0+128)
  1640  0126  087A               	movf	_c+1,w
  1641  0127  00ED               	movwf	(_current_period+1)^(0+128)
  1642  0128  3000               	movlw	0
  1643  0129  1BED               	btfsc	(_current_period+1)^(0+128),7
  1644  012A  30FF               	movlw	255
  1645  012B  00EE               	movwf	(_current_period+2)^(0+128)
  1646  012C  00EF               	movwf	(_current_period+3)^(0+128)
  1647                           
  1648                           ;AFC.c: 110: _delay((unsigned long)((5000)*(8000000/4000.0)));
  1649  012D  3033               	movlw	51
  1650  012E  1683               	bsf	3,5	;RP0=1, select bank3
  1651  012F  1703               	bsf	3,6	;RP1=1, select bank3
  1652  0130  00DA               	movwf	(??_main^(0+384)+2)
  1653  0131  30BB               	movlw	187
  1654  0132  00D9               	movwf	(??_main^(0+384)+1)
  1655  0133  30DF               	movlw	223
  1656  0134  00D8               	movwf	??_main^(0+384)
  1657  0135                     u5617:
  1658  0135  0BD8               	decfsz	??_main^(0+384),f
  1659  0136  2935               	goto	u5617
  1660  0137  0BD9               	decfsz	(??_main^(0+384)+1),f
  1661  0138  2935               	goto	u5617
  1662  0139  0BDA               	decfsz	(??_main^(0+384)+2),f
  1663  013A  2935               	goto	u5617
  1664  013B                     l4156:
  1665                           
  1666                           ;AFC.c: 111: i = 0;
  1667  013B  1683               	bsf	3,5	;RP0=1, select bank1
  1668  013C  1303               	bcf	3,6	;RP1=0, select bank1
  1669  013D  01E2               	clrf	_i^(0+128)
  1670  013E  01E3               	clrf	(_i+1)^(0+128)
  1671  013F                     l4158:
  1672                           
  1673                           ;AFC.c: 112: c = 0;
  1674  013F  01F9               	clrf	_c
  1675  0140  01FA               	clrf	_c+1
  1676                           
  1677                           ;AFC.c: 113: current_period = 130;
  1678  0141  3000               	movlw	0
  1679  0142  00EF               	movwf	(_current_period+3)^(0+128)
  1680  0143  3000               	movlw	0
  1681  0144  00EE               	movwf	(_current_period+2)^(0+128)
  1682  0145  3000               	movlw	0
  1683  0146  00ED               	movwf	(_current_period+1)^(0+128)
  1684  0147  3082               	movlw	130
  1685  0148  00EC               	movwf	_current_period^(0+128)
  1686  0149                     l4160:
  1687                           
  1688                           ;AFC.c: 115: LCD_Clear();
  1689  0149  160A  158A  24C7  120A  118A  	fcall	_LCD_Clear
  1690  014E                     l4162:
  1691                           
  1692                           ;AFC.c: 116: LCD_Set_Cursor(1, 1);
  1693  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1694  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0150  01A6               	clrf	LCD_Set_Cursor@COL
  1696  0151  0AA6               	incf	LCD_Set_Cursor@COL,f
  1697  0152  3001               	movlw	1
  1698  0153  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  1699  0158                     l4164:
  1700                           
  1701                           ;AFC.c: 117: LCD_Write_String("     Fan Ok");
  1702  0158  306B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1703  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1704  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1705  015B  00A6               	movwf	LCD_Write_String@Str
  1706  015C  3080               	movlw	128
  1707  015D  00A7               	movwf	LCD_Write_String@Str+1
  1708  015E  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  1709  0163                     l4166:
  1710                           
  1711                           ;AFC.c: 118: _delay((unsigned long)((2000)*(8000000/4000.0)));
  1712  0163  3015               	movlw	21
  1713  0164  1683               	bsf	3,5	;RP0=1, select bank3
  1714  0165  1703               	bsf	3,6	;RP1=1, select bank3
  1715  0166  00DA               	movwf	(??_main^(0+384)+2)
  1716  0167  304B               	movlw	75
  1717  0168  00D9               	movwf	(??_main^(0+384)+1)
  1718  0169  30BD               	movlw	189
  1719  016A  00D8               	movwf	??_main^(0+384)
  1720  016B                     u5627:
  1721  016B  0BD8               	decfsz	??_main^(0+384),f
  1722  016C  296B               	goto	u5627
  1723  016D  0BD9               	decfsz	(??_main^(0+384)+1),f
  1724  016E  296B               	goto	u5627
  1725  016F  0BDA               	decfsz	(??_main^(0+384)+2),f
  1726  0170  296B               	goto	u5627
  1727  0171  2972               	nop2
  1728  0172                     l4168:
  1729                           
  1730                           ;AFC.c: 119: LCD_Clear();
  1731  0172  160A  158A  24C7  120A  118A  	fcall	_LCD_Clear
  1732  0177                     l4170:
  1733                           
  1734                           ;AFC.c: 124: RAlarm = Alarms();
  1735  0177  160A  158A  25AD  120A  118A  	fcall	_Alarms
  1736  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1737  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1738  017E  0826               	movf	?_Alarms+1,w
  1739  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1740  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1741  0181  00E5               	movwf	(_RAlarm+1)^(0+128)
  1742  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0184  0825               	movf	?_Alarms,w
  1745  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0187  00E4               	movwf	_RAlarm^(0+128)
  1748                           
  1749                           ;AFC.c: 148: while (RAlarm >= 20 && RAlarm <= 700) {
  1750  0188  2B94               	goto	l4226
  1751  0189                     l4172:
  1752                           
  1753                           ;AFC.c: 149: RTemperature = GetTemp();
  1754  0189  120A  158A  256A  120A  118A  	fcall	_GetTemp
  1755  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1756  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1757  0190  0859               	movf	(?_GetTemp+1)^(0+128),w
  1758  0191  00F7               	movwf	_RTemperature+1
  1759  0192  0858               	movf	?_GetTemp^(0+128),w
  1760  0193  00F6               	movwf	_RTemperature
  1761  0194                     l4174:
  1762                           
  1763                           ;AFC.c: 150: RAlarm = Alarms();
  1764  0194  160A  158A  25AD  120A  118A  	fcall	_Alarms
  1765  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1766  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1767  019B  0826               	movf	?_Alarms+1,w
  1768  019C  1683               	bsf	3,5	;RP0=1, select bank1
  1769  019D  1303               	bcf	3,6	;RP1=0, select bank1
  1770  019E  00E5               	movwf	(_RAlarm+1)^(0+128)
  1771  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1772  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1773  01A1  0825               	movf	?_Alarms,w
  1774  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1775  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  1776  01A4  00E4               	movwf	_RAlarm^(0+128)
  1777  01A5                     l4176:
  1778                           
  1779                           ;AFC.c: 151: if ((RTemperature >= tempMin) && (RTemperature <= tempMax)) {
  1780  01A5  0877               	movf	_RTemperature+1,w
  1781  01A6  3A80               	xorlw	128
  1782  01A7  00FF               	movwf	btemp+1
  1783  01A8  3080               	movlw	128
  1784  01A9  027F               	subwf	btemp+1,w
  1785  01AA  1D03               	skipz
  1786  01AB  29AE               	goto	u5515
  1787  01AC  304B               	movlw	75
  1788  01AD  0276               	subwf	_RTemperature,w
  1789  01AE                     u5515:
  1790  01AE  1C03               	skipc
  1791  01AF  29B1               	goto	u5511
  1792  01B0  29B2               	goto	u5510
  1793  01B1                     u5511:
  1794  01B1  2AA7               	goto	l4186
  1795  01B2                     u5510:
  1796  01B2                     l4178:
  1797  01B2  0877               	movf	_RTemperature+1,w
  1798  01B3  3A80               	xorlw	128
  1799  01B4  00FF               	movwf	btemp+1
  1800  01B5  3080               	movlw	128
  1801  01B6  027F               	subwf	btemp+1,w
  1802  01B7  1D03               	skipz
  1803  01B8  29BB               	goto	u5525
  1804  01B9  3083               	movlw	131
  1805  01BA  0276               	subwf	_RTemperature,w
  1806  01BB                     u5525:
  1807  01BB  1803               	skipnc
  1808  01BC  29BE               	goto	u5521
  1809  01BD  29BF               	goto	u5520
  1810  01BE                     u5521:
  1811  01BE  2AA7               	goto	l4186
  1812  01BF                     u5520:
  1813  01BF                     l4180:
  1814                           
  1815                           ;AFC.c: 153: fanSpeed = map(RTemperature, tempMin, tempMax, 712, 2375);
  1816  01BF  3045               	movlw	69
  1817  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  1818  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  1819  01C2  00C8               	movwf	(map@out_max+3)^(0+128)
  1820  01C3  3014               	movlw	20
  1821  01C4  00C7               	movwf	(map@out_max+2)^(0+128)
  1822  01C5  3070               	movlw	112
  1823  01C6  00C6               	movwf	(map@out_max+1)^(0+128)
  1824  01C7  3000               	movlw	0
  1825  01C8  00C5               	movwf	map@out_max^(0+128)
  1826  01C9  3044               	movlw	68
  1827  01CA  00C4               	movwf	(map@out_min+3)^(0+128)
  1828  01CB  3032               	movlw	50
  1829  01CC  00C3               	movwf	(map@out_min+2)^(0+128)
  1830  01CD  3000               	movlw	0
  1831  01CE  00C2               	movwf	(map@out_min+1)^(0+128)
  1832  01CF  3000               	movlw	0
  1833  01D0  00C1               	movwf	map@out_min^(0+128)
  1834  01D1  3043               	movlw	67
  1835  01D2  00C0               	movwf	(map@in_max+3)^(0+128)
  1836  01D3  3002               	movlw	2
  1837  01D4  00BF               	movwf	(map@in_max+2)^(0+128)
  1838  01D5  3000               	movlw	0
  1839  01D6  00BE               	movwf	(map@in_max+1)^(0+128)
  1840  01D7  3000               	movlw	0
  1841  01D8  00BD               	movwf	map@in_max^(0+128)
  1842  01D9  3042               	movlw	66
  1843  01DA  00BC               	movwf	(map@in_min+3)^(0+128)
  1844  01DB  3096               	movlw	150
  1845  01DC  00BB               	movwf	(map@in_min+2)^(0+128)
  1846  01DD  3000               	movlw	0
  1847  01DE  00BA               	movwf	(map@in_min+1)^(0+128)
  1848  01DF  3000               	movlw	0
  1849  01E0  00B9               	movwf	map@in_min^(0+128)
  1850  01E1  0876               	movf	_RTemperature,w
  1851  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1852  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1853  01E4  00A5               	movwf	___xxtofl@val
  1854  01E5  0877               	movf	_RTemperature+1,w
  1855  01E6  00A6               	movwf	___xxtofl@val+1
  1856  01E7  3000               	movlw	0
  1857  01E8  1BA6               	btfsc	___xxtofl@val+1,7
  1858  01E9  30FF               	movlw	255
  1859  01EA  00A7               	movwf	___xxtofl@val+2
  1860  01EB  00A8               	movwf	___xxtofl@val+3
  1861  01EC  3001               	movlw	1
  1862  01ED  160A  118A  222B  120A  118A  	fcall	___xxtofl
  1863  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1864  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1865  01F4  0828               	movf	?___xxtofl+3,w
  1866  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  1867  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  1868  01F7  00B8               	movwf	(map@x+3)^(0+128)
  1869  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1870  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1871  01FA  0827               	movf	?___xxtofl+2,w
  1872  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1873  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1874  01FD  00B7               	movwf	(map@x+2)^(0+128)
  1875  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1876  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0200  0826               	movf	?___xxtofl+1,w
  1878  0201  1683               	bsf	3,5	;RP0=1, select bank1
  1879  0202  1303               	bcf	3,6	;RP1=0, select bank1
  1880  0203  00B6               	movwf	(map@x+1)^(0+128)
  1881  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0206  0825               	movf	?___xxtofl,w
  1884  0207  1683               	bsf	3,5	;RP0=1, select bank1
  1885  0208  1303               	bcf	3,6	;RP1=0, select bank1
  1886  0209  00B5               	movwf	map@x^(0+128)
  1887  020A  160A  118A  23CD  120A  118A  	fcall	_map
  1888  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0211  0838               	movf	(?_map+3)^(0+128),w
  1891  0212  00D0               	movwf	(___fltol@f1+3)^(0+128)
  1892  0213  0837               	movf	(?_map+2)^(0+128),w
  1893  0214  00CF               	movwf	(___fltol@f1+2)^(0+128)
  1894  0215  0836               	movf	(?_map+1)^(0+128),w
  1895  0216  00CE               	movwf	(___fltol@f1+1)^(0+128)
  1896  0217  0835               	movf	?_map^(0+128),w
  1897  0218  00CD               	movwf	___fltol@f1^(0+128)
  1898  0219  120A  158A  2003  120A  118A  	fcall	___fltol
  1899  021E  1683               	bsf	3,5	;RP0=1, select bank1
  1900  021F  1303               	bcf	3,6	;RP1=0, select bank1
  1901  0220  084E               	movf	(?___fltol+1)^(0+128),w
  1902  0221  1683               	bsf	3,5	;RP0=1, select bank3
  1903  0222  1703               	bsf	3,6	;RP1=1, select bank3
  1904  0223  00A7               	movwf	(_fanSpeed+1)^(0+384)
  1905  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1906  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1907  0226  084D               	movf	?___fltol^(0+128),w
  1908  0227  1683               	bsf	3,5	;RP0=1, select bank3
  1909  0228  1703               	bsf	3,6	;RP1=1, select bank3
  1910  0229  00A6               	movwf	_fanSpeed^(0+384)
  1911                           
  1912                           ;AFC.c: 154: fanLCD = map(RTemperature, tempMin, tempMax, 0, 100);
  1913  022A  3042               	movlw	66
  1914  022B  1683               	bsf	3,5	;RP0=1, select bank1
  1915  022C  1303               	bcf	3,6	;RP1=0, select bank1
  1916  022D  00C8               	movwf	(map@out_max+3)^(0+128)
  1917  022E  30C8               	movlw	200
  1918  022F  00C7               	movwf	(map@out_max+2)^(0+128)
  1919  0230  3000               	movlw	0
  1920  0231  00C6               	movwf	(map@out_max+1)^(0+128)
  1921  0232  3000               	movlw	0
  1922  0233  00C5               	movwf	map@out_max^(0+128)
  1923  0234  3000               	movlw	0
  1924  0235  00C4               	movwf	(map@out_min+3)^(0+128)
  1925  0236  3000               	movlw	0
  1926  0237  00C3               	movwf	(map@out_min+2)^(0+128)
  1927  0238  3000               	movlw	0
  1928  0239  00C2               	movwf	(map@out_min+1)^(0+128)
  1929  023A  3000               	movlw	0
  1930  023B  00C1               	movwf	map@out_min^(0+128)
  1931  023C  3043               	movlw	67
  1932  023D  00C0               	movwf	(map@in_max+3)^(0+128)
  1933  023E  3002               	movlw	2
  1934  023F  00BF               	movwf	(map@in_max+2)^(0+128)
  1935  0240  3000               	movlw	0
  1936  0241  00BE               	movwf	(map@in_max+1)^(0+128)
  1937  0242  3000               	movlw	0
  1938  0243  00BD               	movwf	map@in_max^(0+128)
  1939  0244  3042               	movlw	66
  1940  0245  00BC               	movwf	(map@in_min+3)^(0+128)
  1941  0246  3096               	movlw	150
  1942  0247  00BB               	movwf	(map@in_min+2)^(0+128)
  1943  0248  3000               	movlw	0
  1944  0249  00BA               	movwf	(map@in_min+1)^(0+128)
  1945  024A  3000               	movlw	0
  1946  024B  00B9               	movwf	map@in_min^(0+128)
  1947  024C  0876               	movf	_RTemperature,w
  1948  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1949  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1950  024F  00A5               	movwf	___xxtofl@val
  1951  0250  0877               	movf	_RTemperature+1,w
  1952  0251  00A6               	movwf	___xxtofl@val+1
  1953  0252  3000               	movlw	0
  1954  0253  1BA6               	btfsc	___xxtofl@val+1,7
  1955  0254  30FF               	movlw	255
  1956  0255  00A7               	movwf	___xxtofl@val+2
  1957  0256  00A8               	movwf	___xxtofl@val+3
  1958  0257  3001               	movlw	1
  1959  0258  160A  118A  222B  120A  118A  	fcall	___xxtofl
  1960  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1961  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1962  025F  0828               	movf	?___xxtofl+3,w
  1963  0260  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0261  1303               	bcf	3,6	;RP1=0, select bank1
  1965  0262  00B8               	movwf	(map@x+3)^(0+128)
  1966  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0265  0827               	movf	?___xxtofl+2,w
  1969  0266  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0267  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0268  00B7               	movwf	(map@x+2)^(0+128)
  1972  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1973  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1974  026B  0826               	movf	?___xxtofl+1,w
  1975  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1976  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1977  026E  00B6               	movwf	(map@x+1)^(0+128)
  1978  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0271  0825               	movf	?___xxtofl,w
  1981  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1983  0274  00B5               	movwf	map@x^(0+128)
  1984  0275  160A  118A  23CD  120A  118A  	fcall	_map
  1985  027A  1683               	bsf	3,5	;RP0=1, select bank1
  1986  027B  1303               	bcf	3,6	;RP1=0, select bank1
  1987  027C  0838               	movf	(?_map+3)^(0+128),w
  1988  027D  00D0               	movwf	(___fltol@f1+3)^(0+128)
  1989  027E  0837               	movf	(?_map+2)^(0+128),w
  1990  027F  00CF               	movwf	(___fltol@f1+2)^(0+128)
  1991  0280  0836               	movf	(?_map+1)^(0+128),w
  1992  0281  00CE               	movwf	(___fltol@f1+1)^(0+128)
  1993  0282  0835               	movf	?_map^(0+128),w
  1994  0283  00CD               	movwf	___fltol@f1^(0+128)
  1995  0284  120A  158A  2003  120A  118A  	fcall	___fltol
  1996  0289  1683               	bsf	3,5	;RP0=1, select bank1
  1997  028A  1303               	bcf	3,6	;RP1=0, select bank1
  1998  028B  084E               	movf	(?___fltol+1)^(0+128),w
  1999  028C  1683               	bsf	3,5	;RP0=1, select bank3
  2000  028D  1703               	bsf	3,6	;RP1=1, select bank3
  2001  028E  00A5               	movwf	(_fanLCD+1)^(0+384)
  2002  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2004  0291  084D               	movf	?___fltol^(0+128),w
  2005  0292  1683               	bsf	3,5	;RP0=1, select bank3
  2006  0293  1703               	bsf	3,6	;RP1=1, select bank3
  2007  0294  00A4               	movwf	_fanLCD^(0+384)
  2008  0295                     l4182:
  2009                           
  2010                           ;AFC.c: 155: current_period = fanSpeed;
  2011  0295  0826               	movf	_fanSpeed^(0+384),w
  2012  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0297  1303               	bcf	3,6	;RP1=0, select bank1
  2014  0298  00EC               	movwf	_current_period^(0+128)
  2015  0299  1683               	bsf	3,5	;RP0=1, select bank3
  2016  029A  1703               	bsf	3,6	;RP1=1, select bank3
  2017  029B  0827               	movf	(_fanSpeed+1)^(0+384),w
  2018  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2019  029D  1303               	bcf	3,6	;RP1=0, select bank1
  2020  029E  00ED               	movwf	(_current_period+1)^(0+128)
  2021  029F  3000               	movlw	0
  2022  02A0  1BED               	btfsc	(_current_period+1)^(0+128),7
  2023  02A1  30FF               	movlw	255
  2024  02A2  00EE               	movwf	(_current_period+2)^(0+128)
  2025  02A3  00EF               	movwf	(_current_period+3)^(0+128)
  2026  02A4                     l4184:
  2027                           
  2028                           ;AFC.c: 156: RB1 = 0;
  2029  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2030  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2031  02A6  1086               	bcf	6,1	;volatile
  2032  02A7                     l4186:
  2033                           
  2034                           ;AFC.c: 157: };AFC.c: 158: if (RTemperature > tempMax) {
  2035  02A7  0877               	movf	_RTemperature+1,w
  2036  02A8  3A80               	xorlw	128
  2037  02A9  00FF               	movwf	btemp+1
  2038  02AA  3080               	movlw	128
  2039  02AB  027F               	subwf	btemp+1,w
  2040  02AC  1D03               	skipz
  2041  02AD  2AB0               	goto	u5535
  2042  02AE  3083               	movlw	131
  2043  02AF  0276               	subwf	_RTemperature,w
  2044  02B0                     u5535:
  2045  02B0  1C03               	skipc
  2046  02B1  2AB3               	goto	u5531
  2047  02B2  2AB4               	goto	u5530
  2048  02B3                     u5531:
  2049  02B3  2AC7               	goto	l4192
  2050  02B4                     u5530:
  2051  02B4                     l4188:
  2052                           
  2053                           ;AFC.c: 159: RB1 = 0;
  2054  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2055  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2056  02B6  1086               	bcf	6,1	;volatile
  2057  02B7                     l4190:
  2058                           
  2059                           ;AFC.c: 160: current_period = 2375;
  2060  02B7  3000               	movlw	0
  2061  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2062  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2063  02BA  00EF               	movwf	(_current_period+3)^(0+128)
  2064  02BB  3000               	movlw	0
  2065  02BC  00EE               	movwf	(_current_period+2)^(0+128)
  2066  02BD  3009               	movlw	9
  2067  02BE  00ED               	movwf	(_current_period+1)^(0+128)
  2068  02BF  3047               	movlw	71
  2069  02C0  00EC               	movwf	_current_period^(0+128)
  2070                           
  2071                           ;AFC.c: 161: fanLCD = 100;
  2072  02C1  3064               	movlw	100
  2073  02C2  1683               	bsf	3,5	;RP0=1, select bank3
  2074  02C3  1703               	bsf	3,6	;RP1=1, select bank3
  2075  02C4  00A4               	movwf	_fanLCD^(0+384)
  2076  02C5  3000               	movlw	0
  2077  02C6  00A5               	movwf	(_fanLCD^(0+384)+1)
  2078  02C7                     l4192:
  2079                           
  2080                           ;AFC.c: 162: };AFC.c: 163: if (RTemperature < tempMin) {
  2081  02C7  0877               	movf	_RTemperature+1,w
  2082  02C8  3A80               	xorlw	128
  2083  02C9  00FF               	movwf	btemp+1
  2084  02CA  3080               	movlw	128
  2085  02CB  027F               	subwf	btemp+1,w
  2086  02CC  1D03               	skipz
  2087  02CD  2AD0               	goto	u5545
  2088  02CE  304B               	movlw	75
  2089  02CF  0276               	subwf	_RTemperature,w
  2090  02D0                     u5545:
  2091  02D0  1803               	skipnc
  2092  02D1  2AD3               	goto	u5541
  2093  02D2  2AD4               	goto	u5540
  2094  02D3                     u5541:
  2095  02D3  2AE5               	goto	l4200
  2096  02D4                     u5540:
  2097  02D4                     l4194:
  2098                           
  2099                           ;AFC.c: 164: RB1 = 0;
  2100  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2101  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2102  02D6  1086               	bcf	6,1	;volatile
  2103  02D7                     l4196:
  2104                           
  2105                           ;AFC.c: 165: current_period = 130;
  2106  02D7  3000               	movlw	0
  2107  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2108  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2109  02DA  00EF               	movwf	(_current_period+3)^(0+128)
  2110  02DB  3000               	movlw	0
  2111  02DC  00EE               	movwf	(_current_period+2)^(0+128)
  2112  02DD  3000               	movlw	0
  2113  02DE  00ED               	movwf	(_current_period+1)^(0+128)
  2114  02DF  3082               	movlw	130
  2115  02E0  00EC               	movwf	_current_period^(0+128)
  2116  02E1                     l4198:
  2117                           
  2118                           ;AFC.c: 166: fanLCD = 0;
  2119  02E1  1683               	bsf	3,5	;RP0=1, select bank3
  2120  02E2  1703               	bsf	3,6	;RP1=1, select bank3
  2121  02E3  01A4               	clrf	_fanLCD^(0+384)
  2122  02E4  01A5               	clrf	(_fanLCD+1)^(0+384)
  2123  02E5                     l4200:
  2124                           
  2125                           ;AFC.c: 167: };AFC.c: 168: sprintf(TempSTR, "%3d C", RTemperature);
  2126  02E5  308C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2127  02E6  1683               	bsf	3,5	;RP0=1, select bank3
  2128  02E7  1703               	bsf	3,6	;RP1=1, select bank3
  2129  02E8  00D8               	movwf	??_main^(0+384)
  2130  02E9  0858               	movf	??_main^(0+384),w
  2131  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2132  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2133  02EC  00AE               	movwf	sprintf@f
  2134  02ED  0877               	movf	_RTemperature+1,w
  2135  02EE  00B0               	movwf	?_sprintf+2
  2136  02EF  0876               	movf	_RTemperature,w
  2137  02F0  00AF               	movwf	?_sprintf+1
  2138  02F1  30BA               	movlw	(low (_TempSTR| (0+256)))& (0+255)
  2139  02F2  160A  118A  2680  120A  118A  	fcall	_sprintf
  2140  02F7                     l4202:
  2141                           
  2142                           ;AFC.c: 169: sprintf(fanSTR, "%3d", fanLCD);
  2143  02F7  3092               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2144  02F8  1683               	bsf	3,5	;RP0=1, select bank3
  2145  02F9  1703               	bsf	3,6	;RP1=1, select bank3
  2146  02FA  00D8               	movwf	??_main^(0+384)
  2147  02FB  0858               	movf	??_main^(0+384),w
  2148  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2149  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2150  02FE  00AE               	movwf	sprintf@f
  2151  02FF  1683               	bsf	3,5	;RP0=1, select bank3
  2152  0300  1703               	bsf	3,6	;RP1=1, select bank3
  2153  0301  0825               	movf	(_fanLCD+1)^(0+384),w
  2154  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0304  00B0               	movwf	?_sprintf+2
  2157  0305  1683               	bsf	3,5	;RP0=1, select bank3
  2158  0306  1703               	bsf	3,6	;RP1=1, select bank3
  2159  0307  0824               	movf	_fanLCD^(0+384),w
  2160  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2162  030A  00AF               	movwf	?_sprintf+1
  2163  030B  30AA               	movlw	(low (_fanSTR| (0+256)))& (0+255)
  2164  030C  160A  118A  2680  120A  118A  	fcall	_sprintf
  2165  0311                     l4204:
  2166                           
  2167                           ;AFC.c: 170: LCD_Set_Cursor(1, 1);
  2168  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0313  01A6               	clrf	LCD_Set_Cursor@COL
  2171  0314  0AA6               	incf	LCD_Set_Cursor@COL,f
  2172  0315  3001               	movlw	1
  2173  0316  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  2174  031B                     l4206:
  2175                           
  2176                           ;AFC.c: 171: LCD_Write_String("Temp Is : ");
  2177  031B  3077               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2178  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2179  031D  1303               	bcf	3,6	;RP1=0, select bank0
  2180  031E  00A6               	movwf	LCD_Write_String@Str
  2181  031F  3080               	movlw	128
  2182  0320  00A7               	movwf	LCD_Write_String@Str+1
  2183  0321  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  2184  0326                     l4208:
  2185                           
  2186                           ;AFC.c: 172: LCD_Set_Cursor(1, 11);
  2187  0326  300B               	movlw	11
  2188  0327  1683               	bsf	3,5	;RP0=1, select bank3
  2189  0328  1703               	bsf	3,6	;RP1=1, select bank3
  2190  0329  00D8               	movwf	??_main^(0+384)
  2191  032A  0858               	movf	??_main^(0+384),w
  2192  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2193  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2194  032D  00A6               	movwf	LCD_Set_Cursor@COL
  2195  032E  3001               	movlw	1
  2196  032F  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  2197  0334                     l4210:
  2198                           
  2199                           ;AFC.c: 173: LCD_Write_String(TempSTR);
  2200  0334  30BA               	movlw	(low (_TempSTR| (0+256)))& (0+255)
  2201  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0337  00A6               	movwf	LCD_Write_String@Str
  2204  0338  3001               	movlw	1
  2205  0339  00A7               	movwf	LCD_Write_String@Str+1
  2206  033A  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  2207  033F                     l4212:
  2208                           
  2209                           ;AFC.c: 174: LCD_Set_Cursor(2, 1);
  2210  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0341  01A6               	clrf	LCD_Set_Cursor@COL
  2213  0342  0AA6               	incf	LCD_Set_Cursor@COL,f
  2214  0343  3002               	movlw	2
  2215  0344  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  2216  0349                     l4214:
  2217                           
  2218                           ;AFC.c: 175: LCD_Write_String("FanSpeed:");
  2219  0349  3082               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2220  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2221  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2222  034C  00A6               	movwf	LCD_Write_String@Str
  2223  034D  3080               	movlw	128
  2224  034E  00A7               	movwf	LCD_Write_String@Str+1
  2225  034F  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  2226  0354                     l4216:
  2227                           
  2228                           ;AFC.c: 176: LCD_Set_Cursor(2, 10);
  2229  0354  300A               	movlw	10
  2230  0355  1683               	bsf	3,5	;RP0=1, select bank3
  2231  0356  1703               	bsf	3,6	;RP1=1, select bank3
  2232  0357  00D8               	movwf	??_main^(0+384)
  2233  0358  0858               	movf	??_main^(0+384),w
  2234  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2235  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2236  035B  00A6               	movwf	LCD_Set_Cursor@COL
  2237  035C  3002               	movlw	2
  2238  035D  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  2239  0362                     l4218:
  2240                           
  2241                           ;AFC.c: 177: LCD_Write_String(fanSTR);
  2242  0362  30AA               	movlw	(low (_fanSTR| (0+256)))& (0+255)
  2243  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0365  00A6               	movwf	LCD_Write_String@Str
  2246  0366  3001               	movlw	1
  2247  0367  00A7               	movwf	LCD_Write_String@Str+1
  2248  0368  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  2249  036D                     l4220:
  2250                           
  2251                           ;AFC.c: 178: LCD_Set_Cursor(2, 14);
  2252  036D  300E               	movlw	14
  2253  036E  1683               	bsf	3,5	;RP0=1, select bank3
  2254  036F  1703               	bsf	3,6	;RP1=1, select bank3
  2255  0370  00D8               	movwf	??_main^(0+384)
  2256  0371  0858               	movf	??_main^(0+384),w
  2257  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0374  00A6               	movwf	LCD_Set_Cursor@COL
  2260  0375  3002               	movlw	2
  2261  0376  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  2262  037B                     l4222:
  2263                           
  2264                           ;AFC.c: 179: LCD_Write_String("%");
  2265  037B  3096               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2266  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2267  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2268  037E  00A6               	movwf	LCD_Write_String@Str
  2269  037F  3080               	movlw	128
  2270  0380  00A7               	movwf	LCD_Write_String@Str+1
  2271  0381  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  2272  0386                     l4224:
  2273                           
  2274                           ;AFC.c: 180: _delay((unsigned long)((250)*(8000000/4000.0)));
  2275  0386  3003               	movlw	3
  2276  0387  1683               	bsf	3,5	;RP0=1, select bank3
  2277  0388  1703               	bsf	3,6	;RP1=1, select bank3
  2278  0389  00DA               	movwf	(??_main^(0+384)+2)
  2279  038A  308A               	movlw	138
  2280  038B  00D9               	movwf	(??_main^(0+384)+1)
  2281  038C  3055               	movlw	85
  2282  038D  00D8               	movwf	??_main^(0+384)
  2283  038E                     u5637:
  2284  038E  0BD8               	decfsz	??_main^(0+384),f
  2285  038F  2B8E               	goto	u5637
  2286  0390  0BD9               	decfsz	(??_main^(0+384)+1),f
  2287  0391  2B8E               	goto	u5637
  2288  0392  0BDA               	decfsz	(??_main^(0+384)+2),f
  2289  0393  2B8E               	goto	u5637
  2290  0394                     l4226:
  2291  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0396  0865               	movf	(_RAlarm+1)^(0+128),w
  2294  0397  3A80               	xorlw	128
  2295  0398  00FF               	movwf	btemp+1
  2296  0399  3080               	movlw	128
  2297  039A  027F               	subwf	btemp+1,w
  2298  039B  1D03               	skipz
  2299  039C  2B9F               	goto	u5555
  2300  039D  3014               	movlw	20
  2301  039E  0264               	subwf	_RAlarm^(0+128),w
  2302  039F                     u5555:
  2303  039F  1C03               	skipc
  2304  03A0  2BA2               	goto	u5551
  2305  03A1  2BA3               	goto	u5550
  2306  03A2                     u5551:
  2307  03A2  2C47               	goto	l4258
  2308  03A3                     u5550:
  2309  03A3                     l4228:
  2310  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2311  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  2312  03A5  0865               	movf	(_RAlarm+1)^(0+128),w
  2313  03A6  3A80               	xorlw	128
  2314  03A7  00FF               	movwf	btemp+1
  2315  03A8  3082               	movlw	130
  2316  03A9  027F               	subwf	btemp+1,w
  2317  03AA  1D03               	skipz
  2318  03AB  2BAE               	goto	u5565
  2319  03AC  30BD               	movlw	189
  2320  03AD  0264               	subwf	_RAlarm^(0+128),w
  2321  03AE                     u5565:
  2322  03AE  1C03               	skipc
  2323  03AF  2BB1               	goto	u5561
  2324  03B0  2BB2               	goto	u5560
  2325  03B1                     u5561:
  2326  03B1  2989               	goto	l4172
  2327  03B2                     u5560:
  2328  03B2  2C47               	goto	l4258
  2329  03B3                     l4230:
  2330                           
  2331                           ;AFC.c: 185: RAlarm = Alarms();
  2332  03B3  160A  158A  25AD  120A  118A  	fcall	_Alarms
  2333  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2334  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2335  03BA  0826               	movf	?_Alarms+1,w
  2336  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2337  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2338  03BD  00E5               	movwf	(_RAlarm+1)^(0+128)
  2339  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2340  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2341  03C0  0825               	movf	?_Alarms,w
  2342  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2343  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2344  03C3  00E4               	movwf	_RAlarm^(0+128)
  2345  03C4                     l4232:
  2346                           
  2347                           ;AFC.c: 186: RB1 = 1;
  2348  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2349  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2350  03C6  1486               	bsf	6,1	;volatile
  2351  03C7  2BEE               	goto	l4242
  2352  03C8                     l4234:
  2353                           
  2354                           ;AFC.c: 188: current_period = c;
  2355  03C8  0879               	movf	_c,w
  2356  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2357  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2358  03CB  00EC               	movwf	_current_period^(0+128)
  2359  03CC  087A               	movf	_c+1,w
  2360  03CD  00ED               	movwf	(_current_period+1)^(0+128)
  2361  03CE  3000               	movlw	0
  2362  03CF  1BED               	btfsc	(_current_period+1)^(0+128),7
  2363  03D0  30FF               	movlw	255
  2364  03D1  00EE               	movwf	(_current_period+2)^(0+128)
  2365  03D2  00EF               	movwf	(_current_period+3)^(0+128)
  2366  03D3                     l4236:
  2367                           
  2368                           ;AFC.c: 189: c = c + 5;
  2369  03D3  0879               	movf	_c,w
  2370  03D4  3E05               	addlw	5
  2371  03D5  00F9               	movwf	_c
  2372  03D6  087A               	movf	_c+1,w
  2373  03D7  1803               	skipnc
  2374  03D8  3E01               	addlw	1
  2375  03D9  3E00               	addlw	0
  2376  03DA  00FA               	movwf	_c+1
  2377  03DB                     l4238:
  2378                           
  2379                           ;AFC.c: 190: _delay((unsigned long)((30)*(8000000/4000.0)));
  2380  03DB  304E               	movlw	78
  2381  03DC  1683               	bsf	3,5	;RP0=1, select bank3
  2382  03DD  1703               	bsf	3,6	;RP1=1, select bank3
  2383  03DE  00D9               	movwf	(??_main^(0+384)+1)
  2384  03DF  30EA               	movlw	234
  2385  03E0  00D8               	movwf	??_main^(0+384)
  2386  03E1                     u5647:
  2387  03E1  0BD8               	decfsz	??_main^(0+384),f
  2388  03E2  2BE1               	goto	u5647
  2389  03E3  0BD9               	decfsz	(??_main^(0+384)+1),f
  2390  03E4  2BE1               	goto	u5647
  2391  03E5  0000               	nop
  2392  03E6                     l4240:
  2393  03E6  3001               	movlw	1
  2394  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2395  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2396  03E9  07E2               	addwf	_i^(0+128),f
  2397  03EA  1803               	skipnc
  2398  03EB  0AE3               	incf	(_i+1)^(0+128),f
  2399  03EC  3000               	movlw	0
  2400  03ED  07E3               	addwf	(_i+1)^(0+128),f
  2401  03EE                     l4242:
  2402  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2403  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2404  03F0  0863               	movf	(_i+1)^(0+128),w
  2405  03F1  3A80               	xorlw	128
  2406  03F2  00FF               	movwf	btemp+1
  2407  03F3  3081               	movlw	129
  2408  03F4  027F               	subwf	btemp+1,w
  2409  03F5  1D03               	skipz
  2410  03F6  2BF9               	goto	u5575
  2411  03F7  30C2               	movlw	194
  2412  03F8  0262               	subwf	_i^(0+128),w
  2413  03F9                     u5575:
  2414  03F9  1C03               	skipc
  2415  03FA  2BFC               	goto	u5571
  2416  03FB  2BFD               	goto	u5570
  2417  03FC                     u5571:
  2418  03FC  2BC8               	goto	l4234
  2419  03FD                     u5570:
  2420  03FD                     l4244:
  2421                           
  2422                           ;AFC.c: 191: };AFC.c: 192: current_period = c;
  2423  03FD  0879               	movf	_c,w
  2424  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2425  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2426  0400  00EC               	movwf	_current_period^(0+128)
  2427  0401  087A               	movf	_c+1,w
  2428  0402  00ED               	movwf	(_current_period+1)^(0+128)
  2429  0403  3000               	movlw	0
  2430  0404  1BED               	btfsc	(_current_period+1)^(0+128),7
  2431  0405  30FF               	movlw	255
  2432  0406  00EE               	movwf	(_current_period+2)^(0+128)
  2433  0407  00EF               	movwf	(_current_period+3)^(0+128)
  2434  0408                     l4246:
  2435                           
  2436                           ;AFC.c: 193: LCD_Clear();
  2437  0408  160A  158A  24C7  120A  118A  	fcall	_LCD_Clear
  2438  040D                     l4248:
  2439                           
  2440                           ;AFC.c: 194: LCD_Set_Cursor(1, 1);
  2441  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2442  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2443  040F  01A6               	clrf	LCD_Set_Cursor@COL
  2444  0410  0AA6               	incf	LCD_Set_Cursor@COL,f
  2445  0411  3001               	movlw	1
  2446  0412  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  2447  0417                     l4250:
  2448                           
  2449                           ;AFC.c: 195: LCD_Write_String("Wire  Cut !!");
  2450  0417  305E               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2451  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2453  041A  00A6               	movwf	LCD_Write_String@Str
  2454  041B  3080               	movlw	128
  2455  041C  00A7               	movwf	LCD_Write_String@Str+1
  2456  041D  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  2457  0422                     l4252:
  2458                           
  2459                           ;AFC.c: 196: LCD_Set_Cursor(2, 1);
  2460  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0424  01A6               	clrf	LCD_Set_Cursor@COL
  2463  0425  0AA6               	incf	LCD_Set_Cursor@COL,f
  2464  0426  3002               	movlw	2
  2465  0427  160A  158A  2623  120A  118A  	fcall	_LCD_Set_Cursor
  2466  042C                     l4254:
  2467                           
  2468                           ;AFC.c: 197: LCD_Write_String("Wire  Cut !!");
  2469  042C  305E               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2470  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2471  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2472  042F  00A6               	movwf	LCD_Write_String@Str
  2473  0430  3080               	movlw	128
  2474  0431  00A7               	movwf	LCD_Write_String@Str+1
  2475  0432  160A  158A  2686  120A  118A  	fcall	_LCD_Write_String
  2476  0437                     l4256:
  2477                           
  2478                           ;AFC.c: 198: _delay((unsigned long)((10)*(8000000/4000.0)));
  2479  0437  301A               	movlw	26
  2480  0438  1683               	bsf	3,5	;RP0=1, select bank3
  2481  0439  1703               	bsf	3,6	;RP1=1, select bank3
  2482  043A  00D9               	movwf	(??_main^(0+384)+1)
  2483  043B  30F7               	movlw	247
  2484  043C  00D8               	movwf	??_main^(0+384)
  2485  043D                     u5657:
  2486  043D  0BD8               	decfsz	??_main^(0+384),f
  2487  043E  2C3D               	goto	u5657
  2488  043F  0BD9               	decfsz	(??_main^(0+384)+1),f
  2489  0440  2C3D               	goto	u5657
  2490  0441  2C42               	nop2
  2491                           
  2492                           ;AFC.c: 199: LCD_Clear();
  2493  0442  160A  158A  24C7  120A  118A  	fcall	_LCD_Clear
  2494  0447                     l4258:
  2495  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2496  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2497  0449  0865               	movf	(_RAlarm+1)^(0+128),w
  2498  044A  3A80               	xorlw	128
  2499  044B  00FF               	movwf	btemp+1
  2500  044C  3083               	movlw	131
  2501  044D  027F               	subwf	btemp+1,w
  2502  044E  1D03               	skipz
  2503  044F  2C52               	goto	u5585
  2504  0450  3020               	movlw	32
  2505  0451  0264               	subwf	_RAlarm^(0+128),w
  2506  0452                     u5585:
  2507  0452  1803               	skipnc
  2508  0453  2C55               	goto	u5581
  2509  0454  2C56               	goto	u5580
  2510  0455                     u5581:
  2511  0455  2BB3               	goto	l4230
  2512  0456                     u5580:
  2513  0456  2977               	goto	l4170
  2514  0457  120A  118A  280C   	ljmp	start
  2515  045A                     __end_of_main:
  2516                           
  2517                           	psect	text1
  2518  1680                     __ptext1:	
  2519 ;; *************** function _sprintf *****************
  2520 ;; Defined at:
  2521 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  sp              1    wreg     PTR unsigned char 
  2524 ;;		 -> fanSTR(16), TempSTR(16), 
  2525 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2526 ;;		 -> STR_6(4), STR_5(6), 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  2529 ;;		 -> fanSTR(16), TempSTR(16), 
  2530 ;;  tmpval          4    0        struct .
  2531 ;;  width           2   26[BANK0 ] int 
  2532 ;;  val             2   23[BANK0 ] unsigned int 
  2533 ;;  cp              2    0        PTR const unsigned char 
  2534 ;;  len             2    0        unsigned int 
  2535 ;;  c               1   28[BANK0 ] unsigned char 
  2536 ;;  flag            1   22[BANK0 ] unsigned char 
  2537 ;;  prec            1   21[BANK0 ] char 
  2538 ;;  ap              1   20[BANK0 ] PTR void [1]
  2539 ;;		 -> ?_sprintf(2), 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  2   14[BANK0 ] int 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       3       0       0       0
  2550 ;;      Locals:         0       9       0       0       0
  2551 ;;      Temps:          0       3       0       0       0
  2552 ;;      Totals:         0      15       0       0       0
  2553 ;;Total ram usage:       15 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    2
  2556 ;; This function calls:
  2557 ;;		___lwdiv
  2558 ;;		___lwmod
  2559 ;;		___wmul
  2560 ;;		_isdigit
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _sprintf
  2568  1680                     _sprintf:
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2572                           ;sprintf@sp stored from wreg
  2573  1680  1283               	bcf	3,5	;RP0=0, select bank0
  2574  1681  1303               	bcf	3,6	;RP1=0, select bank0
  2575  1682  00B9               	movwf	sprintf@sp
  2576  1683                     l3966:
  2577                           
  2578                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  2579  1683  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2580  1684  00B1               	movwf	??_sprintf
  2581  1685  0831               	movf	??_sprintf,w
  2582  1686  00B4               	movwf	sprintf@ap
  2583                           
  2584                           ;doprnt.c: 553: while((c = *f++)) {
  2585  1687  2FE9               	goto	l4048
  2586  1688                     l3968:
  2587                           
  2588                           ;doprnt.c: 555: if(c != '%')
  2589  1688  3025               	movlw	37
  2590  1689  063C               	xorwf	sprintf@c,w
  2591  168A  1903               	btfsc	3,2
  2592  168B  2E8D               	goto	u5351
  2593  168C  2E8E               	goto	u5350
  2594  168D                     u5351:
  2595  168D  2E9A               	goto	l3974
  2596  168E                     u5350:
  2597  168E                     l3970:
  2598                           
  2599                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2600  168E  083C               	movf	sprintf@c,w
  2601  168F  00B1               	movwf	??_sprintf
  2602  1690  0839               	movf	sprintf@sp,w
  2603  1691  0084               	movwf	4
  2604  1692  0831               	movf	??_sprintf,w
  2605  1693  1783               	bsf	3,7	;select IRP bank2
  2606  1694  0080               	movwf	0
  2607  1695                     l3972:
  2608  1695  3001               	movlw	1
  2609  1696  00B1               	movwf	??_sprintf
  2610  1697  0831               	movf	??_sprintf,w
  2611  1698  07B9               	addwf	sprintf@sp,f
  2612                           
  2613                           ;doprnt.c: 559: continue;
  2614  1699  2FE9               	goto	l4048
  2615  169A                     l3974:
  2616                           
  2617                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  2618  169A  01BA               	clrf	sprintf@width
  2619  169B  01BB               	clrf	sprintf@width+1
  2620                           
  2621                           ;doprnt.c: 565: flag = 0;
  2622  169C  01B6               	clrf	sprintf@flag
  2623  169D                     l3976:
  2624                           
  2625                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  2626  169D  082E               	movf	sprintf@f,w
  2627  169E  0084               	movwf	4
  2628  169F  160A  118A  200A  160A  118A  	fcall	stringdir
  2629  16A4  160A  158A  24FA  160A  118A  	fcall	_isdigit
  2630  16A9  1C03               	btfss	3,0
  2631  16AA  2EAC               	goto	u5361
  2632  16AB  2EAD               	goto	u5360
  2633  16AC                     u5361:
  2634  16AC  2EED               	goto	l3990
  2635  16AD                     u5360:
  2636  16AD                     l3978:
  2637                           
  2638                           ;doprnt.c: 615: width = 0;
  2639  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  2640  16AE  1303               	bcf	3,6	;RP1=0, select bank0
  2641  16AF  01BA               	clrf	sprintf@width
  2642  16B0  01BB               	clrf	sprintf@width+1
  2643  16B1                     l3980:
  2644                           
  2645                           ;doprnt.c: 617: width *= 10;
  2646  16B1  300A               	movlw	10
  2647  16B2  1283               	bcf	3,5	;RP0=0, select bank0
  2648  16B3  1303               	bcf	3,6	;RP1=0, select bank0
  2649  16B4  00A0               	movwf	___wmul@multiplier
  2650  16B5  3000               	movlw	0
  2651  16B6  00A1               	movwf	___wmul@multiplier+1
  2652  16B7  083B               	movf	sprintf@width+1,w
  2653  16B8  00A3               	movwf	___wmul@multiplicand+1
  2654  16B9  083A               	movf	sprintf@width,w
  2655  16BA  00A2               	movwf	___wmul@multiplicand
  2656  16BB  160A  158A  25D3  160A  118A  	fcall	___wmul
  2657  16C0  1283               	bcf	3,5	;RP0=0, select bank0
  2658  16C1  1303               	bcf	3,6	;RP1=0, select bank0
  2659  16C2  0821               	movf	?___wmul+1,w
  2660  16C3  00BB               	movwf	sprintf@width+1
  2661  16C4  0820               	movf	?___wmul,w
  2662  16C5  00BA               	movwf	sprintf@width
  2663  16C6                     l3982:
  2664                           
  2665                           ;doprnt.c: 618: width += *f++ - '0';
  2666  16C6  082E               	movf	sprintf@f,w
  2667  16C7  0084               	movwf	4
  2668  16C8  160A  118A  200A  160A  118A  	fcall	stringdir
  2669  16CD  3ED0               	addlw	208
  2670  16CE  00B1               	movwf	??_sprintf
  2671  16CF  30FF               	movlw	255
  2672  16D0  1803               	skipnc
  2673  16D1  3000               	movlw	0
  2674  16D2  00B2               	movwf	??_sprintf+1
  2675  16D3  0831               	movf	??_sprintf,w
  2676  16D4  07BA               	addwf	sprintf@width,f
  2677  16D5  1803               	skipnc
  2678  16D6  0ABB               	incf	sprintf@width+1,f
  2679  16D7  0832               	movf	??_sprintf+1,w
  2680  16D8  07BB               	addwf	sprintf@width+1,f
  2681  16D9                     l3984:
  2682  16D9  3001               	movlw	1
  2683  16DA  00B1               	movwf	??_sprintf
  2684  16DB  0831               	movf	??_sprintf,w
  2685  16DC  07AE               	addwf	sprintf@f,f
  2686  16DD                     l3986:
  2687                           
  2688                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  2689  16DD  082E               	movf	sprintf@f,w
  2690  16DE  0084               	movwf	4
  2691  16DF  160A  118A  200A  160A  118A  	fcall	stringdir
  2692  16E4  160A  158A  24FA  160A  118A  	fcall	_isdigit
  2693  16E9  1803               	btfsc	3,0
  2694  16EA  2EEC               	goto	u5371
  2695  16EB  2EED               	goto	u5370
  2696  16EC                     u5371:
  2697  16EC  2EB1               	goto	l3980
  2698  16ED                     u5370:
  2699  16ED                     l3990:
  2700  16ED  3001               	movlw	1
  2701  16EE  1283               	bcf	3,5	;RP0=0, select bank0
  2702  16EF  1303               	bcf	3,6	;RP1=0, select bank0
  2703  16F0  07AE               	addwf	sprintf@f,f
  2704  16F1  30FF               	movlw	-1
  2705  16F2  072E               	addwf	sprintf@f,w
  2706  16F3  0084               	movwf	4
  2707  16F4  160A  118A  200A  160A  118A  	fcall	stringdir
  2708  16F9  00BC               	movwf	sprintf@c
  2709                           
  2710                           ; Switch size 1, requested type "simple"
  2711                           ; Number of cases is 3, Range of values is 0 to 105
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte           10     6 (average)
  2715                           ; jumptable            260     6 (fixed)
  2716                           ;	Chosen strategy is simple_byte
  2717  16FA  3A00               	xorlw	0	; case 0
  2718  16FB  1903               	skipnz
  2719  16FC  2FFB               	goto	l4050
  2720  16FD  3A64               	xorlw	100	; case 100
  2721  16FE  1903               	skipnz
  2722  16FF  2F04               	goto	l3992
  2723  1700  3A0D               	xorlw	13	; case 105
  2724  1701  1903               	skipnz
  2725  1702  2F04               	goto	l3992
  2726  1703  2FE9               	goto	l4048
  2727  1704                     l3992:
  2728                           
  2729                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2730  1704  0834               	movf	sprintf@ap,w
  2731  1705  0084               	movwf	4
  2732  1706  1383               	bcf	3,7	;select IRP bank0
  2733  1707  0800               	movf	0,w
  2734  1708  00B7               	movwf	sprintf@val
  2735  1709  0A84               	incf	4,f
  2736  170A  0800               	movf	0,w
  2737  170B  00B8               	movwf	sprintf@val+1
  2738  170C                     l3994:
  2739  170C  3002               	movlw	2
  2740  170D  00B1               	movwf	??_sprintf
  2741  170E  0831               	movf	??_sprintf,w
  2742  170F  07B4               	addwf	sprintf@ap,f
  2743  1710                     l3996:
  2744                           
  2745                           ;doprnt.c: 1287: if((int)val < 0) {
  2746  1710  1FB8               	btfss	sprintf@val+1,7
  2747  1711  2F13               	goto	u5381
  2748  1712  2F14               	goto	u5380
  2749  1713                     u5381:
  2750  1713  2F1D               	goto	l4002
  2751  1714                     u5380:
  2752  1714                     l3998:
  2753                           
  2754                           ;doprnt.c: 1288: flag |= 0x03;
  2755  1714  3003               	movlw	3
  2756  1715  00B1               	movwf	??_sprintf
  2757  1716  0831               	movf	??_sprintf,w
  2758  1717  04B6               	iorwf	sprintf@flag,f
  2759  1718                     l4000:
  2760                           
  2761                           ;doprnt.c: 1289: val = -val;
  2762  1718  09B7               	comf	sprintf@val,f
  2763  1719  09B8               	comf	sprintf@val+1,f
  2764  171A  0AB7               	incf	sprintf@val,f
  2765  171B  1903               	skipnz
  2766  171C  0AB8               	incf	sprintf@val+1,f
  2767  171D                     l4002:
  2768                           
  2769                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2770  171D  01BC               	clrf	sprintf@c
  2771  171E  0ABC               	incf	sprintf@c,f
  2772  171F                     l4008:
  2773                           
  2774                           ;doprnt.c: 1332: if(val < dpowers[c])
  2775  171F  083C               	movf	sprintf@c,w
  2776  1720  00B1               	movwf	??_sprintf
  2777  1721  0731               	addwf	??_sprintf,w
  2778  1722  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2779  1723  0084               	movwf	4
  2780  1724  160A  118A  200A  160A  118A  	fcall	stringdir
  2781  1729  00B2               	movwf	??_sprintf+1
  2782  172A  160A  118A  200A  160A  118A  	fcall	stringdir
  2783  172F  00B3               	movwf	??_sprintf+2
  2784  1730  0833               	movf	??_sprintf+2,w
  2785  1731  0238               	subwf	sprintf@val+1,w
  2786  1732  1D03               	skipz
  2787  1733  2F36               	goto	u5395
  2788  1734  0832               	movf	??_sprintf+1,w
  2789  1735  0237               	subwf	sprintf@val,w
  2790  1736                     u5395:
  2791  1736  1803               	skipnc
  2792  1737  2F39               	goto	u5391
  2793  1738  2F3A               	goto	u5390
  2794  1739                     u5391:
  2795  1739  2F3B               	goto	l4012
  2796  173A                     u5390:
  2797  173A  2F45               	goto	l4014
  2798  173B                     l4012:
  2799  173B  3001               	movlw	1
  2800  173C  00B1               	movwf	??_sprintf
  2801  173D  0831               	movf	??_sprintf,w
  2802  173E  07BC               	addwf	sprintf@c,f
  2803  173F  3005               	movlw	5
  2804  1740  063C               	xorwf	sprintf@c,w
  2805  1741  1D03               	btfss	3,2
  2806  1742  2F44               	goto	u5401
  2807  1743  2F45               	goto	u5400
  2808  1744                     u5401:
  2809  1744  2F1F               	goto	l4008
  2810  1745                     u5400:
  2811  1745                     l4014:
  2812                           
  2813                           ;doprnt.c: 1371: if(width && flag & 0x03)
  2814  1745  083A               	movf	sprintf@width,w
  2815  1746  043B               	iorwf	sprintf@width+1,w
  2816  1747  1903               	btfsc	3,2
  2817  1748  2F4A               	goto	u5411
  2818  1749  2F4B               	goto	u5410
  2819  174A                     u5411:
  2820  174A  2F57               	goto	l394
  2821  174B                     u5410:
  2822  174B                     l4016:
  2823  174B  0836               	movf	sprintf@flag,w
  2824  174C  3903               	andlw	3
  2825  174D  1903               	btfsc	3,2
  2826  174E  2F50               	goto	u5421
  2827  174F  2F51               	goto	u5420
  2828  1750                     u5421:
  2829  1750  2F57               	goto	l394
  2830  1751                     u5420:
  2831  1751                     l4018:
  2832                           
  2833                           ;doprnt.c: 1372: width--;
  2834  1751  30FF               	movlw	255
  2835  1752  07BA               	addwf	sprintf@width,f
  2836  1753  1803               	skipnc
  2837  1754  0ABB               	incf	sprintf@width+1,f
  2838  1755  30FF               	movlw	255
  2839  1756  07BB               	addwf	sprintf@width+1,f
  2840  1757                     l394:
  2841                           
  2842                           ;doprnt.c: 1407: if(width > c)
  2843  1757  083B               	movf	sprintf@width+1,w
  2844  1758  3A80               	xorlw	128
  2845  1759  3C80               	sublw	128
  2846  175A  1D03               	skipz
  2847  175B  2F5E               	goto	u5435
  2848  175C  083A               	movf	sprintf@width,w
  2849  175D  023C               	subwf	sprintf@c,w
  2850  175E                     u5435:
  2851  175E  1803               	skipnc
  2852  175F  2F61               	goto	u5431
  2853  1760  2F62               	goto	u5430
  2854  1761                     u5431:
  2855  1761  2F6E               	goto	l4022
  2856  1762                     u5430:
  2857  1762                     l4020:
  2858                           
  2859                           ;doprnt.c: 1408: width -= c;
  2860  1762  1283               	bcf	3,5	;RP0=0, select bank0
  2861  1763  1303               	bcf	3,6	;RP1=0, select bank0
  2862  1764  083C               	movf	sprintf@c,w
  2863  1765  00B1               	movwf	??_sprintf
  2864  1766  01B2               	clrf	??_sprintf+1
  2865  1767  0831               	movf	??_sprintf,w
  2866  1768  02BA               	subwf	sprintf@width,f
  2867  1769  0832               	movf	??_sprintf+1,w
  2868  176A  1C03               	skipc
  2869  176B  03BB               	decf	sprintf@width+1,f
  2870  176C  02BB               	subwf	sprintf@width+1,f
  2871  176D  2F72               	goto	l4024
  2872  176E                     l4022:
  2873                           
  2874                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  2875  176E  1283               	bcf	3,5	;RP0=0, select bank0
  2876  176F  1303               	bcf	3,6	;RP1=0, select bank0
  2877  1770  01BA               	clrf	sprintf@width
  2878  1771  01BB               	clrf	sprintf@width+1
  2879  1772                     l4024:
  2880                           
  2881                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  2882  1772  083A               	movf	sprintf@width,w
  2883  1773  043B               	iorwf	sprintf@width+1,w
  2884  1774  1903               	btfsc	3,2
  2885  1775  2F77               	goto	u5441
  2886  1776  2F78               	goto	u5440
  2887  1777                     u5441:
  2888  1777  2F8F               	goto	l4032
  2889  1778                     u5440:
  2890  1778                     l4026:
  2891                           
  2892                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  2893  1778  3020               	movlw	32
  2894  1779  00B1               	movwf	??_sprintf
  2895  177A  0839               	movf	sprintf@sp,w
  2896  177B  0084               	movwf	4
  2897  177C  0831               	movf	??_sprintf,w
  2898  177D  1783               	bsf	3,7	;select IRP bank2
  2899  177E  0080               	movwf	0
  2900  177F                     l4028:
  2901  177F  3001               	movlw	1
  2902  1780  00B1               	movwf	??_sprintf
  2903  1781  0831               	movf	??_sprintf,w
  2904  1782  07B9               	addwf	sprintf@sp,f
  2905  1783                     l4030:
  2906                           
  2907                           ;doprnt.c: 1457: while(--width);
  2908  1783  30FF               	movlw	255
  2909  1784  07BA               	addwf	sprintf@width,f
  2910  1785  1803               	skipnc
  2911  1786  0ABB               	incf	sprintf@width+1,f
  2912  1787  30FF               	movlw	255
  2913  1788  07BB               	addwf	sprintf@width+1,f
  2914  1789  083A               	movf	sprintf@width,w
  2915  178A  043B               	iorwf	sprintf@width+1,w
  2916  178B  1D03               	btfss	3,2
  2917  178C  2F8E               	goto	u5451
  2918  178D  2F8F               	goto	u5450
  2919  178E                     u5451:
  2920  178E  2F78               	goto	l4026
  2921  178F                     u5450:
  2922  178F                     l4032:
  2923                           
  2924                           ;doprnt.c: 1464: if(flag & 0x03)
  2925  178F  0836               	movf	sprintf@flag,w
  2926  1790  3903               	andlw	3
  2927  1791  1903               	btfsc	3,2
  2928  1792  2F94               	goto	u5461
  2929  1793  2F95               	goto	u5460
  2930  1794                     u5461:
  2931  1794  2FA0               	goto	l4038
  2932  1795                     u5460:
  2933  1795                     l4034:
  2934                           
  2935                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2936  1795  302D               	movlw	45
  2937  1796  00B1               	movwf	??_sprintf
  2938  1797  0839               	movf	sprintf@sp,w
  2939  1798  0084               	movwf	4
  2940  1799  0831               	movf	??_sprintf,w
  2941  179A  1783               	bsf	3,7	;select IRP bank2
  2942  179B  0080               	movwf	0
  2943  179C                     l4036:
  2944  179C  3001               	movlw	1
  2945  179D  00B1               	movwf	??_sprintf
  2946  179E  0831               	movf	??_sprintf,w
  2947  179F  07B9               	addwf	sprintf@sp,f
  2948  17A0                     l4038:
  2949                           
  2950                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2951  17A0  083C               	movf	sprintf@c,w
  2952  17A1  00B1               	movwf	??_sprintf
  2953  17A2  0831               	movf	??_sprintf,w
  2954  17A3  00B5               	movwf	sprintf@prec
  2955                           
  2956                           ;doprnt.c: 1500: while(prec--) {
  2957  17A4  2FE0               	goto	l4046
  2958  17A5                     l4040:
  2959                           
  2960                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2961  17A5  300A               	movlw	10
  2962  17A6  00A8               	movwf	___lwmod@divisor
  2963  17A7  3000               	movlw	0
  2964  17A8  00A9               	movwf	___lwmod@divisor+1
  2965  17A9  0835               	movf	sprintf@prec,w
  2966  17AA  00B1               	movwf	??_sprintf
  2967  17AB  0731               	addwf	??_sprintf,w
  2968  17AC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2969  17AD  0084               	movwf	4
  2970  17AE  160A  118A  200A  160A  118A  	fcall	stringdir
  2971  17B3  00A0               	movwf	___lwdiv@divisor
  2972  17B4  160A  118A  200A  160A  118A  	fcall	stringdir
  2973  17B9  00A1               	movwf	___lwdiv@divisor+1
  2974  17BA  0838               	movf	sprintf@val+1,w
  2975  17BB  00A3               	movwf	___lwdiv@dividend+1
  2976  17BC  0837               	movf	sprintf@val,w
  2977  17BD  00A2               	movwf	___lwdiv@dividend
  2978  17BE  160A  118A  20A8  160A  118A  	fcall	___lwdiv
  2979  17C3  1283               	bcf	3,5	;RP0=0, select bank0
  2980  17C4  1303               	bcf	3,6	;RP1=0, select bank0
  2981  17C5  0821               	movf	?___lwdiv+1,w
  2982  17C6  00AB               	movwf	___lwmod@dividend+1
  2983  17C7  0820               	movf	?___lwdiv,w
  2984  17C8  00AA               	movwf	___lwmod@dividend
  2985  17C9  120A  118A  27BB  160A  118A  	fcall	___lwmod
  2986  17CE  1283               	bcf	3,5	;RP0=0, select bank0
  2987  17CF  1303               	bcf	3,6	;RP1=0, select bank0
  2988  17D0  0828               	movf	?___lwmod,w
  2989  17D1  3E30               	addlw	48
  2990  17D2  00B2               	movwf	??_sprintf+1
  2991  17D3  0832               	movf	??_sprintf+1,w
  2992  17D4  00BC               	movwf	sprintf@c
  2993  17D5                     l4042:
  2994                           
  2995                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2996  17D5  083C               	movf	sprintf@c,w
  2997  17D6  00B1               	movwf	??_sprintf
  2998  17D7  0839               	movf	sprintf@sp,w
  2999  17D8  0084               	movwf	4
  3000  17D9  0831               	movf	??_sprintf,w
  3001  17DA  1783               	bsf	3,7	;select IRP bank2
  3002  17DB  0080               	movwf	0
  3003  17DC                     l4044:
  3004  17DC  3001               	movlw	1
  3005  17DD  00B1               	movwf	??_sprintf
  3006  17DE  0831               	movf	??_sprintf,w
  3007  17DF  07B9               	addwf	sprintf@sp,f
  3008  17E0                     l4046:
  3009  17E0  30FF               	movlw	255
  3010  17E1  00B1               	movwf	??_sprintf
  3011  17E2  0831               	movf	??_sprintf,w
  3012  17E3  07B5               	addwf	sprintf@prec,f
  3013  17E4  0A35               	incf	sprintf@prec,w
  3014  17E5  1D03               	btfss	3,2
  3015  17E6  2FE8               	goto	u5471
  3016  17E7  2FE9               	goto	u5470
  3017  17E8                     u5471:
  3018  17E8  2FA5               	goto	l4040
  3019  17E9                     u5470:
  3020  17E9                     l4048:
  3021  17E9  3001               	movlw	1
  3022  17EA  07AE               	addwf	sprintf@f,f
  3023  17EB  30FF               	movlw	-1
  3024  17EC  072E               	addwf	sprintf@f,w
  3025  17ED  0084               	movwf	4
  3026  17EE  160A  118A  200A  160A  118A  	fcall	stringdir
  3027  17F3  00B1               	movwf	??_sprintf
  3028  17F4  0831               	movf	??_sprintf,w
  3029  17F5  00BC               	movwf	sprintf@c
  3030  17F6  083C               	movf	sprintf@c,w
  3031  17F7  1D03               	btfss	3,2
  3032  17F8  2FFA               	goto	u5481
  3033  17F9  2FFB               	goto	u5480
  3034  17FA                     u5481:
  3035  17FA  2E88               	goto	l3968
  3036  17FB                     u5480:
  3037  17FB                     l4050:
  3038                           
  3039                           ;doprnt.c: 1564: *sp = 0;
  3040  17FB  0839               	movf	sprintf@sp,w
  3041  17FC  0084               	movwf	4
  3042  17FD  1783               	bsf	3,7	;select IRP bank2
  3043  17FE  0180               	clrf	0
  3044  17FF                     l405:
  3045  17FF  0008               	return
  3046  1800                     __end_of_sprintf:
  3047                           
  3048                           	psect	text2
  3049  1CFA                     __ptext2:	
  3050 ;; *************** function _isdigit *****************
  3051 ;; Defined at:
  3052 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  c               1    wreg     unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  c               1    1[BANK0 ] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;		None               void
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       2       0       0       0
  3068 ;;      Temps:          0       0       0       0       0
  3069 ;;      Totals:         0       2       0       0       0
  3070 ;;Total ram usage:        2 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_sprintf
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _isdigit
  3082  1CFA                     _isdigit:
  3083                           
  3084                           ;incstack = 0
  3085                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3086                           ;isdigit@c stored from wreg
  3087  1CFA  1283               	bcf	3,5	;RP0=0, select bank0
  3088  1CFB  1303               	bcf	3,6	;RP1=0, select bank0
  3089  1CFC  00A1               	movwf	isdigit@c
  3090  1CFD                     l3644:
  3091  1CFD  01A0               	clrf	_isdigit$791
  3092  1CFE                     l3646:
  3093  1CFE  303A               	movlw	58
  3094  1CFF  0221               	subwf	isdigit@c,w
  3095  1D00  1803               	skipnc
  3096  1D01  2D03               	goto	u4841
  3097  1D02  2D04               	goto	u4840
  3098  1D03                     u4841:
  3099  1D03  2D0C               	goto	l3652
  3100  1D04                     u4840:
  3101  1D04                     l3648:
  3102  1D04  3030               	movlw	48
  3103  1D05  0221               	subwf	isdigit@c,w
  3104  1D06  1C03               	skipc
  3105  1D07  2D09               	goto	u4851
  3106  1D08  2D0A               	goto	u4850
  3107  1D09                     u4851:
  3108  1D09  2D0C               	goto	l3652
  3109  1D0A                     u4850:
  3110  1D0A                     l3650:
  3111  1D0A  01A0               	clrf	_isdigit$791
  3112  1D0B  0AA0               	incf	_isdigit$791,f
  3113  1D0C                     l3652:
  3114  1D0C  0C20               	rrf	_isdigit$791,w
  3115  1D0D                     l862:
  3116  1D0D  0008               	return
  3117  1D0E                     __end_of_isdigit:
  3118                           
  3119                           	psect	text3
  3120  1DD3                     __ptext3:	
  3121 ;; *************** function ___wmul *****************
  3122 ;; Defined at:
  3123 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3126 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  product         2    4[BANK0 ] unsigned int 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  2    0[BANK0 ] unsigned int 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       4       0       0       0
  3139 ;;      Locals:         0       2       0       0       0
  3140 ;;      Temps:          0       0       0       0       0
  3141 ;;      Totals:         0       6       0       0       0
  3142 ;;Total ram usage:        6 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_sprintf
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function ___wmul
  3154  1DD3                     ___wmul:
  3155  1DD3                     l3656:	
  3156                           ;incstack = 0
  3157                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3158                           
  3159  1DD3  1283               	bcf	3,5	;RP0=0, select bank0
  3160  1DD4  1303               	bcf	3,6	;RP1=0, select bank0
  3161  1DD5  01A4               	clrf	___wmul@product
  3162  1DD6  01A5               	clrf	___wmul@product+1
  3163  1DD7                     l3658:
  3164  1DD7  1C20               	btfss	___wmul@multiplier,0
  3165  1DD8  2DDA               	goto	u4861
  3166  1DD9  2DDB               	goto	u4860
  3167  1DDA                     u4861:
  3168  1DDA  2DE1               	goto	l409
  3169  1DDB                     u4860:
  3170  1DDB                     l3660:
  3171  1DDB  0822               	movf	___wmul@multiplicand,w
  3172  1DDC  07A4               	addwf	___wmul@product,f
  3173  1DDD  1803               	skipnc
  3174  1DDE  0AA5               	incf	___wmul@product+1,f
  3175  1DDF  0823               	movf	___wmul@multiplicand+1,w
  3176  1DE0  07A5               	addwf	___wmul@product+1,f
  3177  1DE1                     l409:
  3178  1DE1  3001               	movlw	1
  3179  1DE2                     u4875:
  3180  1DE2  1003               	clrc
  3181  1DE3  0DA2               	rlf	___wmul@multiplicand,f
  3182  1DE4  0DA3               	rlf	___wmul@multiplicand+1,f
  3183  1DE5  3EFF               	addlw	-1
  3184  1DE6  1D03               	skipz
  3185  1DE7  2DE2               	goto	u4875
  3186  1DE8                     l3662:
  3187  1DE8  3001               	movlw	1
  3188  1DE9                     u4885:
  3189  1DE9  1003               	clrc
  3190  1DEA  0CA1               	rrf	___wmul@multiplier+1,f
  3191  1DEB  0CA0               	rrf	___wmul@multiplier,f
  3192  1DEC  3EFF               	addlw	-1
  3193  1DED  1D03               	skipz
  3194  1DEE  2DE9               	goto	u4885
  3195  1DEF                     l3664:
  3196  1DEF  0820               	movf	___wmul@multiplier,w
  3197  1DF0  0421               	iorwf	___wmul@multiplier+1,w
  3198  1DF1  1D03               	btfss	3,2
  3199  1DF2  2DF4               	goto	u4891
  3200  1DF3  2DF5               	goto	u4890
  3201  1DF4                     u4891:
  3202  1DF4  2DD7               	goto	l3658
  3203  1DF5                     u4890:
  3204  1DF5                     l3666:
  3205  1DF5  0825               	movf	___wmul@product+1,w
  3206  1DF6  00A1               	movwf	?___wmul+1
  3207  1DF7  0824               	movf	___wmul@product,w
  3208  1DF8  00A0               	movwf	?___wmul
  3209  1DF9                     l411:
  3210  1DF9  0008               	return
  3211  1DFA                     __end_of___wmul:
  3212                           
  3213                           	psect	text4
  3214  07BB                     __ptext4:	
  3215 ;; *************** function ___lwmod *****************
  3216 ;; Defined at:
  3217 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  divisor         2    8[BANK0 ] unsigned int 
  3220 ;;  dividend        2   10[BANK0 ] unsigned int 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  counter         1   13[BANK0 ] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  2    8[BANK0 ] unsigned int 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         0       4       0       0       0
  3233 ;;      Locals:         0       1       0       0       0
  3234 ;;      Temps:          0       1       0       0       0
  3235 ;;      Totals:         0       6       0       0       0
  3236 ;;Total ram usage:        6 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    1
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_sprintf
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           
  3247                           ;psect for function ___lwmod
  3248  07BB                     ___lwmod:
  3249  07BB                     l3696:	
  3250                           ;incstack = 0
  3251                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3252                           
  3253  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3254  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3255  07BD  0828               	movf	___lwmod@divisor,w
  3256  07BE  0429               	iorwf	___lwmod@divisor+1,w
  3257  07BF  1903               	btfsc	3,2
  3258  07C0  2FC2               	goto	u4971
  3259  07C1  2FC3               	goto	u4970
  3260  07C2                     u4971:
  3261  07C2  2FF2               	goto	l3714
  3262  07C3                     u4970:
  3263  07C3                     l3698:
  3264  07C3  01AD               	clrf	___lwmod@counter
  3265  07C4  0AAD               	incf	___lwmod@counter,f
  3266  07C5  2FD1               	goto	l3704
  3267  07C6                     l3700:
  3268  07C6  3001               	movlw	1
  3269  07C7                     u4985:
  3270  07C7  1003               	clrc
  3271  07C8  0DA8               	rlf	___lwmod@divisor,f
  3272  07C9  0DA9               	rlf	___lwmod@divisor+1,f
  3273  07CA  3EFF               	addlw	-1
  3274  07CB  1D03               	skipz
  3275  07CC  2FC7               	goto	u4985
  3276  07CD                     l3702:
  3277  07CD  3001               	movlw	1
  3278  07CE  00AC               	movwf	??___lwmod
  3279  07CF  082C               	movf	??___lwmod,w
  3280  07D0  07AD               	addwf	___lwmod@counter,f
  3281  07D1                     l3704:
  3282  07D1  1FA9               	btfss	___lwmod@divisor+1,7
  3283  07D2  2FD4               	goto	u4991
  3284  07D3  2FD5               	goto	u4990
  3285  07D4                     u4991:
  3286  07D4  2FC6               	goto	l3700
  3287  07D5                     u4990:
  3288  07D5                     l3706:
  3289  07D5  0829               	movf	___lwmod@divisor+1,w
  3290  07D6  022B               	subwf	___lwmod@dividend+1,w
  3291  07D7  1D03               	skipz
  3292  07D8  2FDB               	goto	u5005
  3293  07D9  0828               	movf	___lwmod@divisor,w
  3294  07DA  022A               	subwf	___lwmod@dividend,w
  3295  07DB                     u5005:
  3296  07DB  1C03               	skipc
  3297  07DC  2FDE               	goto	u5001
  3298  07DD  2FDF               	goto	u5000
  3299  07DE                     u5001:
  3300  07DE  2FE5               	goto	l3710
  3301  07DF                     u5000:
  3302  07DF                     l3708:
  3303  07DF  0828               	movf	___lwmod@divisor,w
  3304  07E0  02AA               	subwf	___lwmod@dividend,f
  3305  07E1  0829               	movf	___lwmod@divisor+1,w
  3306  07E2  1C03               	skipc
  3307  07E3  03AB               	decf	___lwmod@dividend+1,f
  3308  07E4  02AB               	subwf	___lwmod@dividend+1,f
  3309  07E5                     l3710:
  3310  07E5  3001               	movlw	1
  3311  07E6                     u5015:
  3312  07E6  1003               	clrc
  3313  07E7  0CA9               	rrf	___lwmod@divisor+1,f
  3314  07E8  0CA8               	rrf	___lwmod@divisor,f
  3315  07E9  3EFF               	addlw	-1
  3316  07EA  1D03               	skipz
  3317  07EB  2FE6               	goto	u5015
  3318  07EC                     l3712:
  3319  07EC  3001               	movlw	1
  3320  07ED  02AD               	subwf	___lwmod@counter,f
  3321  07EE  1D03               	btfss	3,2
  3322  07EF  2FF1               	goto	u5021
  3323  07F0  2FF2               	goto	u5020
  3324  07F1                     u5021:
  3325  07F1  2FD5               	goto	l3706
  3326  07F2                     u5020:
  3327  07F2                     l3714:
  3328  07F2  082B               	movf	___lwmod@dividend+1,w
  3329  07F3  00A9               	movwf	?___lwmod+1
  3330  07F4  082A               	movf	___lwmod@dividend,w
  3331  07F5  00A8               	movwf	?___lwmod
  3332  07F6                     l691:
  3333  07F6  0008               	return
  3334  07F7                     __end_of___lwmod:
  3335                           
  3336                           	psect	text5
  3337  10A8                     __ptext5:	
  3338 ;; *************** function ___lwdiv *****************
  3339 ;; Defined at:
  3340 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  divisor         2    0[BANK0 ] unsigned int 
  3343 ;;  dividend        2    2[BANK0 ] unsigned int 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  quotient        2    6[BANK0 ] unsigned int 
  3346 ;;  counter         1    5[BANK0 ] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  2    0[BANK0 ] unsigned int 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         0       4       0       0       0
  3357 ;;      Locals:         0       3       0       0       0
  3358 ;;      Temps:          0       1       0       0       0
  3359 ;;      Totals:         0       8       0       0       0
  3360 ;;Total ram usage:        8 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    1
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_sprintf
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function ___lwdiv
  3372  10A8                     ___lwdiv:
  3373  10A8                     l3670:	
  3374                           ;incstack = 0
  3375                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3376                           
  3377  10A8  1283               	bcf	3,5	;RP0=0, select bank0
  3378  10A9  1303               	bcf	3,6	;RP1=0, select bank0
  3379  10AA  01A6               	clrf	___lwdiv@quotient
  3380  10AB  01A7               	clrf	___lwdiv@quotient+1
  3381  10AC                     l3672:
  3382  10AC  0820               	movf	___lwdiv@divisor,w
  3383  10AD  0421               	iorwf	___lwdiv@divisor+1,w
  3384  10AE  1903               	btfsc	3,2
  3385  10AF  28B1               	goto	u4901
  3386  10B0  28B2               	goto	u4900
  3387  10B1                     u4901:
  3388  10B1  28E9               	goto	l3692
  3389  10B2                     u4900:
  3390  10B2                     l3674:
  3391  10B2  01A5               	clrf	___lwdiv@counter
  3392  10B3  0AA5               	incf	___lwdiv@counter,f
  3393  10B4  28C0               	goto	l3680
  3394  10B5                     l3676:
  3395  10B5  3001               	movlw	1
  3396  10B6                     u4915:
  3397  10B6  1003               	clrc
  3398  10B7  0DA0               	rlf	___lwdiv@divisor,f
  3399  10B8  0DA1               	rlf	___lwdiv@divisor+1,f
  3400  10B9  3EFF               	addlw	-1
  3401  10BA  1D03               	skipz
  3402  10BB  28B6               	goto	u4915
  3403  10BC                     l3678:
  3404  10BC  3001               	movlw	1
  3405  10BD  00A4               	movwf	??___lwdiv
  3406  10BE  0824               	movf	??___lwdiv,w
  3407  10BF  07A5               	addwf	___lwdiv@counter,f
  3408  10C0                     l3680:
  3409  10C0  1FA1               	btfss	___lwdiv@divisor+1,7
  3410  10C1  28C3               	goto	u4921
  3411  10C2  28C4               	goto	u4920
  3412  10C3                     u4921:
  3413  10C3  28B5               	goto	l3676
  3414  10C4                     u4920:
  3415  10C4                     l3682:
  3416  10C4  3001               	movlw	1
  3417  10C5                     u4935:
  3418  10C5  1003               	clrc
  3419  10C6  0DA6               	rlf	___lwdiv@quotient,f
  3420  10C7  0DA7               	rlf	___lwdiv@quotient+1,f
  3421  10C8  3EFF               	addlw	-1
  3422  10C9  1D03               	skipz
  3423  10CA  28C5               	goto	u4935
  3424  10CB  0821               	movf	___lwdiv@divisor+1,w
  3425  10CC  0223               	subwf	___lwdiv@dividend+1,w
  3426  10CD  1D03               	skipz
  3427  10CE  28D1               	goto	u4945
  3428  10CF  0820               	movf	___lwdiv@divisor,w
  3429  10D0  0222               	subwf	___lwdiv@dividend,w
  3430  10D1                     u4945:
  3431  10D1  1C03               	skipc
  3432  10D2  28D4               	goto	u4941
  3433  10D3  28D5               	goto	u4940
  3434  10D4                     u4941:
  3435  10D4  28DC               	goto	l3688
  3436  10D5                     u4940:
  3437  10D5                     l3684:
  3438  10D5  0820               	movf	___lwdiv@divisor,w
  3439  10D6  02A2               	subwf	___lwdiv@dividend,f
  3440  10D7  0821               	movf	___lwdiv@divisor+1,w
  3441  10D8  1C03               	skipc
  3442  10D9  03A3               	decf	___lwdiv@dividend+1,f
  3443  10DA  02A3               	subwf	___lwdiv@dividend+1,f
  3444  10DB                     l3686:
  3445  10DB  1426               	bsf	___lwdiv@quotient,0
  3446  10DC                     l3688:
  3447  10DC  3001               	movlw	1
  3448  10DD                     u4955:
  3449  10DD  1003               	clrc
  3450  10DE  0CA1               	rrf	___lwdiv@divisor+1,f
  3451  10DF  0CA0               	rrf	___lwdiv@divisor,f
  3452  10E0  3EFF               	addlw	-1
  3453  10E1  1D03               	skipz
  3454  10E2  28DD               	goto	u4955
  3455  10E3                     l3690:
  3456  10E3  3001               	movlw	1
  3457  10E4  02A5               	subwf	___lwdiv@counter,f
  3458  10E5  1D03               	btfss	3,2
  3459  10E6  28E8               	goto	u4961
  3460  10E7  28E9               	goto	u4960
  3461  10E8                     u4961:
  3462  10E8  28C4               	goto	l3682
  3463  10E9                     u4960:
  3464  10E9                     l3692:
  3465  10E9  0827               	movf	___lwdiv@quotient+1,w
  3466  10EA  00A1               	movwf	?___lwdiv+1
  3467  10EB  0826               	movf	___lwdiv@quotient,w
  3468  10EC  00A0               	movwf	?___lwdiv
  3469  10ED                     l681:
  3470  10ED  0008               	return
  3471  10EE                     __end_of___lwdiv:
  3472                           
  3473                           	psect	text6
  3474  13CD                     __ptext6:	
  3475 ;; *************** function _map *****************
  3476 ;; Defined at:
  3477 ;;		line 286 in file "AFC.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  x               4   21[BANK1 ] float 
  3480 ;;  in_min          4   25[BANK1 ] float 
  3481 ;;  in_max          4   29[BANK1 ] float 
  3482 ;;  out_min         4   33[BANK1 ] float 
  3483 ;;  out_max         4   37[BANK1 ] float 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  4   21[BANK1 ] float 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         0       0      20       0       0
  3496 ;;      Locals:         0       0       4       0       0
  3497 ;;      Temps:          0       0       0       0       0
  3498 ;;      Totals:         0       0      24       0       0
  3499 ;;Total ram usage:       24 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    3
  3502 ;; This function calls:
  3503 ;;		___fladd
  3504 ;;		___fldiv
  3505 ;;		___flmul
  3506 ;;		___flsub
  3507 ;; This function is called by:
  3508 ;;		_main
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function _map
  3514  13CD                     _map:
  3515  13CD                     l3962:	
  3516                           ;incstack = 0
  3517                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3518                           
  3519                           
  3520                           ;AFC.c: 287: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3521  13CD  1683               	bsf	3,5	;RP0=1, select bank1
  3522  13CE  1303               	bcf	3,6	;RP1=0, select bank1
  3523  13CF  083C               	movf	(map@in_min+3)^(0+128),w
  3524  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  3525  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  3526  13D2  00CA               	movwf	___flsub@a+3
  3527  13D3  1683               	bsf	3,5	;RP0=1, select bank1
  3528  13D4  1303               	bcf	3,6	;RP1=0, select bank1
  3529  13D5  083B               	movf	(map@in_min+2)^(0+128),w
  3530  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  3531  13D7  1303               	bcf	3,6	;RP1=0, select bank0
  3532  13D8  00C9               	movwf	___flsub@a+2
  3533  13D9  1683               	bsf	3,5	;RP0=1, select bank1
  3534  13DA  1303               	bcf	3,6	;RP1=0, select bank1
  3535  13DB  083A               	movf	(map@in_min+1)^(0+128),w
  3536  13DC  1283               	bcf	3,5	;RP0=0, select bank0
  3537  13DD  1303               	bcf	3,6	;RP1=0, select bank0
  3538  13DE  00C8               	movwf	___flsub@a+1
  3539  13DF  1683               	bsf	3,5	;RP0=1, select bank1
  3540  13E0  1303               	bcf	3,6	;RP1=0, select bank1
  3541  13E1  0839               	movf	map@in_min^(0+128),w
  3542  13E2  1283               	bcf	3,5	;RP0=0, select bank0
  3543  13E3  1303               	bcf	3,6	;RP1=0, select bank0
  3544  13E4  00C7               	movwf	___flsub@a
  3545  13E5  1683               	bsf	3,5	;RP0=1, select bank1
  3546  13E6  1303               	bcf	3,6	;RP1=0, select bank1
  3547  13E7  0840               	movf	(map@in_max+3)^(0+128),w
  3548  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  3549  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  3550  13EA  00CE               	movwf	___flsub@b+3
  3551  13EB  1683               	bsf	3,5	;RP0=1, select bank1
  3552  13EC  1303               	bcf	3,6	;RP1=0, select bank1
  3553  13ED  083F               	movf	(map@in_max+2)^(0+128),w
  3554  13EE  1283               	bcf	3,5	;RP0=0, select bank0
  3555  13EF  1303               	bcf	3,6	;RP1=0, select bank0
  3556  13F0  00CD               	movwf	___flsub@b+2
  3557  13F1  1683               	bsf	3,5	;RP0=1, select bank1
  3558  13F2  1303               	bcf	3,6	;RP1=0, select bank1
  3559  13F3  083E               	movf	(map@in_max+1)^(0+128),w
  3560  13F4  1283               	bcf	3,5	;RP0=0, select bank0
  3561  13F5  1303               	bcf	3,6	;RP1=0, select bank0
  3562  13F6  00CC               	movwf	___flsub@b+1
  3563  13F7  1683               	bsf	3,5	;RP0=1, select bank1
  3564  13F8  1303               	bcf	3,6	;RP1=0, select bank1
  3565  13F9  083D               	movf	map@in_max^(0+128),w
  3566  13FA  1283               	bcf	3,5	;RP0=0, select bank0
  3567  13FB  1303               	bcf	3,6	;RP1=0, select bank0
  3568  13FC  00CB               	movwf	___flsub@b
  3569  13FD  160A  158A  2589  160A  118A  	fcall	___flsub
  3570  1402  1283               	bcf	3,5	;RP0=0, select bank0
  3571  1403  1303               	bcf	3,6	;RP1=0, select bank0
  3572  1404  084A               	movf	?___flsub+3,w
  3573  1405  1683               	bsf	3,5	;RP0=1, select bank1
  3574  1406  1303               	bcf	3,6	;RP1=0, select bank1
  3575  1407  00A3               	movwf	(___fldiv@a+3)^(0+128)
  3576  1408  1283               	bcf	3,5	;RP0=0, select bank0
  3577  1409  1303               	bcf	3,6	;RP1=0, select bank0
  3578  140A  0849               	movf	?___flsub+2,w
  3579  140B  1683               	bsf	3,5	;RP0=1, select bank1
  3580  140C  1303               	bcf	3,6	;RP1=0, select bank1
  3581  140D  00A2               	movwf	(___fldiv@a+2)^(0+128)
  3582  140E  1283               	bcf	3,5	;RP0=0, select bank0
  3583  140F  1303               	bcf	3,6	;RP1=0, select bank0
  3584  1410  0848               	movf	?___flsub+1,w
  3585  1411  1683               	bsf	3,5	;RP0=1, select bank1
  3586  1412  1303               	bcf	3,6	;RP1=0, select bank1
  3587  1413  00A1               	movwf	(___fldiv@a+1)^(0+128)
  3588  1414  1283               	bcf	3,5	;RP0=0, select bank0
  3589  1415  1303               	bcf	3,6	;RP1=0, select bank0
  3590  1416  0847               	movf	?___flsub,w
  3591  1417  1683               	bsf	3,5	;RP0=1, select bank1
  3592  1418  1303               	bcf	3,6	;RP1=0, select bank1
  3593  1419  00A0               	movwf	___fldiv@a^(0+128)
  3594  141A  0844               	movf	(map@out_min+3)^(0+128),w
  3595  141B  1283               	bcf	3,5	;RP0=0, select bank0
  3596  141C  1303               	bcf	3,6	;RP1=0, select bank0
  3597  141D  00CA               	movwf	___flsub@a+3
  3598  141E  1683               	bsf	3,5	;RP0=1, select bank1
  3599  141F  1303               	bcf	3,6	;RP1=0, select bank1
  3600  1420  0843               	movf	(map@out_min+2)^(0+128),w
  3601  1421  1283               	bcf	3,5	;RP0=0, select bank0
  3602  1422  1303               	bcf	3,6	;RP1=0, select bank0
  3603  1423  00C9               	movwf	___flsub@a+2
  3604  1424  1683               	bsf	3,5	;RP0=1, select bank1
  3605  1425  1303               	bcf	3,6	;RP1=0, select bank1
  3606  1426  0842               	movf	(map@out_min+1)^(0+128),w
  3607  1427  1283               	bcf	3,5	;RP0=0, select bank0
  3608  1428  1303               	bcf	3,6	;RP1=0, select bank0
  3609  1429  00C8               	movwf	___flsub@a+1
  3610  142A  1683               	bsf	3,5	;RP0=1, select bank1
  3611  142B  1303               	bcf	3,6	;RP1=0, select bank1
  3612  142C  0841               	movf	map@out_min^(0+128),w
  3613  142D  1283               	bcf	3,5	;RP0=0, select bank0
  3614  142E  1303               	bcf	3,6	;RP1=0, select bank0
  3615  142F  00C7               	movwf	___flsub@a
  3616  1430  1683               	bsf	3,5	;RP0=1, select bank1
  3617  1431  1303               	bcf	3,6	;RP1=0, select bank1
  3618  1432  0848               	movf	(map@out_max+3)^(0+128),w
  3619  1433  1283               	bcf	3,5	;RP0=0, select bank0
  3620  1434  1303               	bcf	3,6	;RP1=0, select bank0
  3621  1435  00CE               	movwf	___flsub@b+3
  3622  1436  1683               	bsf	3,5	;RP0=1, select bank1
  3623  1437  1303               	bcf	3,6	;RP1=0, select bank1
  3624  1438  0847               	movf	(map@out_max+2)^(0+128),w
  3625  1439  1283               	bcf	3,5	;RP0=0, select bank0
  3626  143A  1303               	bcf	3,6	;RP1=0, select bank0
  3627  143B  00CD               	movwf	___flsub@b+2
  3628  143C  1683               	bsf	3,5	;RP0=1, select bank1
  3629  143D  1303               	bcf	3,6	;RP1=0, select bank1
  3630  143E  0846               	movf	(map@out_max+1)^(0+128),w
  3631  143F  1283               	bcf	3,5	;RP0=0, select bank0
  3632  1440  1303               	bcf	3,6	;RP1=0, select bank0
  3633  1441  00CC               	movwf	___flsub@b+1
  3634  1442  1683               	bsf	3,5	;RP0=1, select bank1
  3635  1443  1303               	bcf	3,6	;RP1=0, select bank1
  3636  1444  0845               	movf	map@out_max^(0+128),w
  3637  1445  1283               	bcf	3,5	;RP0=0, select bank0
  3638  1446  1303               	bcf	3,6	;RP1=0, select bank0
  3639  1447  00CB               	movwf	___flsub@b
  3640  1448  160A  158A  2589  160A  118A  	fcall	___flsub
  3641  144D  1283               	bcf	3,5	;RP0=0, select bank0
  3642  144E  1303               	bcf	3,6	;RP1=0, select bank0
  3643  144F  084A               	movf	?___flsub+3,w
  3644  1450  00D2               	movwf	___flmul@b+3
  3645  1451  0849               	movf	?___flsub+2,w
  3646  1452  00D1               	movwf	___flmul@b+2
  3647  1453  0848               	movf	?___flsub+1,w
  3648  1454  00D0               	movwf	___flmul@b+1
  3649  1455  0847               	movf	?___flsub,w
  3650  1456  00CF               	movwf	___flmul@b
  3651  1457  1683               	bsf	3,5	;RP0=1, select bank1
  3652  1458  1303               	bcf	3,6	;RP1=0, select bank1
  3653  1459  083C               	movf	(map@in_min+3)^(0+128),w
  3654  145A  1283               	bcf	3,5	;RP0=0, select bank0
  3655  145B  1303               	bcf	3,6	;RP1=0, select bank0
  3656  145C  00CA               	movwf	___flsub@a+3
  3657  145D  1683               	bsf	3,5	;RP0=1, select bank1
  3658  145E  1303               	bcf	3,6	;RP1=0, select bank1
  3659  145F  083B               	movf	(map@in_min+2)^(0+128),w
  3660  1460  1283               	bcf	3,5	;RP0=0, select bank0
  3661  1461  1303               	bcf	3,6	;RP1=0, select bank0
  3662  1462  00C9               	movwf	___flsub@a+2
  3663  1463  1683               	bsf	3,5	;RP0=1, select bank1
  3664  1464  1303               	bcf	3,6	;RP1=0, select bank1
  3665  1465  083A               	movf	(map@in_min+1)^(0+128),w
  3666  1466  1283               	bcf	3,5	;RP0=0, select bank0
  3667  1467  1303               	bcf	3,6	;RP1=0, select bank0
  3668  1468  00C8               	movwf	___flsub@a+1
  3669  1469  1683               	bsf	3,5	;RP0=1, select bank1
  3670  146A  1303               	bcf	3,6	;RP1=0, select bank1
  3671  146B  0839               	movf	map@in_min^(0+128),w
  3672  146C  1283               	bcf	3,5	;RP0=0, select bank0
  3673  146D  1303               	bcf	3,6	;RP1=0, select bank0
  3674  146E  00C7               	movwf	___flsub@a
  3675  146F  1683               	bsf	3,5	;RP0=1, select bank1
  3676  1470  1303               	bcf	3,6	;RP1=0, select bank1
  3677  1471  0838               	movf	(map@x+3)^(0+128),w
  3678  1472  1283               	bcf	3,5	;RP0=0, select bank0
  3679  1473  1303               	bcf	3,6	;RP1=0, select bank0
  3680  1474  00CE               	movwf	___flsub@b+3
  3681  1475  1683               	bsf	3,5	;RP0=1, select bank1
  3682  1476  1303               	bcf	3,6	;RP1=0, select bank1
  3683  1477  0837               	movf	(map@x+2)^(0+128),w
  3684  1478  1283               	bcf	3,5	;RP0=0, select bank0
  3685  1479  1303               	bcf	3,6	;RP1=0, select bank0
  3686  147A  00CD               	movwf	___flsub@b+2
  3687  147B  1683               	bsf	3,5	;RP0=1, select bank1
  3688  147C  1303               	bcf	3,6	;RP1=0, select bank1
  3689  147D  0836               	movf	(map@x+1)^(0+128),w
  3690  147E  1283               	bcf	3,5	;RP0=0, select bank0
  3691  147F  1303               	bcf	3,6	;RP1=0, select bank0
  3692  1480  00CC               	movwf	___flsub@b+1
  3693  1481  1683               	bsf	3,5	;RP0=1, select bank1
  3694  1482  1303               	bcf	3,6	;RP1=0, select bank1
  3695  1483  0835               	movf	map@x^(0+128),w
  3696  1484  1283               	bcf	3,5	;RP0=0, select bank0
  3697  1485  1303               	bcf	3,6	;RP1=0, select bank0
  3698  1486  00CB               	movwf	___flsub@b
  3699  1487  160A  158A  2589  160A  118A  	fcall	___flsub
  3700  148C  1283               	bcf	3,5	;RP0=0, select bank0
  3701  148D  1303               	bcf	3,6	;RP1=0, select bank0
  3702  148E  084A               	movf	?___flsub+3,w
  3703  148F  00D6               	movwf	___flmul@a+3
  3704  1490  0849               	movf	?___flsub+2,w
  3705  1491  00D5               	movwf	___flmul@a+2
  3706  1492  0848               	movf	?___flsub+1,w
  3707  1493  00D4               	movwf	___flmul@a+1
  3708  1494  0847               	movf	?___flsub,w
  3709  1495  00D3               	movwf	___flmul@a
  3710  1496  120A  118A  245A  160A  118A  	fcall	___flmul
  3711  149B  1283               	bcf	3,5	;RP0=0, select bank0
  3712  149C  1303               	bcf	3,6	;RP1=0, select bank0
  3713  149D  0852               	movf	?___flmul+3,w
  3714  149E  1683               	bsf	3,5	;RP0=1, select bank1
  3715  149F  1303               	bcf	3,6	;RP1=0, select bank1
  3716  14A0  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3717  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  3718  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  3719  14A3  0851               	movf	?___flmul+2,w
  3720  14A4  1683               	bsf	3,5	;RP0=1, select bank1
  3721  14A5  1303               	bcf	3,6	;RP1=0, select bank1
  3722  14A6  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3723  14A7  1283               	bcf	3,5	;RP0=0, select bank0
  3724  14A8  1303               	bcf	3,6	;RP1=0, select bank0
  3725  14A9  0850               	movf	?___flmul+1,w
  3726  14AA  1683               	bsf	3,5	;RP0=1, select bank1
  3727  14AB  1303               	bcf	3,6	;RP1=0, select bank1
  3728  14AC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3729  14AD  1283               	bcf	3,5	;RP0=0, select bank0
  3730  14AE  1303               	bcf	3,6	;RP1=0, select bank0
  3731  14AF  084F               	movf	?___flmul,w
  3732  14B0  1683               	bsf	3,5	;RP0=1, select bank1
  3733  14B1  1303               	bcf	3,6	;RP1=0, select bank1
  3734  14B2  00A4               	movwf	___fldiv@b^(0+128)
  3735  14B3  120A  158A  207F  160A  118A  	fcall	___fldiv
  3736  14B8  1683               	bsf	3,5	;RP0=1, select bank1
  3737  14B9  1303               	bcf	3,6	;RP1=0, select bank1
  3738  14BA  0823               	movf	(?___fldiv+3)^(0+128),w
  3739  14BB  00CC               	movwf	(_map$1060+3)^(0+128)
  3740  14BC  0822               	movf	(?___fldiv+2)^(0+128),w
  3741  14BD  00CB               	movwf	(_map$1060+2)^(0+128)
  3742  14BE  0821               	movf	(?___fldiv+1)^(0+128),w
  3743  14BF  00CA               	movwf	(_map$1060+1)^(0+128)
  3744  14C0  0820               	movf	?___fldiv^(0+128),w
  3745  14C1  00C9               	movwf	_map$1060^(0+128)
  3746                           
  3747                           ;AFC.c: 287: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3748  14C2  0844               	movf	(map@out_min+3)^(0+128),w
  3749  14C3  1283               	bcf	3,5	;RP0=0, select bank0
  3750  14C4  1303               	bcf	3,6	;RP1=0, select bank0
  3751  14C5  00B6               	movwf	___fladd@b+3
  3752  14C6  1683               	bsf	3,5	;RP0=1, select bank1
  3753  14C7  1303               	bcf	3,6	;RP1=0, select bank1
  3754  14C8  0843               	movf	(map@out_min+2)^(0+128),w
  3755  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  3756  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  3757  14CB  00B5               	movwf	___fladd@b+2
  3758  14CC  1683               	bsf	3,5	;RP0=1, select bank1
  3759  14CD  1303               	bcf	3,6	;RP1=0, select bank1
  3760  14CE  0842               	movf	(map@out_min+1)^(0+128),w
  3761  14CF  1283               	bcf	3,5	;RP0=0, select bank0
  3762  14D0  1303               	bcf	3,6	;RP1=0, select bank0
  3763  14D1  00B4               	movwf	___fladd@b+1
  3764  14D2  1683               	bsf	3,5	;RP0=1, select bank1
  3765  14D3  1303               	bcf	3,6	;RP1=0, select bank1
  3766  14D4  0841               	movf	map@out_min^(0+128),w
  3767  14D5  1283               	bcf	3,5	;RP0=0, select bank0
  3768  14D6  1303               	bcf	3,6	;RP1=0, select bank0
  3769  14D7  00B3               	movwf	___fladd@b
  3770  14D8  1683               	bsf	3,5	;RP0=1, select bank1
  3771  14D9  1303               	bcf	3,6	;RP1=0, select bank1
  3772  14DA  084C               	movf	(_map$1060+3)^(0+128),w
  3773  14DB  1283               	bcf	3,5	;RP0=0, select bank0
  3774  14DC  1303               	bcf	3,6	;RP1=0, select bank0
  3775  14DD  00BA               	movwf	___fladd@a+3
  3776  14DE  1683               	bsf	3,5	;RP0=1, select bank1
  3777  14DF  1303               	bcf	3,6	;RP1=0, select bank1
  3778  14E0  084B               	movf	(_map$1060+2)^(0+128),w
  3779  14E1  1283               	bcf	3,5	;RP0=0, select bank0
  3780  14E2  1303               	bcf	3,6	;RP1=0, select bank0
  3781  14E3  00B9               	movwf	___fladd@a+2
  3782  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  3783  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  3784  14E6  084A               	movf	(_map$1060+1)^(0+128),w
  3785  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  3786  14E8  1303               	bcf	3,6	;RP1=0, select bank0
  3787  14E9  00B8               	movwf	___fladd@a+1
  3788  14EA  1683               	bsf	3,5	;RP0=1, select bank1
  3789  14EB  1303               	bcf	3,6	;RP1=0, select bank1
  3790  14EC  0849               	movf	_map$1060^(0+128),w
  3791  14ED  1283               	bcf	3,5	;RP0=0, select bank0
  3792  14EE  1303               	bcf	3,6	;RP1=0, select bank0
  3793  14EF  00B7               	movwf	___fladd@a
  3794  14F0  120A  158A  22E2  160A  118A  	fcall	___fladd
  3795  14F5  1283               	bcf	3,5	;RP0=0, select bank0
  3796  14F6  1303               	bcf	3,6	;RP1=0, select bank0
  3797  14F7  0836               	movf	?___fladd+3,w
  3798  14F8  1683               	bsf	3,5	;RP0=1, select bank1
  3799  14F9  1303               	bcf	3,6	;RP1=0, select bank1
  3800  14FA  00B8               	movwf	(?_map+3)^(0+128)
  3801  14FB  1283               	bcf	3,5	;RP0=0, select bank0
  3802  14FC  1303               	bcf	3,6	;RP1=0, select bank0
  3803  14FD  0835               	movf	?___fladd+2,w
  3804  14FE  1683               	bsf	3,5	;RP0=1, select bank1
  3805  14FF  1303               	bcf	3,6	;RP1=0, select bank1
  3806  1500  00B7               	movwf	(?_map+2)^(0+128)
  3807  1501  1283               	bcf	3,5	;RP0=0, select bank0
  3808  1502  1303               	bcf	3,6	;RP1=0, select bank0
  3809  1503  0834               	movf	?___fladd+1,w
  3810  1504  1683               	bsf	3,5	;RP0=1, select bank1
  3811  1505  1303               	bcf	3,6	;RP1=0, select bank1
  3812  1506  00B6               	movwf	(?_map+1)^(0+128)
  3813  1507  1283               	bcf	3,5	;RP0=0, select bank0
  3814  1508  1303               	bcf	3,6	;RP1=0, select bank0
  3815  1509  0833               	movf	?___fladd,w
  3816  150A  1683               	bsf	3,5	;RP0=1, select bank1
  3817  150B  1303               	bcf	3,6	;RP1=0, select bank1
  3818  150C  00B5               	movwf	?_map^(0+128)
  3819  150D                     l278:
  3820  150D  0008               	return
  3821  150E                     __end_of_map:
  3822                           
  3823                           	psect	text7
  3824  1E86                     __ptext7:	
  3825 ;; *************** function _LCD_Write_String *****************
  3826 ;; Defined at:
  3827 ;;		line 134 in file "I2C_LCD.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  Str             2    6[BANK0 ] PTR unsigned char 
  3830 ;;		 -> STR_11(13), STR_10(13), STR_9(2), STR_8(10), 
  3831 ;;		 -> STR_7(11), fanSTR(16), TempSTR(16), STR_4(12), 
  3832 ;;		 -> STR_3(14), STR_2(14), STR_1(15), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  i               2   11[BANK0 ] int 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       2       0       0       0
  3845 ;;      Locals:         0       2       0       0       0
  3846 ;;      Temps:          0       3       0       0       0
  3847 ;;      Totals:         0       7       0       0       0
  3848 ;;Total ram usage:        7 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    6
  3851 ;; This function calls:
  3852 ;;		_LCD_Write_Char
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _LCD_Write_String
  3860  1E86                     _LCD_Write_String:
  3861  1E86                     l3902:	
  3862                           ;incstack = 0
  3863                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3864                           
  3865                           
  3866                           ;I2C_LCD.c: 136: for(int i=0; Str[i]!='\0'; i++)
  3867  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  3868  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  3869  1E88  01AB               	clrf	LCD_Write_String@i
  3870  1E89  01AC               	clrf	LCD_Write_String@i+1
  3871  1E8A  2EAF               	goto	l3908
  3872  1E8B                     l3904:
  3873                           
  3874                           ;I2C_LCD.c: 137: LCD_Write_Char(Str[i]);
  3875  1E8B  082B               	movf	LCD_Write_String@i,w
  3876  1E8C  0726               	addwf	LCD_Write_String@Str,w
  3877  1E8D  00A9               	movwf	??_LCD_Write_String+1
  3878  1E8E  0827               	movf	LCD_Write_String@Str+1,w
  3879  1E8F  00A8               	movwf	??_LCD_Write_String
  3880  1E90  1803               	skipnc
  3881  1E91  0AA8               	incf	??_LCD_Write_String,f
  3882  1E92  1FAB               	btfss	LCD_Write_String@i,7
  3883  1E93  2E95               	goto	u5320
  3884  1E94  03A8               	decf	??_LCD_Write_String,f
  3885  1E95                     u5320:
  3886  1E95  1283               	bcf	3,5	;RP0=0, select bank0
  3887  1E96  1303               	bcf	3,6	;RP1=0, select bank0
  3888  1E97  0828               	movf	??_LCD_Write_String,w
  3889  1E98  00AA               	movwf	??_LCD_Write_String+2
  3890  1E99  082A               	movf	??_LCD_Write_String+2,w
  3891  1E9A  00FF               	movwf	btemp+1
  3892  1E9B  0829               	movf	??_LCD_Write_String+1,w
  3893  1E9C  0084               	movwf	4
  3894  1E9D  160A  118A  2000  160A  158A  	fcall	stringtab
  3895  1EA2  160A  158A  256A  160A  158A  	fcall	_LCD_Write_Char
  3896  1EA7                     l3906:
  3897  1EA7  3001               	movlw	1
  3898  1EA8  1283               	bcf	3,5	;RP0=0, select bank0
  3899  1EA9  1303               	bcf	3,6	;RP1=0, select bank0
  3900  1EAA  07AB               	addwf	LCD_Write_String@i,f
  3901  1EAB  1803               	skipnc
  3902  1EAC  0AAC               	incf	LCD_Write_String@i+1,f
  3903  1EAD  3000               	movlw	0
  3904  1EAE  07AC               	addwf	LCD_Write_String@i+1,f
  3905  1EAF                     l3908:
  3906  1EAF  082B               	movf	LCD_Write_String@i,w
  3907  1EB0  0726               	addwf	LCD_Write_String@Str,w
  3908  1EB1  00A9               	movwf	??_LCD_Write_String+1
  3909  1EB2  0827               	movf	LCD_Write_String@Str+1,w
  3910  1EB3  00A8               	movwf	??_LCD_Write_String
  3911  1EB4  1803               	skipnc
  3912  1EB5  0AA8               	incf	??_LCD_Write_String,f
  3913  1EB6  1FAB               	btfss	LCD_Write_String@i,7
  3914  1EB7  2EB9               	goto	u5330
  3915  1EB8  03A8               	decf	??_LCD_Write_String,f
  3916  1EB9                     u5330:
  3917  1EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3918  1EBA  1303               	bcf	3,6	;RP1=0, select bank0
  3919  1EBB  0828               	movf	??_LCD_Write_String,w
  3920  1EBC  00AA               	movwf	??_LCD_Write_String+2
  3921  1EBD  082A               	movf	??_LCD_Write_String+2,w
  3922  1EBE  00FF               	movwf	btemp+1
  3923  1EBF  0829               	movf	??_LCD_Write_String+1,w
  3924  1EC0  0084               	movwf	4
  3925  1EC1  160A  118A  2000  160A  158A  	fcall	stringtab
  3926  1EC6  3A00               	xorlw	0
  3927  1EC7  1D03               	skipz
  3928  1EC8  2ECA               	goto	u5341
  3929  1EC9  2ECB               	goto	u5340
  3930  1ECA                     u5341:
  3931  1ECA  2E8B               	goto	l3904
  3932  1ECB                     u5340:
  3933  1ECB                     l99:
  3934  1ECB  0008               	return
  3935  1ECC                     __end_of_LCD_Write_String:
  3936                           
  3937                           	psect	text8
  3938  1D6A                     __ptext8:	
  3939 ;; *************** function _LCD_Write_Char *****************
  3940 ;; Defined at:
  3941 ;;		line 127 in file "I2C_LCD.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  Data            1    wreg     unsigned char 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  Data            1    5[BANK0 ] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0, pclath, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         0       0       0       0       0
  3956 ;;      Locals:         0       1       0       0       0
  3957 ;;      Temps:          0       1       0       0       0
  3958 ;;      Totals:         0       2       0       0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    5
  3962 ;; This function calls:
  3963 ;;		_LCD_Write_4Bit
  3964 ;; This function is called by:
  3965 ;;		_LCD_Write_String
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           
  3970                           ;psect for function _LCD_Write_Char
  3971  1D6A                     _LCD_Write_Char:
  3972                           
  3973                           ;incstack = 0
  3974                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3975                           ;LCD_Write_Char@Data stored from wreg
  3976  1D6A  1283               	bcf	3,5	;RP0=0, select bank0
  3977  1D6B  1303               	bcf	3,6	;RP1=0, select bank0
  3978  1D6C  00A5               	movwf	LCD_Write_Char@Data
  3979  1D6D                     l3602:
  3980                           
  3981                           ;I2C_LCD.c: 129: RS = 1;
  3982  1D6D  01F8               	clrf	_RS
  3983  1D6E  0AF8               	incf	_RS,f
  3984  1D6F                     l3604:
  3985                           
  3986                           ;I2C_LCD.c: 130: LCD_Write_4Bit(Data & 0xF0);
  3987  1D6F  0825               	movf	LCD_Write_Char@Data,w
  3988  1D70  39F0               	andlw	240
  3989  1D71  160A  158A  254B  160A  158A  	fcall	_LCD_Write_4Bit
  3990                           
  3991                           ;I2C_LCD.c: 131: LCD_Write_4Bit((Data << 4) & 0xF0);
  3992  1D76  1283               	bcf	3,5	;RP0=0, select bank0
  3993  1D77  1303               	bcf	3,6	;RP1=0, select bank0
  3994  1D78  0825               	movf	LCD_Write_Char@Data,w
  3995  1D79  00A4               	movwf	??_LCD_Write_Char
  3996  1D7A  3003               	movlw	3
  3997  1D7B                     u4785:
  3998  1D7B  1003               	clrc
  3999  1D7C  0DA4               	rlf	??_LCD_Write_Char,f
  4000  1D7D  3EFF               	addlw	-1
  4001  1D7E  1D03               	skipz
  4002  1D7F  2D7B               	goto	u4785
  4003  1D80  1003               	clrc
  4004  1D81  0D24               	rlf	??_LCD_Write_Char,w
  4005  1D82  39F0               	andlw	240
  4006  1D83  160A  158A  254B  160A  158A  	fcall	_LCD_Write_4Bit
  4007  1D88                     l93:
  4008  1D88  0008               	return
  4009  1D89                     __end_of_LCD_Write_Char:
  4010                           
  4011                           	psect	text9
  4012  1E23                     __ptext9:	
  4013 ;; *************** function _LCD_Set_Cursor *****************
  4014 ;; Defined at:
  4015 ;;		line 140 in file "I2C_LCD.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  ROW             1    wreg     unsigned char 
  4018 ;;  COL             1    6[BANK0 ] unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  ROW             1    7[BANK0 ] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4030 ;;      Params:         0       1       0       0       0
  4031 ;;      Locals:         0       1       0       0       0
  4032 ;;      Temps:          0       0       0       0       0
  4033 ;;      Totals:         0       2       0       0       0
  4034 ;;Total ram usage:        2 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    6
  4037 ;; This function calls:
  4038 ;;		_LCD_CMD
  4039 ;; This function is called by:
  4040 ;;		_main
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           
  4045                           ;psect for function _LCD_Set_Cursor
  4046  1E23                     _LCD_Set_Cursor:
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4050                           ;LCD_Set_Cursor@ROW stored from wreg
  4051  1E23  1283               	bcf	3,5	;RP0=0, select bank0
  4052  1E24  1303               	bcf	3,6	;RP1=0, select bank0
  4053  1E25  00A7               	movwf	LCD_Set_Cursor@ROW
  4054  1E26                     l3910:
  4055                           
  4056                           ;I2C_LCD.c: 142: switch(ROW)
  4057  1E26  2E47               	goto	l3920
  4058  1E27                     l3912:
  4059                           
  4060                           ;I2C_LCD.c: 145: LCD_CMD(0xC0 + COL-1);
  4061  1E27  0826               	movf	LCD_Set_Cursor@COL,w
  4062  1E28  3EBF               	addlw	191
  4063  1E29  160A  158A  250E  160A  158A  	fcall	_LCD_CMD
  4064                           
  4065                           ;I2C_LCD.c: 146: break;
  4066  1E2E  2E52               	goto	l108
  4067  1E2F                     l3914:
  4068                           
  4069                           ;I2C_LCD.c: 148: LCD_CMD(0x94 + COL-1);
  4070  1E2F  0826               	movf	LCD_Set_Cursor@COL,w
  4071  1E30  3E93               	addlw	147
  4072  1E31  160A  158A  250E  160A  158A  	fcall	_LCD_CMD
  4073                           
  4074                           ;I2C_LCD.c: 149: break;
  4075  1E36  2E52               	goto	l108
  4076  1E37                     l3916:
  4077                           
  4078                           ;I2C_LCD.c: 151: LCD_CMD(0xD4 + COL-1);
  4079  1E37  0826               	movf	LCD_Set_Cursor@COL,w
  4080  1E38  3ED3               	addlw	211
  4081  1E39  160A  158A  250E  160A  158A  	fcall	_LCD_CMD
  4082                           
  4083                           ;I2C_LCD.c: 152: break;
  4084  1E3E  2E52               	goto	l108
  4085  1E3F                     l3918:
  4086                           
  4087                           ;I2C_LCD.c: 155: LCD_CMD(0x80 + COL-1);
  4088  1E3F  0826               	movf	LCD_Set_Cursor@COL,w
  4089  1E40  3E7F               	addlw	127
  4090  1E41  160A  158A  250E  160A  158A  	fcall	_LCD_CMD
  4091                           
  4092                           ;I2C_LCD.c: 156: }
  4093  1E46  2E52               	goto	l108
  4094  1E47                     l3920:
  4095  1E47  0827               	movf	LCD_Set_Cursor@ROW,w
  4096                           
  4097                           ; Switch size 1, requested type "simple"
  4098                           ; Number of cases is 3, Range of values is 2 to 4
  4099                           ; switch strategies available:
  4100                           ; Name         Instructions Cycles
  4101                           ; simple_byte           10     6 (average)
  4102                           ; direct_byte           20    11 (fixed)
  4103                           ; jumptable            263     9 (fixed)
  4104                           ;	Chosen strategy is simple_byte
  4105  1E48  3A02               	xorlw	2	; case 2
  4106  1E49  1903               	skipnz
  4107  1E4A  2E27               	goto	l3912
  4108  1E4B  3A01               	xorlw	1	; case 3
  4109  1E4C  1903               	skipnz
  4110  1E4D  2E2F               	goto	l3914
  4111  1E4E  3A07               	xorlw	7	; case 4
  4112  1E4F  1903               	skipnz
  4113  1E50  2E37               	goto	l3916
  4114  1E51  2E3F               	goto	l3918
  4115  1E52                     l108:
  4116  1E52  0008               	return
  4117  1E53                     __end_of_LCD_Set_Cursor:
  4118                           
  4119                           	psect	text10
  4120  10EE                     __ptext10:	
  4121 ;; *************** function _LCD_Init *****************
  4122 ;; Defined at:
  4123 ;;		line 80 in file "I2C_LCD.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  I2C_Add         1    wreg     unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  I2C_Add         1    8[BANK0 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0, pclath, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4137 ;;      Params:         0       0       0       0       0
  4138 ;;      Locals:         0       1       0       0       0
  4139 ;;      Temps:          0       2       0       0       0
  4140 ;;      Totals:         0       3       0       0       0
  4141 ;;Total ram usage:        3 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    6
  4144 ;; This function calls:
  4145 ;;		_IO_Expander_Write
  4146 ;;		_LCD_CMD
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _LCD_Init
  4154  10EE                     _LCD_Init:
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4158                           ;LCD_Init@I2C_Add stored from wreg
  4159  10EE  1283               	bcf	3,5	;RP0=0, select bank0
  4160  10EF  1303               	bcf	3,6	;RP1=0, select bank0
  4161  10F0  00A8               	movwf	LCD_Init@I2C_Add
  4162  10F1                     l3876:
  4163                           
  4164                           ;I2C_LCD.c: 82: i2c_add = I2C_Add;
  4165  10F1  0828               	movf	LCD_Init@I2C_Add,w
  4166  10F2  00A6               	movwf	??_LCD_Init
  4167  10F3  0826               	movf	??_LCD_Init,w
  4168  10F4  00EF               	movwf	_i2c_add
  4169  10F5                     l3878:
  4170                           
  4171                           ;I2C_LCD.c: 83: IO_Expander_Write(0x00);
  4172  10F5  3000               	movlw	0
  4173  10F6  160A  158A  252C  160A  118A  	fcall	_IO_Expander_Write
  4174  10FB                     l3880:
  4175                           
  4176                           ;I2C_LCD.c: 84: _delay((unsigned long)((30)*(8000000/4000.0)));
  4177  10FB  304E               	movlw	78
  4178  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  4179  10FD  1303               	bcf	3,6	;RP1=0, select bank0
  4180  10FE  00A7               	movwf	??_LCD_Init+1
  4181  10FF  30EA               	movlw	234
  4182  1100  00A6               	movwf	??_LCD_Init
  4183  1101                     u5667:
  4184  1101  0BA6               	decfsz	??_LCD_Init,f
  4185  1102  2901               	goto	u5667
  4186  1103  0BA7               	decfsz	??_LCD_Init+1,f
  4187  1104  2901               	goto	u5667
  4188  1105  0000               	nop
  4189                           
  4190                           ;I2C_LCD.c: 85: LCD_CMD(0x03);
  4191  1106  3003               	movlw	3
  4192  1107  160A  158A  250E  160A  118A  	fcall	_LCD_CMD
  4193  110C                     l3882:
  4194                           
  4195                           ;I2C_LCD.c: 86: _delay((unsigned long)((5)*(8000000/4000.0)));
  4196  110C  300D               	movlw	13
  4197  110D  1283               	bcf	3,5	;RP0=0, select bank0
  4198  110E  1303               	bcf	3,6	;RP1=0, select bank0
  4199  110F  00A7               	movwf	??_LCD_Init+1
  4200  1110  30FB               	movlw	251
  4201  1111  00A6               	movwf	??_LCD_Init
  4202  1112                     u5677:
  4203  1112  0BA6               	decfsz	??_LCD_Init,f
  4204  1113  2912               	goto	u5677
  4205  1114  0BA7               	decfsz	??_LCD_Init+1,f
  4206  1115  2912               	goto	u5677
  4207  1116                     l3884:
  4208                           
  4209                           ;I2C_LCD.c: 87: LCD_CMD(0x03);
  4210  1116  3003               	movlw	3
  4211  1117  160A  158A  250E  160A  118A  	fcall	_LCD_CMD
  4212                           
  4213                           ;I2C_LCD.c: 88: _delay((unsigned long)((5)*(8000000/4000.0)));
  4214  111C  300D               	movlw	13
  4215  111D  1283               	bcf	3,5	;RP0=0, select bank0
  4216  111E  1303               	bcf	3,6	;RP1=0, select bank0
  4217  111F  00A7               	movwf	??_LCD_Init+1
  4218  1120  30FB               	movlw	251
  4219  1121  00A6               	movwf	??_LCD_Init
  4220  1122                     u5687:
  4221  1122  0BA6               	decfsz	??_LCD_Init,f
  4222  1123  2922               	goto	u5687
  4223  1124  0BA7               	decfsz	??_LCD_Init+1,f
  4224  1125  2922               	goto	u5687
  4225  1126                     l3886:
  4226                           
  4227                           ;I2C_LCD.c: 89: LCD_CMD(0x03);
  4228  1126  3003               	movlw	3
  4229  1127  160A  158A  250E  160A  118A  	fcall	_LCD_CMD
  4230  112C                     l3888:
  4231                           
  4232                           ;I2C_LCD.c: 90: _delay((unsigned long)((5)*(8000000/4000.0)));
  4233  112C  300D               	movlw	13
  4234  112D  1283               	bcf	3,5	;RP0=0, select bank0
  4235  112E  1303               	bcf	3,6	;RP1=0, select bank0
  4236  112F  00A7               	movwf	??_LCD_Init+1
  4237  1130  30FB               	movlw	251
  4238  1131  00A6               	movwf	??_LCD_Init
  4239  1132                     u5697:
  4240  1132  0BA6               	decfsz	??_LCD_Init,f
  4241  1133  2932               	goto	u5697
  4242  1134  0BA7               	decfsz	??_LCD_Init+1,f
  4243  1135  2932               	goto	u5697
  4244                           
  4245                           ;I2C_LCD.c: 91: LCD_CMD(0x02);
  4246  1136  3002               	movlw	2
  4247  1137  160A  158A  250E  160A  118A  	fcall	_LCD_CMD
  4248  113C                     l3890:
  4249                           
  4250                           ;I2C_LCD.c: 92: _delay((unsigned long)((5)*(8000000/4000.0)));
  4251  113C  300D               	movlw	13
  4252  113D  1283               	bcf	3,5	;RP0=0, select bank0
  4253  113E  1303               	bcf	3,6	;RP1=0, select bank0
  4254  113F  00A7               	movwf	??_LCD_Init+1
  4255  1140  30FB               	movlw	251
  4256  1141  00A6               	movwf	??_LCD_Init
  4257  1142                     u5707:
  4258  1142  0BA6               	decfsz	??_LCD_Init,f
  4259  1143  2942               	goto	u5707
  4260  1144  0BA7               	decfsz	??_LCD_Init+1,f
  4261  1145  2942               	goto	u5707
  4262  1146                     l3892:
  4263                           
  4264                           ;I2C_LCD.c: 93: LCD_CMD(0x20 | (2 << 2));
  4265  1146  3028               	movlw	40
  4266  1147  160A  158A  250E  160A  118A  	fcall	_LCD_CMD
  4267                           
  4268                           ;I2C_LCD.c: 94: _delay((unsigned long)((50)*(8000000/4000.0)));
  4269  114C  3082               	movlw	130
  4270  114D  1283               	bcf	3,5	;RP0=0, select bank0
  4271  114E  1303               	bcf	3,6	;RP1=0, select bank0
  4272  114F  00A7               	movwf	??_LCD_Init+1
  4273  1150  30DD               	movlw	221
  4274  1151  00A6               	movwf	??_LCD_Init
  4275  1152                     u5717:
  4276  1152  0BA6               	decfsz	??_LCD_Init,f
  4277  1153  2952               	goto	u5717
  4278  1154  0BA7               	decfsz	??_LCD_Init+1,f
  4279  1155  2952               	goto	u5717
  4280  1156                     l3894:
  4281                           
  4282                           ;I2C_LCD.c: 95: LCD_CMD(0x0C);
  4283  1156  300C               	movlw	12
  4284  1157  160A  158A  250E  160A  118A  	fcall	_LCD_CMD
  4285  115C                     l3896:
  4286                           
  4287                           ;I2C_LCD.c: 96: _delay((unsigned long)((50)*(8000000/4000.0)));
  4288  115C  3082               	movlw	130
  4289  115D  1283               	bcf	3,5	;RP0=0, select bank0
  4290  115E  1303               	bcf	3,6	;RP1=0, select bank0
  4291  115F  00A7               	movwf	??_LCD_Init+1
  4292  1160  30DD               	movlw	221
  4293  1161  00A6               	movwf	??_LCD_Init
  4294  1162                     u5727:
  4295  1162  0BA6               	decfsz	??_LCD_Init,f
  4296  1163  2962               	goto	u5727
  4297  1164  0BA7               	decfsz	??_LCD_Init+1,f
  4298  1165  2962               	goto	u5727
  4299                           
  4300                           ;I2C_LCD.c: 97: LCD_CMD(0x01);
  4301  1166  3001               	movlw	1
  4302  1167  160A  158A  250E  160A  118A  	fcall	_LCD_CMD
  4303  116C                     l3898:
  4304                           
  4305                           ;I2C_LCD.c: 98: _delay((unsigned long)((50)*(8000000/4000.0)));
  4306  116C  3082               	movlw	130
  4307  116D  1283               	bcf	3,5	;RP0=0, select bank0
  4308  116E  1303               	bcf	3,6	;RP1=0, select bank0
  4309  116F  00A7               	movwf	??_LCD_Init+1
  4310  1170  30DD               	movlw	221
  4311  1171  00A6               	movwf	??_LCD_Init
  4312  1172                     u5737:
  4313  1172  0BA6               	decfsz	??_LCD_Init,f
  4314  1173  2972               	goto	u5737
  4315  1174  0BA7               	decfsz	??_LCD_Init+1,f
  4316  1175  2972               	goto	u5737
  4317  1176                     l3900:
  4318                           
  4319                           ;I2C_LCD.c: 99: LCD_CMD(0x04 | 0x02);
  4320  1176  3006               	movlw	6
  4321  1177  160A  158A  250E  160A  118A  	fcall	_LCD_CMD
  4322                           
  4323                           ;I2C_LCD.c: 100: _delay((unsigned long)((50)*(8000000/4000.0)));
  4324  117C  3082               	movlw	130
  4325  117D  1283               	bcf	3,5	;RP0=0, select bank0
  4326  117E  1303               	bcf	3,6	;RP1=0, select bank0
  4327  117F  00A7               	movwf	??_LCD_Init+1
  4328  1180  30DD               	movlw	221
  4329  1181  00A6               	movwf	??_LCD_Init
  4330  1182                     u5747:
  4331  1182  0BA6               	decfsz	??_LCD_Init,f
  4332  1183  2982               	goto	u5747
  4333  1184  0BA7               	decfsz	??_LCD_Init+1,f
  4334  1185  2982               	goto	u5747
  4335  1186                     l81:
  4336  1186  0008               	return
  4337  1187                     __end_of_LCD_Init:
  4338                           
  4339                           	psect	text11
  4340  1CC7                     __ptext11:	
  4341 ;; *************** function _LCD_Clear *****************
  4342 ;; Defined at:
  4343 ;;		line 183 in file "I2C_LCD.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0
  4359 ;;      Temps:          0       1       0       0       0
  4360 ;;      Totals:         0       1       0       0       0
  4361 ;;Total ram usage:        1 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    6
  4364 ;; This function calls:
  4365 ;;		_LCD_CMD
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           
  4372                           ;psect for function _LCD_Clear
  4373  1CC7                     _LCD_Clear:
  4374  1CC7                     l3922:	
  4375                           ;incstack = 0
  4376                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4377                           
  4378                           
  4379                           ;I2C_LCD.c: 185: LCD_CMD(0x01);
  4380  1CC7  3001               	movlw	1
  4381  1CC8  160A  158A  250E  160A  158A  	fcall	_LCD_CMD
  4382  1CCD                     l3924:
  4383                           
  4384                           ;I2C_LCD.c: 186: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4385  1CCD  3019               	movlw	25
  4386  1CCE  1283               	bcf	3,5	;RP0=0, select bank0
  4387  1CCF  1303               	bcf	3,6	;RP1=0, select bank0
  4388  1CD0  00A6               	movwf	??_LCD_Clear
  4389  1CD1                     u5757:
  4390  1CD1  0BA6               	decfsz	??_LCD_Clear,f
  4391  1CD2  2CD1               	goto	u5757
  4392  1CD3  2CD4               	nop2
  4393  1CD4                     l123:
  4394  1CD4  0008               	return
  4395  1CD5                     __end_of_LCD_Clear:
  4396                           
  4397                           	psect	text12
  4398  1D0E                     __ptext12:	
  4399 ;; *************** function _LCD_CMD *****************
  4400 ;; Defined at:
  4401 ;;		line 120 in file "I2C_LCD.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  CMD             1    wreg     unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  CMD             1    5[BANK0 ] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, pclath, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4415 ;;      Params:         0       0       0       0       0
  4416 ;;      Locals:         0       1       0       0       0
  4417 ;;      Temps:          0       1       0       0       0
  4418 ;;      Totals:         0       2       0       0       0
  4419 ;;Total ram usage:        2 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    5
  4422 ;; This function calls:
  4423 ;;		_LCD_Write_4Bit
  4424 ;; This function is called by:
  4425 ;;		_LCD_Init
  4426 ;;		_LCD_Set_Cursor
  4427 ;;		_LCD_Clear
  4428 ;;		_LCD_SL
  4429 ;;		_LCD_SR
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           
  4434                           ;psect for function _LCD_CMD
  4435  1D0E                     _LCD_CMD:
  4436                           
  4437                           ;incstack = 0
  4438                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  4439                           ;LCD_CMD@CMD stored from wreg
  4440  1D0E  1283               	bcf	3,5	;RP0=0, select bank0
  4441  1D0F  1303               	bcf	3,6	;RP1=0, select bank0
  4442  1D10  00A5               	movwf	LCD_CMD@CMD
  4443  1D11                     l3596:
  4444                           
  4445                           ;I2C_LCD.c: 122: RS = 0;
  4446  1D11  01F8               	clrf	_RS
  4447  1D12                     l3598:
  4448                           
  4449                           ;I2C_LCD.c: 123: LCD_Write_4Bit(CMD & 0xF0);
  4450  1D12  0825               	movf	LCD_CMD@CMD,w
  4451  1D13  39F0               	andlw	240
  4452  1D14  160A  158A  254B  160A  158A  	fcall	_LCD_Write_4Bit
  4453  1D19                     l3600:
  4454                           
  4455                           ;I2C_LCD.c: 124: LCD_Write_4Bit((CMD << 4) & 0xF0);
  4456  1D19  1283               	bcf	3,5	;RP0=0, select bank0
  4457  1D1A  1303               	bcf	3,6	;RP1=0, select bank0
  4458  1D1B  0825               	movf	LCD_CMD@CMD,w
  4459  1D1C  00A4               	movwf	??_LCD_CMD
  4460  1D1D  3003               	movlw	3
  4461  1D1E                     u4775:
  4462  1D1E  1003               	clrc
  4463  1D1F  0DA4               	rlf	??_LCD_CMD,f
  4464  1D20  3EFF               	addlw	-1
  4465  1D21  1D03               	skipz
  4466  1D22  2D1E               	goto	u4775
  4467  1D23  1003               	clrc
  4468  1D24  0D24               	rlf	??_LCD_CMD,w
  4469  1D25  39F0               	andlw	240
  4470  1D26  160A  158A  254B  160A  158A  	fcall	_LCD_Write_4Bit
  4471  1D2B                     l90:
  4472  1D2B  0008               	return
  4473  1D2C                     __end_of_LCD_CMD:
  4474                           
  4475                           	psect	text13
  4476  1D4B                     __ptext13:	
  4477 ;; *************** function _LCD_Write_4Bit *****************
  4478 ;; Defined at:
  4479 ;;		line 111 in file "I2C_LCD.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  Nibble          1    wreg     unsigned char 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  Nibble          1    3[BANK0 ] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, pclath, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4493 ;;      Params:         0       0       0       0       0
  4494 ;;      Locals:         0       1       0       0       0
  4495 ;;      Temps:          0       1       0       0       0
  4496 ;;      Totals:         0       2       0       0       0
  4497 ;;Total ram usage:        2 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    4
  4500 ;; This function calls:
  4501 ;;		_IO_Expander_Write
  4502 ;; This function is called by:
  4503 ;;		_LCD_CMD
  4504 ;;		_LCD_Write_Char
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _LCD_Write_4Bit
  4510  1D4B                     _LCD_Write_4Bit:
  4511                           
  4512                           ;incstack = 0
  4513                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  4514                           ;LCD_Write_4Bit@Nibble stored from wreg
  4515  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  4516  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  4517  1D4D  00A3               	movwf	LCD_Write_4Bit@Nibble
  4518  1D4E                     l3560:
  4519                           
  4520                           ;I2C_LCD.c: 114: Nibble |= RS;
  4521  1D4E  0878               	movf	_RS,w
  4522  1D4F  00A2               	movwf	??_LCD_Write_4Bit
  4523  1D50  0822               	movf	??_LCD_Write_4Bit,w
  4524  1D51  04A3               	iorwf	LCD_Write_4Bit@Nibble,f
  4525  1D52                     l3562:
  4526                           
  4527                           ;I2C_LCD.c: 115: IO_Expander_Write(Nibble | 0x04);
  4528  1D52  0823               	movf	LCD_Write_4Bit@Nibble,w
  4529  1D53  3804               	iorlw	4
  4530  1D54  160A  158A  252C  160A  158A  	fcall	_IO_Expander_Write
  4531  1D59                     l3564:
  4532                           
  4533                           ;I2C_LCD.c: 116: IO_Expander_Write(Nibble & 0xFB);
  4534  1D59  1283               	bcf	3,5	;RP0=0, select bank0
  4535  1D5A  1303               	bcf	3,6	;RP1=0, select bank0
  4536  1D5B  0823               	movf	LCD_Write_4Bit@Nibble,w
  4537  1D5C  39FB               	andlw	251
  4538  1D5D  160A  158A  252C  160A  158A  	fcall	_IO_Expander_Write
  4539                           
  4540                           ;I2C_LCD.c: 117: _delay((unsigned long)((50)*(8000000/4000000.0)));
  4541  1D62  3020               	movlw	32
  4542  1D63  1283               	bcf	3,5	;RP0=0, select bank0
  4543  1D64  1303               	bcf	3,6	;RP1=0, select bank0
  4544  1D65  00A2               	movwf	??_LCD_Write_4Bit
  4545  1D66                     u5767:
  4546  1D66  0BA2               	decfsz	??_LCD_Write_4Bit,f
  4547  1D67  2D66               	goto	u5767
  4548  1D68  0000               	nop
  4549  1D69                     l87:
  4550  1D69  0008               	return
  4551  1D6A                     __end_of_LCD_Write_4Bit:
  4552                           
  4553                           	psect	text14
  4554  1D2C                     __ptext14:	
  4555 ;; *************** function _IO_Expander_Write *****************
  4556 ;; Defined at:
  4557 ;;		line 103 in file "I2C_LCD.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  Data            1    wreg     unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  Data            1    1[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, pclath, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         0       0       0       0       0
  4572 ;;      Locals:         0       1       0       0       0
  4573 ;;      Temps:          0       0       0       0       0
  4574 ;;      Totals:         0       1       0       0       0
  4575 ;;Total ram usage:        1 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    3
  4578 ;; This function calls:
  4579 ;;		_I2C_Master_Start
  4580 ;;		_I2C_Master_Stop
  4581 ;;		_I2C_Master_Write
  4582 ;; This function is called by:
  4583 ;;		_LCD_Init
  4584 ;;		_LCD_Write_4Bit
  4585 ;;		_Backlight
  4586 ;;		_noBacklight
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _IO_Expander_Write
  4592  1D2C                     _IO_Expander_Write:
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  4596                           ;IO_Expander_Write@Data stored from wreg
  4597  1D2C  1283               	bcf	3,5	;RP0=0, select bank0
  4598  1D2D  1303               	bcf	3,6	;RP1=0, select bank0
  4599  1D2E  00A1               	movwf	IO_Expander_Write@Data
  4600  1D2F                     l3418:
  4601                           
  4602                           ;I2C_LCD.c: 105: I2C_Master_Start();
  4603  1D2F  160A  158A  24A4  160A  158A  	fcall	_I2C_Master_Start
  4604                           
  4605                           ;I2C_LCD.c: 106: I2C_Master_Write(i2c_add);
  4606  1D34  1283               	bcf	3,5	;RP0=0, select bank0
  4607  1D35  1303               	bcf	3,6	;RP1=0, select bank0
  4608  1D36  086F               	movf	_i2c_add,w
  4609  1D37  160A  158A  24D5  160A  158A  	fcall	_I2C_Master_Write
  4610                           
  4611                           ;I2C_LCD.c: 107: I2C_Master_Write(Data | BackLight_State);
  4612  1D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4613  1D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4614  1D3E  0821               	movf	IO_Expander_Write@Data,w
  4615  1D3F  047B               	iorwf	_BackLight_State,w
  4616  1D40  160A  158A  24D5  160A  158A  	fcall	_I2C_Master_Write
  4617                           
  4618                           ;I2C_LCD.c: 108: I2C_Master_Stop();
  4619  1D45  120A  118A  27F7  160A  158A  	fcall	_I2C_Master_Stop
  4620  1D4A                     l84:
  4621  1D4A  0008               	return
  4622  1D4B                     __end_of_IO_Expander_Write:
  4623                           
  4624                           	psect	text15
  4625  1CD5                     __ptext15:	
  4626 ;; *************** function _I2C_Master_Write *****************
  4627 ;; Defined at:
  4628 ;;		line 56 in file "I2C_LCD.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  data            1    wreg     unsigned char 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  data            1    0[BANK0 ] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      unsigned char 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0, pclath, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       0       0       0       0
  4643 ;;      Locals:         0       1       0       0       0
  4644 ;;      Temps:          0       0       0       0       0
  4645 ;;      Totals:         0       1       0       0       0
  4646 ;;Total ram usage:        1 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    2
  4649 ;; This function calls:
  4650 ;;		_I2C_Master_Wait
  4651 ;; This function is called by:
  4652 ;;		_IO_Expander_Write
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _I2C_Master_Write
  4658  1CD5                     _I2C_Master_Write:
  4659                           
  4660                           ;incstack = 0
  4661                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4662                           ;I2C_Master_Write@data stored from wreg
  4663  1CD5  1283               	bcf	3,5	;RP0=0, select bank0
  4664  1CD6  1303               	bcf	3,6	;RP1=0, select bank0
  4665  1CD7  00A0               	movwf	I2C_Master_Write@data
  4666  1CD8                     l3400:
  4667                           
  4668                           ;I2C_LCD.c: 58: I2C_Master_Wait();
  4669  1CD8  160A  158A  24BA  160A  158A  	fcall	_I2C_Master_Wait
  4670  1CDD                     l3402:
  4671                           
  4672                           ;I2C_LCD.c: 59: SSPBUF = data;
  4673  1CDD  1283               	bcf	3,5	;RP0=0, select bank0
  4674  1CDE  1303               	bcf	3,6	;RP1=0, select bank0
  4675  1CDF  0820               	movf	I2C_Master_Write@data,w
  4676  1CE0  0093               	movwf	19	;volatile
  4677  1CE1                     l69:	
  4678                           ;I2C_LCD.c: 60: while(!SSPIF);
  4679                           
  4680  1CE1  1D8C               	btfss	12,3	;volatile
  4681  1CE2  2CE4               	goto	u4321
  4682  1CE3  2CE5               	goto	u4320
  4683  1CE4                     u4321:
  4684  1CE4  2CE1               	goto	l69
  4685  1CE5                     u4320:
  4686  1CE5                     l71:
  4687                           
  4688                           ;I2C_LCD.c: 61: SSPIF = 0;
  4689  1CE5  118C               	bcf	12,3	;volatile
  4690  1CE6                     l72:	
  4691                           ;I2C_LCD.c: 62: return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  4692                           
  4693  1CE6  0008               	return
  4694  1CE7                     __end_of_I2C_Master_Write:
  4695                           
  4696                           	psect	text16
  4697  07F7                     __ptext16:	
  4698 ;; *************** function _I2C_Master_Stop *****************
  4699 ;; Defined at:
  4700 ;;		line 36 in file "I2C_LCD.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0, pclath, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4714 ;;      Params:         0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0
  4717 ;;      Totals:         0       0       0       0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    2
  4721 ;; This function calls:
  4722 ;;		_I2C_Master_Wait
  4723 ;; This function is called by:
  4724 ;;		_IO_Expander_Write
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function _I2C_Master_Stop
  4730  07F7                     _I2C_Master_Stop:
  4731  07F7                     l3396:	
  4732                           ;incstack = 0
  4733                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4734                           
  4735                           
  4736                           ;I2C_LCD.c: 38: I2C_Master_Wait();
  4737  07F7  160A  158A  24BA  120A  118A  	fcall	_I2C_Master_Wait
  4738  07FC                     l3398:
  4739                           
  4740                           ;I2C_LCD.c: 39: PEN = 1;
  4741  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  4742  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  4743  07FE  1511               	bsf	17,2	;volatile
  4744  07FF                     l60:
  4745  07FF  0008               	return
  4746  0800                     __end_of_I2C_Master_Stop:
  4747                           
  4748                           	psect	text17
  4749  1CA4                     __ptext17:	
  4750 ;; *************** function _I2C_Master_Start *****************
  4751 ;; Defined at:
  4752 ;;		line 24 in file "I2C_LCD.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         0       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0
  4769 ;;      Totals:         0       0       0       0       0
  4770 ;;Total ram usage:        0 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		_I2C_Master_Wait
  4775 ;; This function is called by:
  4776 ;;		_IO_Expander_Write
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _I2C_Master_Start
  4782  1CA4                     _I2C_Master_Start:
  4783  1CA4                     l3392:	
  4784                           ;incstack = 0
  4785                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4786                           
  4787                           
  4788                           ;I2C_LCD.c: 26: I2C_Master_Wait();
  4789  1CA4  160A  158A  24BA  160A  158A  	fcall	_I2C_Master_Wait
  4790  1CA9                     l3394:
  4791                           
  4792                           ;I2C_LCD.c: 27: SEN = 1;
  4793  1CA9  1683               	bsf	3,5	;RP0=1, select bank1
  4794  1CAA  1303               	bcf	3,6	;RP1=0, select bank1
  4795  1CAB  1411               	bsf	17,0	;volatile
  4796  1CAC                     l54:
  4797  1CAC  0008               	return
  4798  1CAD                     __end_of_I2C_Master_Start:
  4799                           
  4800                           	psect	text18
  4801  1CBA                     __ptext18:	
  4802 ;; *************** function _I2C_Master_Wait *****************
  4803 ;; Defined at:
  4804 ;;		line 19 in file "I2C_LCD.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4818 ;;      Params:         0       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0
  4821 ;;      Totals:         0       0       0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_I2C_Master_Start
  4829 ;;		_I2C_Master_Stop
  4830 ;;		_I2C_Master_Write
  4831 ;;		_I2C_Master_RepeatedStart
  4832 ;;		_I2C_ACK
  4833 ;;		_I2C_NACK
  4834 ;;		_I2C_Read_Byte
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function _I2C_Master_Wait
  4840  1CBA                     _I2C_Master_Wait:
  4841  1CBA                     l3388:	
  4842                           ;incstack = 0
  4843                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4844                           
  4845  1CBA                     l48:	
  4846                           ;I2C_LCD.c: 21: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4847                           
  4848  1CBA  1683               	bsf	3,5	;RP0=1, select bank1
  4849  1CBB  1303               	bcf	3,6	;RP1=0, select bank1
  4850  1CBC  1914               	btfsc	20,2	;volatile
  4851  1CBD  2CBF               	goto	u4301
  4852  1CBE  2CC0               	goto	u4300
  4853  1CBF                     u4301:
  4854  1CBF  2CBA               	goto	l48
  4855  1CC0                     u4300:
  4856  1CC0                     l3390:
  4857  1CC0  0811               	movf	17,w	;volatile
  4858  1CC1  391F               	andlw	31
  4859  1CC2  1D03               	btfss	3,2
  4860  1CC3  2CC5               	goto	u4311
  4861  1CC4  2CC6               	goto	u4310
  4862  1CC5                     u4311:
  4863  1CC5  2CBA               	goto	l48
  4864  1CC6                     u4310:
  4865  1CC6                     l51:
  4866  1CC6  0008               	return
  4867  1CC7                     __end_of_I2C_Master_Wait:
  4868                           
  4869                           	psect	text19
  4870  1CAD                     __ptext19:	
  4871 ;; *************** function _I2C_Master_Init *****************
  4872 ;; Defined at:
  4873 ;;		line 9 in file "I2C_LCD.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0
  4890 ;;      Totals:         0       0       0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    1
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_main
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function _I2C_Master_Init
  4903  1CAD                     _I2C_Master_Init:
  4904  1CAD                     l3866:	
  4905                           ;incstack = 0
  4906                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  4907                           
  4908                           
  4909                           ;I2C_LCD.c: 11: SSPCON = 0x28;
  4910  1CAD  3028               	movlw	40
  4911  1CAE  1283               	bcf	3,5	;RP0=0, select bank0
  4912  1CAF  1303               	bcf	3,6	;RP1=0, select bank0
  4913  1CB0  0094               	movwf	20	;volatile
  4914  1CB1                     l3868:
  4915                           
  4916                           ;I2C_LCD.c: 12: SSPCON2 = 0x00;
  4917  1CB1  1683               	bsf	3,5	;RP0=1, select bank1
  4918  1CB2  1303               	bcf	3,6	;RP1=0, select bank1
  4919  1CB3  0191               	clrf	17	;volatile
  4920  1CB4                     l3870:
  4921                           
  4922                           ;I2C_LCD.c: 13: SSPSTAT = 0x00;
  4923  1CB4  0194               	clrf	20	;volatile
  4924                           
  4925                           ;I2C_LCD.c: 14: SSPADD = ((8000000/4)/100000) - 1;
  4926  1CB5  3013               	movlw	19
  4927  1CB6  0093               	movwf	19	;volatile
  4928  1CB7                     l3872:
  4929                           
  4930                           ;I2C_LCD.c: 15: TRISC3 = 1;
  4931  1CB7  1587               	bsf	7,3	;volatile
  4932  1CB8                     l3874:
  4933                           
  4934                           ;I2C_LCD.c: 16: TRISC4 = 1;
  4935  1CB8  1607               	bsf	7,4	;volatile
  4936  1CB9                     l45:
  4937  1CB9  0008               	return
  4938  1CBA                     __end_of_I2C_Master_Init:
  4939                           
  4940                           	psect	text20
  4941  0D6A                     __ptext20:	
  4942 ;; *************** function _GetTemp *****************
  4943 ;; Defined at:
  4944 ;;		line 290 in file "AFC.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  2   56[BANK1 ] int 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4958 ;;      Params:         0       0       2       0       0
  4959 ;;      Locals:         0       0       4       0       0
  4960 ;;      Temps:          0       0       4       0       0
  4961 ;;      Totals:         0       0      10       0       0
  4962 ;;Total ram usage:       10 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    5
  4965 ;; This function calls:
  4966 ;;		_ADC_Read
  4967 ;;		___fladd
  4968 ;;		___fldiv
  4969 ;;		___flmul
  4970 ;;		___flsub
  4971 ;;		___fltol
  4972 ;;		___xxtofl
  4973 ;;		_log
  4974 ;; This function is called by:
  4975 ;;		_main
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function _GetTemp
  4981  0D6A                     _GetTemp:
  4982  0D6A                     l3936:	
  4983                           ;incstack = 0
  4984                           ; Regs used in _GetTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4985                           
  4986                           
  4987                           ;AFC.c: 291: T0 = 25 + 273.15;
  4988  0D6A  3043               	movlw	67
  4989  0D6B  1683               	bsf	3,5	;RP0=1, select bank3
  4990  0D6C  1703               	bsf	3,6	;RP1=1, select bank3
  4991  0D6D  00CD               	movwf	(_T0+3)^(0+384)
  4992  0D6E  3095               	movlw	149
  4993  0D6F  00CC               	movwf	(_T0+2)^(0+384)
  4994  0D70  3013               	movlw	19
  4995  0D71  00CB               	movwf	(_T0+1)^(0+384)
  4996  0D72  3033               	movlw	51
  4997  0D73  00CA               	movwf	_T0^(0+384)
  4998  0D74                     l3938:
  4999                           
  5000                           ;AFC.c: 292: VRT = ADC_Read(0);
  5001  0D74  3000               	movlw	0
  5002  0D75  160A  158A  2653  120A  158A  	fcall	_ADC_Read
  5003  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  5004  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  5005  0D7C  0820               	movf	?_ADC_Read,w
  5006  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  5007  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  5008  0D7F  00DA               	movwf	??_GetTemp^(0+128)
  5009  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  5010  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  5011  0D82  0821               	movf	?_ADC_Read+1,w
  5012  0D83  1683               	bsf	3,5	;RP0=1, select bank1
  5013  0D84  1303               	bcf	3,6	;RP1=0, select bank1
  5014  0D85  00DB               	movwf	(??_GetTemp^(0+128)+1)
  5015  0D86  01DC               	clrf	(??_GetTemp^(0+128)+2)
  5016  0D87  01DD               	clrf	(??_GetTemp^(0+128)+3)
  5017  0D88  085D               	movf	(??_GetTemp+3)^(0+128),w
  5018  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5019  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5020  0D8B  00A8               	movwf	___xxtofl@val+3
  5021  0D8C  1683               	bsf	3,5	;RP0=1, select bank1
  5022  0D8D  1303               	bcf	3,6	;RP1=0, select bank1
  5023  0D8E  085C               	movf	(??_GetTemp+2)^(0+128),w
  5024  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  5025  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  5026  0D91  00A7               	movwf	___xxtofl@val+2
  5027  0D92  1683               	bsf	3,5	;RP0=1, select bank1
  5028  0D93  1303               	bcf	3,6	;RP1=0, select bank1
  5029  0D94  085B               	movf	(??_GetTemp+1)^(0+128),w
  5030  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  5031  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  5032  0D97  00A6               	movwf	___xxtofl@val+1
  5033  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  5034  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  5035  0D9A  085A               	movf	??_GetTemp^(0+128),w
  5036  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0D9D  00A5               	movwf	___xxtofl@val
  5039  0D9E  3000               	movlw	0
  5040  0D9F  160A  118A  222B  120A  158A  	fcall	___xxtofl
  5041  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  5042  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  5043  0DA6  0828               	movf	?___xxtofl+3,w
  5044  0DA7  1683               	bsf	3,5	;RP0=1, select bank1
  5045  0DA8  1303               	bcf	3,6	;RP1=0, select bank1
  5046  0DA9  00EB               	movwf	(_VRT+3)^(0+128)
  5047  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0DAC  0827               	movf	?___xxtofl+2,w
  5050  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  5051  0DAE  1303               	bcf	3,6	;RP1=0, select bank1
  5052  0DAF  00EA               	movwf	(_VRT+2)^(0+128)
  5053  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  5054  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  5055  0DB2  0826               	movf	?___xxtofl+1,w
  5056  0DB3  1683               	bsf	3,5	;RP0=1, select bank1
  5057  0DB4  1303               	bcf	3,6	;RP1=0, select bank1
  5058  0DB5  00E9               	movwf	(_VRT+1)^(0+128)
  5059  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0DB8  0825               	movf	?___xxtofl,w
  5062  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  5063  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  5064  0DBB  00E8               	movwf	_VRT^(0+128)
  5065  0DBC                     l3940:
  5066                           
  5067                           ;AFC.c: 293: VRT = (0.0048828) * VRT;
  5068  0DBC  303B               	movlw	59
  5069  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  5070  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  5071  0DBF  00D2               	movwf	___flmul@b+3
  5072  0DC0  309F               	movlw	159
  5073  0DC1  00D1               	movwf	___flmul@b+2
  5074  0DC2  30FF               	movlw	255
  5075  0DC3  00D0               	movwf	___flmul@b+1
  5076  0DC4  30E5               	movlw	229
  5077  0DC5  00CF               	movwf	___flmul@b
  5078  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  5079  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  5080  0DC8  086B               	movf	(_VRT+3)^(0+128),w
  5081  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0DCB  00D6               	movwf	___flmul@a+3
  5084  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  5085  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  5086  0DCE  086A               	movf	(_VRT+2)^(0+128),w
  5087  0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  5088  0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  5089  0DD1  00D5               	movwf	___flmul@a+2
  5090  0DD2  1683               	bsf	3,5	;RP0=1, select bank1
  5091  0DD3  1303               	bcf	3,6	;RP1=0, select bank1
  5092  0DD4  0869               	movf	(_VRT+1)^(0+128),w
  5093  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  5095  0DD7  00D4               	movwf	___flmul@a+1
  5096  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  5097  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  5098  0DDA  0868               	movf	_VRT^(0+128),w
  5099  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0DDD  00D3               	movwf	___flmul@a
  5102  0DDE  120A  118A  245A  120A  158A  	fcall	___flmul
  5103  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  5104  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  5105  0DE5  0852               	movf	?___flmul+3,w
  5106  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  5107  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  5108  0DE8  00EB               	movwf	(_VRT+3)^(0+128)
  5109  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0DEB  0851               	movf	?___flmul+2,w
  5112  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  5113  0DED  1303               	bcf	3,6	;RP1=0, select bank1
  5114  0DEE  00EA               	movwf	(_VRT+2)^(0+128)
  5115  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  5116  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  5117  0DF1  0850               	movf	?___flmul+1,w
  5118  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  5119  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  5120  0DF4  00E9               	movwf	(_VRT+1)^(0+128)
  5121  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  5122  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  5123  0DF7  084F               	movf	?___flmul,w
  5124  0DF8  1683               	bsf	3,5	;RP0=1, select bank1
  5125  0DF9  1303               	bcf	3,6	;RP1=0, select bank1
  5126  0DFA  00E8               	movwf	_VRT^(0+128)
  5127  0DFB                     l3942:
  5128                           
  5129                           ;AFC.c: 294: VR = 5 - VRT;
  5130  0DFB  086B               	movf	(_VRT+3)^(0+128),w
  5131  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  5132  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  5133  0DFE  00CA               	movwf	___flsub@a+3
  5134  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  5135  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  5136  0E01  086A               	movf	(_VRT+2)^(0+128),w
  5137  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0E04  00C9               	movwf	___flsub@a+2
  5140  0E05  1683               	bsf	3,5	;RP0=1, select bank1
  5141  0E06  1303               	bcf	3,6	;RP1=0, select bank1
  5142  0E07  0869               	movf	(_VRT+1)^(0+128),w
  5143  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  5144  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  5145  0E0A  00C8               	movwf	___flsub@a+1
  5146  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  5147  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  5148  0E0D  0868               	movf	_VRT^(0+128),w
  5149  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5150  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5151  0E10  00C7               	movwf	___flsub@a
  5152  0E11  3040               	movlw	64
  5153  0E12  00CE               	movwf	___flsub@b+3
  5154  0E13  30A0               	movlw	160
  5155  0E14  00CD               	movwf	___flsub@b+2
  5156  0E15  3000               	movlw	0
  5157  0E16  00CC               	movwf	___flsub@b+1
  5158  0E17  3000               	movlw	0
  5159  0E18  00CB               	movwf	___flsub@b
  5160  0E19  160A  158A  2589  120A  158A  	fcall	___flsub
  5161  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  5162  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  5163  0E20  084A               	movf	?___flsub+3,w
  5164  0E21  1683               	bsf	3,5	;RP0=1, select bank3
  5165  0E22  1703               	bsf	3,6	;RP1=1, select bank3
  5166  0E23  0097               	movwf	(_VR+3)^(0+384)
  5167  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  5168  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  5169  0E26  0849               	movf	?___flsub+2,w
  5170  0E27  1683               	bsf	3,5	;RP0=1, select bank3
  5171  0E28  1703               	bsf	3,6	;RP1=1, select bank3
  5172  0E29  0096               	movwf	(_VR+2)^(0+384)
  5173  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5174  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5175  0E2C  0848               	movf	?___flsub+1,w
  5176  0E2D  1683               	bsf	3,5	;RP0=1, select bank3
  5177  0E2E  1703               	bsf	3,6	;RP1=1, select bank3
  5178  0E2F  0095               	movwf	(_VR+1)^(0+384)
  5179  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0E32  0847               	movf	?___flsub,w
  5182  0E33  1683               	bsf	3,5	;RP0=1, select bank3
  5183  0E34  1703               	bsf	3,6	;RP1=1, select bank3
  5184  0E35  0094               	movwf	_VR^(0+384)
  5185  0E36                     l3944:
  5186                           
  5187                           ;AFC.c: 295: RT = VRT / (VR / 5500);
  5188  0E36  3045               	movlw	69
  5189  0E37  1683               	bsf	3,5	;RP0=1, select bank1
  5190  0E38  1303               	bcf	3,6	;RP1=0, select bank1
  5191  0E39  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5192  0E3A  30AB               	movlw	171
  5193  0E3B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5194  0E3C  30E0               	movlw	224
  5195  0E3D  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5196  0E3E  3000               	movlw	0
  5197  0E3F  00A0               	movwf	___fldiv@a^(0+128)
  5198  0E40  1683               	bsf	3,5	;RP0=1, select bank3
  5199  0E41  1703               	bsf	3,6	;RP1=1, select bank3
  5200  0E42  0817               	movf	(_VR+3)^(0+384),w
  5201  0E43  1683               	bsf	3,5	;RP0=1, select bank1
  5202  0E44  1303               	bcf	3,6	;RP1=0, select bank1
  5203  0E45  00A7               	movwf	(___fldiv@b+3)^(0+128)
  5204  0E46  1683               	bsf	3,5	;RP0=1, select bank3
  5205  0E47  1703               	bsf	3,6	;RP1=1, select bank3
  5206  0E48  0816               	movf	(_VR+2)^(0+384),w
  5207  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  5208  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  5209  0E4B  00A6               	movwf	(___fldiv@b+2)^(0+128)
  5210  0E4C  1683               	bsf	3,5	;RP0=1, select bank3
  5211  0E4D  1703               	bsf	3,6	;RP1=1, select bank3
  5212  0E4E  0815               	movf	(_VR+1)^(0+384),w
  5213  0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  5214  0E50  1303               	bcf	3,6	;RP1=0, select bank1
  5215  0E51  00A5               	movwf	(___fldiv@b+1)^(0+128)
  5216  0E52  1683               	bsf	3,5	;RP0=1, select bank3
  5217  0E53  1703               	bsf	3,6	;RP1=1, select bank3
  5218  0E54  0814               	movf	_VR^(0+384),w
  5219  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  5220  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  5221  0E57  00A4               	movwf	___fldiv@b^(0+128)
  5222  0E58  120A  158A  207F  120A  158A  	fcall	___fldiv
  5223  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  5224  0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  5225  0E5F  0823               	movf	(?___fldiv+3)^(0+128),w
  5226  0E60  00E1               	movwf	(_GetTemp$1061+3)^(0+128)
  5227  0E61  0822               	movf	(?___fldiv+2)^(0+128),w
  5228  0E62  00E0               	movwf	(_GetTemp$1061+2)^(0+128)
  5229  0E63  0821               	movf	(?___fldiv+1)^(0+128),w
  5230  0E64  00DF               	movwf	(_GetTemp$1061+1)^(0+128)
  5231  0E65  0820               	movf	?___fldiv^(0+128),w
  5232  0E66  00DE               	movwf	_GetTemp$1061^(0+128)
  5233  0E67                     l3946:
  5234                           
  5235                           ;AFC.c: 295: RT = VRT / (VR / 5500);
  5236  0E67  0861               	movf	(_GetTemp$1061+3)^(0+128),w
  5237  0E68  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5238  0E69  0860               	movf	(_GetTemp$1061+2)^(0+128),w
  5239  0E6A  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5240  0E6B  085F               	movf	(_GetTemp$1061+1)^(0+128),w
  5241  0E6C  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5242  0E6D  085E               	movf	_GetTemp$1061^(0+128),w
  5243  0E6E  00A0               	movwf	___fldiv@a^(0+128)
  5244  0E6F  086B               	movf	(_VRT+3)^(0+128),w
  5245  0E70  00A7               	movwf	(___fldiv@b+3)^(0+128)
  5246  0E71  086A               	movf	(_VRT+2)^(0+128),w
  5247  0E72  00A6               	movwf	(___fldiv@b+2)^(0+128)
  5248  0E73  0869               	movf	(_VRT+1)^(0+128),w
  5249  0E74  00A5               	movwf	(___fldiv@b+1)^(0+128)
  5250  0E75  0868               	movf	_VRT^(0+128),w
  5251  0E76  00A4               	movwf	___fldiv@b^(0+128)
  5252  0E77  120A  158A  207F  120A  158A  	fcall	___fldiv
  5253  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  5254  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  5255  0E7E  0823               	movf	(?___fldiv+3)^(0+128),w
  5256  0E7F  1683               	bsf	3,5	;RP0=1, select bank3
  5257  0E80  1703               	bsf	3,6	;RP1=1, select bank3
  5258  0E81  009B               	movwf	(_RT+3)^(0+384)
  5259  0E82  1683               	bsf	3,5	;RP0=1, select bank1
  5260  0E83  1303               	bcf	3,6	;RP1=0, select bank1
  5261  0E84  0822               	movf	(?___fldiv+2)^(0+128),w
  5262  0E85  1683               	bsf	3,5	;RP0=1, select bank3
  5263  0E86  1703               	bsf	3,6	;RP1=1, select bank3
  5264  0E87  009A               	movwf	(_RT+2)^(0+384)
  5265  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  5266  0E89  1303               	bcf	3,6	;RP1=0, select bank1
  5267  0E8A  0821               	movf	(?___fldiv+1)^(0+128),w
  5268  0E8B  1683               	bsf	3,5	;RP0=1, select bank3
  5269  0E8C  1703               	bsf	3,6	;RP1=1, select bank3
  5270  0E8D  0099               	movwf	(_RT+1)^(0+384)
  5271  0E8E  1683               	bsf	3,5	;RP0=1, select bank1
  5272  0E8F  1303               	bcf	3,6	;RP1=0, select bank1
  5273  0E90  0820               	movf	?___fldiv^(0+128),w
  5274  0E91  1683               	bsf	3,5	;RP0=1, select bank3
  5275  0E92  1703               	bsf	3,6	;RP1=1, select bank3
  5276  0E93  0098               	movwf	_RT^(0+384)
  5277  0E94                     l3948:
  5278                           
  5279                           ;AFC.c: 296: ln = log(RT / 5684);
  5280  0E94  3045               	movlw	69
  5281  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  5282  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  5283  0E97  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5284  0E98  30B1               	movlw	177
  5285  0E99  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5286  0E9A  30A0               	movlw	160
  5287  0E9B  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5288  0E9C  3000               	movlw	0
  5289  0E9D  00A0               	movwf	___fldiv@a^(0+128)
  5290  0E9E  1683               	bsf	3,5	;RP0=1, select bank3
  5291  0E9F  1703               	bsf	3,6	;RP1=1, select bank3
  5292  0EA0  081B               	movf	(_RT+3)^(0+384),w
  5293  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  5294  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  5295  0EA3  00A7               	movwf	(___fldiv@b+3)^(0+128)
  5296  0EA4  1683               	bsf	3,5	;RP0=1, select bank3
  5297  0EA5  1703               	bsf	3,6	;RP1=1, select bank3
  5298  0EA6  081A               	movf	(_RT+2)^(0+384),w
  5299  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  5300  0EA8  1303               	bcf	3,6	;RP1=0, select bank1
  5301  0EA9  00A6               	movwf	(___fldiv@b+2)^(0+128)
  5302  0EAA  1683               	bsf	3,5	;RP0=1, select bank3
  5303  0EAB  1703               	bsf	3,6	;RP1=1, select bank3
  5304  0EAC  0819               	movf	(_RT+1)^(0+384),w
  5305  0EAD  1683               	bsf	3,5	;RP0=1, select bank1
  5306  0EAE  1303               	bcf	3,6	;RP1=0, select bank1
  5307  0EAF  00A5               	movwf	(___fldiv@b+1)^(0+128)
  5308  0EB0  1683               	bsf	3,5	;RP0=1, select bank3
  5309  0EB1  1703               	bsf	3,6	;RP1=1, select bank3
  5310  0EB2  0818               	movf	_RT^(0+384),w
  5311  0EB3  1683               	bsf	3,5	;RP0=1, select bank1
  5312  0EB4  1303               	bcf	3,6	;RP1=0, select bank1
  5313  0EB5  00A4               	movwf	___fldiv@b^(0+128)
  5314  0EB6  120A  158A  207F  120A  158A  	fcall	___fldiv
  5315  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  5316  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  5317  0EBD  0823               	movf	(?___fldiv+3)^(0+128),w
  5318  0EBE  00B8               	movwf	(log@x+3)^(0+128)
  5319  0EBF  0822               	movf	(?___fldiv+2)^(0+128),w
  5320  0EC0  00B7               	movwf	(log@x+2)^(0+128)
  5321  0EC1  0821               	movf	(?___fldiv+1)^(0+128),w
  5322  0EC2  00B6               	movwf	(log@x+1)^(0+128)
  5323  0EC3  0820               	movf	?___fldiv^(0+128),w
  5324  0EC4  00B5               	movwf	log@x^(0+128)
  5325  0EC5  160A  118A  250E  120A  158A  	fcall	_log
  5326  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  5327  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  5328  0ECC  0838               	movf	(?_log+3)^(0+128),w
  5329  0ECD  1683               	bsf	3,5	;RP0=1, select bank3
  5330  0ECE  1703               	bsf	3,6	;RP1=1, select bank3
  5331  0ECF  00D1               	movwf	(_ln+3)^(0+384)
  5332  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  5333  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  5334  0ED2  0837               	movf	(?_log+2)^(0+128),w
  5335  0ED3  1683               	bsf	3,5	;RP0=1, select bank3
  5336  0ED4  1703               	bsf	3,6	;RP1=1, select bank3
  5337  0ED5  00D0               	movwf	(_ln+2)^(0+384)
  5338  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  5339  0ED7  1303               	bcf	3,6	;RP1=0, select bank1
  5340  0ED8  0836               	movf	(?_log+1)^(0+128),w
  5341  0ED9  1683               	bsf	3,5	;RP0=1, select bank3
  5342  0EDA  1703               	bsf	3,6	;RP1=1, select bank3
  5343  0EDB  00CF               	movwf	(_ln+1)^(0+384)
  5344  0EDC  1683               	bsf	3,5	;RP0=1, select bank1
  5345  0EDD  1303               	bcf	3,6	;RP1=0, select bank1
  5346  0EDE  0835               	movf	?_log^(0+128),w
  5347  0EDF  1683               	bsf	3,5	;RP0=1, select bank3
  5348  0EE0  1703               	bsf	3,6	;RP1=1, select bank3
  5349  0EE1  00CE               	movwf	_ln^(0+384)
  5350  0EE2                     l3950:
  5351                           
  5352                           ;AFC.c: 297: Temperature = (1 / ((ln / 3965) + (1 / T0)));
  5353  0EE2  0851               	movf	(_ln+3)^(0+384),w
  5354  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  5355  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  5356  0EE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  5357  0EE6  1683               	bsf	3,5	;RP0=1, select bank3
  5358  0EE7  1703               	bsf	3,6	;RP1=1, select bank3
  5359  0EE8  0850               	movf	(_ln+2)^(0+384),w
  5360  0EE9  1683               	bsf	3,5	;RP0=1, select bank1
  5361  0EEA  1303               	bcf	3,6	;RP1=0, select bank1
  5362  0EEB  00A6               	movwf	(___fldiv@b+2)^(0+128)
  5363  0EEC  1683               	bsf	3,5	;RP0=1, select bank3
  5364  0EED  1703               	bsf	3,6	;RP1=1, select bank3
  5365  0EEE  084F               	movf	(_ln+1)^(0+384),w
  5366  0EEF  1683               	bsf	3,5	;RP0=1, select bank1
  5367  0EF0  1303               	bcf	3,6	;RP1=0, select bank1
  5368  0EF1  00A5               	movwf	(___fldiv@b+1)^(0+128)
  5369  0EF2  1683               	bsf	3,5	;RP0=1, select bank3
  5370  0EF3  1703               	bsf	3,6	;RP1=1, select bank3
  5371  0EF4  084E               	movf	_ln^(0+384),w
  5372  0EF5  1683               	bsf	3,5	;RP0=1, select bank1
  5373  0EF6  1303               	bcf	3,6	;RP1=0, select bank1
  5374  0EF7  00A4               	movwf	___fldiv@b^(0+128)
  5375  0EF8  3045               	movlw	69
  5376  0EF9  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5377  0EFA  3077               	movlw	119
  5378  0EFB  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5379  0EFC  30D0               	movlw	208
  5380  0EFD  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5381  0EFE  3000               	movlw	0
  5382  0EFF  00A0               	movwf	___fldiv@a^(0+128)
  5383  0F00  120A  158A  207F  120A  158A  	fcall	___fldiv
  5384  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  5385  0F06  1303               	bcf	3,6	;RP1=0, select bank1
  5386  0F07  0823               	movf	(?___fldiv+3)^(0+128),w
  5387  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5389  0F0A  00BA               	movwf	___fladd@a+3
  5390  0F0B  1683               	bsf	3,5	;RP0=1, select bank1
  5391  0F0C  1303               	bcf	3,6	;RP1=0, select bank1
  5392  0F0D  0822               	movf	(?___fldiv+2)^(0+128),w
  5393  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  5394  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  5395  0F10  00B9               	movwf	___fladd@a+2
  5396  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  5397  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  5398  0F13  0821               	movf	(?___fldiv+1)^(0+128),w
  5399  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  5400  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  5401  0F16  00B8               	movwf	___fladd@a+1
  5402  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  5403  0F18  1303               	bcf	3,6	;RP1=0, select bank1
  5404  0F19  0820               	movf	?___fldiv^(0+128),w
  5405  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0F1C  00B7               	movwf	___fladd@a
  5408  0F1D  303F               	movlw	63
  5409  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5410  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  5411  0F20  00A7               	movwf	(___fldiv@b+3)^(0+128)
  5412  0F21  3080               	movlw	128
  5413  0F22  00A6               	movwf	(___fldiv@b+2)^(0+128)
  5414  0F23  3000               	movlw	0
  5415  0F24  00A5               	movwf	(___fldiv@b+1)^(0+128)
  5416  0F25  3000               	movlw	0
  5417  0F26  00A4               	movwf	___fldiv@b^(0+128)
  5418  0F27  1683               	bsf	3,5	;RP0=1, select bank3
  5419  0F28  1703               	bsf	3,6	;RP1=1, select bank3
  5420  0F29  084D               	movf	(_T0+3)^(0+384),w
  5421  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  5422  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  5423  0F2C  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5424  0F2D  1683               	bsf	3,5	;RP0=1, select bank3
  5425  0F2E  1703               	bsf	3,6	;RP1=1, select bank3
  5426  0F2F  084C               	movf	(_T0+2)^(0+384),w
  5427  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  5428  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  5429  0F32  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5430  0F33  1683               	bsf	3,5	;RP0=1, select bank3
  5431  0F34  1703               	bsf	3,6	;RP1=1, select bank3
  5432  0F35  084B               	movf	(_T0+1)^(0+384),w
  5433  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  5434  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  5435  0F38  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5436  0F39  1683               	bsf	3,5	;RP0=1, select bank3
  5437  0F3A  1703               	bsf	3,6	;RP1=1, select bank3
  5438  0F3B  084A               	movf	_T0^(0+384),w
  5439  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  5440  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  5441  0F3E  00A0               	movwf	___fldiv@a^(0+128)
  5442  0F3F  120A  158A  207F  120A  158A  	fcall	___fldiv
  5443  0F44  1683               	bsf	3,5	;RP0=1, select bank1
  5444  0F45  1303               	bcf	3,6	;RP1=0, select bank1
  5445  0F46  0823               	movf	(?___fldiv+3)^(0+128),w
  5446  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  5447  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  5448  0F49  00B6               	movwf	___fladd@b+3
  5449  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  5450  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  5451  0F4C  0822               	movf	(?___fldiv+2)^(0+128),w
  5452  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0F4F  00B5               	movwf	___fladd@b+2
  5455  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  5456  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  5457  0F52  0821               	movf	(?___fldiv+1)^(0+128),w
  5458  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  5459  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  5460  0F55  00B4               	movwf	___fladd@b+1
  5461  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  5462  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  5463  0F58  0820               	movf	?___fldiv^(0+128),w
  5464  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  5465  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  5466  0F5B  00B3               	movwf	___fladd@b
  5467  0F5C  120A  158A  22E2  120A  158A  	fcall	___fladd
  5468  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  5469  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  5470  0F63  0836               	movf	?___fladd+3,w
  5471  0F64  1683               	bsf	3,5	;RP0=1, select bank1
  5472  0F65  1303               	bcf	3,6	;RP1=0, select bank1
  5473  0F66  00E1               	movwf	(_GetTemp$1061+3)^(0+128)
  5474  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  5475  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  5476  0F69  0835               	movf	?___fladd+2,w
  5477  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  5478  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  5479  0F6C  00E0               	movwf	(_GetTemp$1061+2)^(0+128)
  5480  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0F6F  0834               	movf	?___fladd+1,w
  5483  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  5484  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  5485  0F72  00DF               	movwf	(_GetTemp$1061+1)^(0+128)
  5486  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  5487  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  5488  0F75  0833               	movf	?___fladd,w
  5489  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  5490  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  5491  0F78  00DE               	movwf	_GetTemp$1061^(0+128)
  5492  0F79                     l3952:
  5493                           
  5494                           ;AFC.c: 297: Temperature = (1 / ((ln / 3965) + (1 / T0)));
  5495  0F79  303F               	movlw	63
  5496  0F7A  00A7               	movwf	(___fldiv@b+3)^(0+128)
  5497  0F7B  3080               	movlw	128
  5498  0F7C  00A6               	movwf	(___fldiv@b+2)^(0+128)
  5499  0F7D  3000               	movlw	0
  5500  0F7E  00A5               	movwf	(___fldiv@b+1)^(0+128)
  5501  0F7F  3000               	movlw	0
  5502  0F80  00A4               	movwf	___fldiv@b^(0+128)
  5503  0F81  0861               	movf	(_GetTemp$1061+3)^(0+128),w
  5504  0F82  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5505  0F83  0860               	movf	(_GetTemp$1061+2)^(0+128),w
  5506  0F84  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5507  0F85  085F               	movf	(_GetTemp$1061+1)^(0+128),w
  5508  0F86  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5509  0F87  085E               	movf	_GetTemp$1061^(0+128),w
  5510  0F88  00A0               	movwf	___fldiv@a^(0+128)
  5511  0F89  120A  158A  207F  120A  158A  	fcall	___fldiv
  5512  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  5513  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  5514  0F90  0823               	movf	(?___fldiv+3)^(0+128),w
  5515  0F91  00D0               	movwf	(___fltol@f1+3)^(0+128)
  5516  0F92  0822               	movf	(?___fldiv+2)^(0+128),w
  5517  0F93  00CF               	movwf	(___fltol@f1+2)^(0+128)
  5518  0F94  0821               	movf	(?___fldiv+1)^(0+128),w
  5519  0F95  00CE               	movwf	(___fltol@f1+1)^(0+128)
  5520  0F96  0820               	movf	?___fldiv^(0+128),w
  5521  0F97  00CD               	movwf	___fltol@f1^(0+128)
  5522  0F98  120A  158A  2003  120A  158A  	fcall	___fltol
  5523  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  5524  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  5525  0F9F  084E               	movf	(?___fltol+1)^(0+128),w
  5526  0FA0  00E7               	movwf	(_Temperature+1)^(0+128)
  5527  0FA1  084D               	movf	?___fltol^(0+128),w
  5528  0FA2  00E6               	movwf	_Temperature^(0+128)
  5529  0FA3                     l3954:
  5530                           
  5531                           ;AFC.c: 298: Temperature = Temperature - 273.15;
  5532  0FA3  0866               	movf	_Temperature^(0+128),w
  5533  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  5534  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  5535  0FA6  00A5               	movwf	___xxtofl@val
  5536  0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  5537  0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  5538  0FA9  0867               	movf	(_Temperature+1)^(0+128),w
  5539  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0FAC  00A6               	movwf	___xxtofl@val+1
  5542  0FAD  3000               	movlw	0
  5543  0FAE  1BA6               	btfsc	___xxtofl@val+1,7
  5544  0FAF  30FF               	movlw	255
  5545  0FB0  00A7               	movwf	___xxtofl@val+2
  5546  0FB1  00A8               	movwf	___xxtofl@val+3
  5547  0FB2  3001               	movlw	1
  5548  0FB3  160A  118A  222B  120A  158A  	fcall	___xxtofl
  5549  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  5550  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  5551  0FBA  0828               	movf	?___xxtofl+3,w
  5552  0FBB  00BA               	movwf	___fladd@a+3
  5553  0FBC  0827               	movf	?___xxtofl+2,w
  5554  0FBD  00B9               	movwf	___fladd@a+2
  5555  0FBE  0826               	movf	?___xxtofl+1,w
  5556  0FBF  00B8               	movwf	___fladd@a+1
  5557  0FC0  0825               	movf	?___xxtofl,w
  5558  0FC1  00B7               	movwf	___fladd@a
  5559  0FC2  30C3               	movlw	195
  5560  0FC3  00B6               	movwf	___fladd@b+3
  5561  0FC4  3088               	movlw	136
  5562  0FC5  00B5               	movwf	___fladd@b+2
  5563  0FC6  3093               	movlw	147
  5564  0FC7  00B4               	movwf	___fladd@b+1
  5565  0FC8  3033               	movlw	51
  5566  0FC9  00B3               	movwf	___fladd@b
  5567  0FCA  120A  158A  22E2  120A  158A  	fcall	___fladd
  5568  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  5569  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  5570  0FD1  0836               	movf	?___fladd+3,w
  5571  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  5572  0FD3  1303               	bcf	3,6	;RP1=0, select bank1
  5573  0FD4  00D0               	movwf	(___fltol@f1+3)^(0+128)
  5574  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  5575  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  5576  0FD7  0835               	movf	?___fladd+2,w
  5577  0FD8  1683               	bsf	3,5	;RP0=1, select bank1
  5578  0FD9  1303               	bcf	3,6	;RP1=0, select bank1
  5579  0FDA  00CF               	movwf	(___fltol@f1+2)^(0+128)
  5580  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  5581  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  5582  0FDD  0834               	movf	?___fladd+1,w
  5583  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  5584  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  5585  0FE0  00CE               	movwf	(___fltol@f1+1)^(0+128)
  5586  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  5587  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  5588  0FE3  0833               	movf	?___fladd,w
  5589  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  5590  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  5591  0FE6  00CD               	movwf	___fltol@f1^(0+128)
  5592  0FE7  120A  158A  2003  120A  158A  	fcall	___fltol
  5593  0FEC  1683               	bsf	3,5	;RP0=1, select bank1
  5594  0FED  1303               	bcf	3,6	;RP1=0, select bank1
  5595  0FEE  084E               	movf	(?___fltol+1)^(0+128),w
  5596  0FEF  00E7               	movwf	(_Temperature+1)^(0+128)
  5597  0FF0  084D               	movf	?___fltol^(0+128),w
  5598  0FF1  00E6               	movwf	_Temperature^(0+128)
  5599  0FF2                     l3956:
  5600                           
  5601                           ;AFC.c: 300: _delay((unsigned long)((125)*(8000000/4000000.0)));
  5602  0FF2  3052               	movlw	82
  5603  0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  5604  0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  5605  0FF5  00DA               	movwf	??_GetTemp^(0+128)
  5606  0FF6                     u5777:
  5607  0FF6  0BDA               	decfsz	??_GetTemp^(0+128),f
  5608  0FF7  2FF6               	goto	u5777
  5609  0FF8  0000               	nop
  5610  0FF9                     l3958:
  5611                           
  5612                           ;AFC.c: 301: return Temperature;
  5613  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  5614  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  5615  0FFB  0867               	movf	(_Temperature+1)^(0+128),w
  5616  0FFC  00D9               	movwf	(?_GetTemp+1)^(0+128)
  5617  0FFD  0866               	movf	_Temperature^(0+128),w
  5618  0FFE  00D8               	movwf	?_GetTemp^(0+128)
  5619  0FFF                     l281:
  5620  0FFF  0008               	return
  5621  1000                     __end_of_GetTemp:
  5622                           
  5623                           	psect	text21
  5624  150E                     __ptext21:	
  5625 ;; *************** function _log *****************
  5626 ;; Defined at:
  5627 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\log.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  x               4   21[BANK1 ] int 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  exponent        2   25[BANK1 ] int 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  4   21[BANK1 ] int 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5641 ;;      Params:         0       0       4       0       0
  5642 ;;      Locals:         0       0       2       0       0
  5643 ;;      Temps:          0       1       0       0       0
  5644 ;;      Totals:         0       1       6       0       0
  5645 ;;Total ram usage:        7 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    4
  5648 ;; This function calls:
  5649 ;;		___fladd
  5650 ;;		___fleq
  5651 ;;		___flge
  5652 ;;		___flmul
  5653 ;;		___xxtofl
  5654 ;;		_eval_poly
  5655 ;;		_frexp
  5656 ;; This function is called by:
  5657 ;;		_GetTemp
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _log
  5663  150E                     _log:
  5664  150E                     l3622:	
  5665                           ;incstack = 0
  5666                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5667                           
  5668  150E  1683               	bsf	3,5	;RP0=1, select bank1
  5669  150F  1303               	bcf	3,6	;RP1=0, select bank1
  5670  1510  0838               	movf	(log@x+3)^(0+128),w
  5671  1511  1283               	bcf	3,5	;RP0=0, select bank0
  5672  1512  1303               	bcf	3,6	;RP1=0, select bank0
  5673  1513  00A3               	movwf	___flge@ff1+3
  5674  1514  1683               	bsf	3,5	;RP0=1, select bank1
  5675  1515  1303               	bcf	3,6	;RP1=0, select bank1
  5676  1516  0837               	movf	(log@x+2)^(0+128),w
  5677  1517  1283               	bcf	3,5	;RP0=0, select bank0
  5678  1518  1303               	bcf	3,6	;RP1=0, select bank0
  5679  1519  00A2               	movwf	___flge@ff1+2
  5680  151A  1683               	bsf	3,5	;RP0=1, select bank1
  5681  151B  1303               	bcf	3,6	;RP1=0, select bank1
  5682  151C  0836               	movf	(log@x+1)^(0+128),w
  5683  151D  1283               	bcf	3,5	;RP0=0, select bank0
  5684  151E  1303               	bcf	3,6	;RP1=0, select bank0
  5685  151F  00A1               	movwf	___flge@ff1+1
  5686  1520  1683               	bsf	3,5	;RP0=1, select bank1
  5687  1521  1303               	bcf	3,6	;RP1=0, select bank1
  5688  1522  0835               	movf	log@x^(0+128),w
  5689  1523  1283               	bcf	3,5	;RP0=0, select bank0
  5690  1524  1303               	bcf	3,6	;RP1=0, select bank0
  5691  1525  00A0               	movwf	___flge@ff1
  5692  1526  3000               	movlw	0
  5693  1527  00A7               	movwf	___flge@ff2+3
  5694  1528  3000               	movlw	0
  5695  1529  00A6               	movwf	___flge@ff2+2
  5696  152A  3000               	movlw	0
  5697  152B  00A5               	movwf	___flge@ff2+1
  5698  152C  3000               	movlw	0
  5699  152D  00A4               	movwf	___flge@ff2
  5700  152E  160A  118A  2187  160A  118A  	fcall	___flge
  5701  1533  1803               	btfsc	3,0
  5702  1534  2D36               	goto	u4821
  5703  1535  2D37               	goto	u4820
  5704  1536                     u4821:
  5705  1536  2D48               	goto	l3628
  5706  1537                     u4820:
  5707  1537                     l3624:
  5708  1537  3021               	movlw	33
  5709  1538  1683               	bsf	3,5	;RP0=1, select bank3
  5710  1539  1703               	bsf	3,6	;RP1=1, select bank3
  5711  153A  00A0               	movwf	_errno^(0+384)
  5712  153B  3000               	movlw	0
  5713  153C  00A1               	movwf	(_errno^(0+384)+1)
  5714  153D  3000               	movlw	0
  5715  153E  1683               	bsf	3,5	;RP0=1, select bank1
  5716  153F  1303               	bcf	3,6	;RP1=0, select bank1
  5717  1540  00B8               	movwf	(?_log+3)^(0+128)
  5718  1541  3000               	movlw	0
  5719  1542  00B7               	movwf	(?_log+2)^(0+128)
  5720  1543  3000               	movlw	0
  5721  1544  00B6               	movwf	(?_log+1)^(0+128)
  5722  1545  3000               	movlw	0
  5723  1546  00B5               	movwf	?_log^(0+128)
  5724  1547  2E7F               	goto	l874
  5725  1548                     l3628:
  5726  1548  1683               	bsf	3,5	;RP0=1, select bank1
  5727  1549  1303               	bcf	3,6	;RP1=0, select bank1
  5728  154A  0838               	movf	(log@x+3)^(0+128),w
  5729  154B  1283               	bcf	3,5	;RP0=0, select bank0
  5730  154C  1303               	bcf	3,6	;RP1=0, select bank0
  5731  154D  00A3               	movwf	___fleq@ff1+3
  5732  154E  1683               	bsf	3,5	;RP0=1, select bank1
  5733  154F  1303               	bcf	3,6	;RP1=0, select bank1
  5734  1550  0837               	movf	(log@x+2)^(0+128),w
  5735  1551  1283               	bcf	3,5	;RP0=0, select bank0
  5736  1552  1303               	bcf	3,6	;RP1=0, select bank0
  5737  1553  00A2               	movwf	___fleq@ff1+2
  5738  1554  1683               	bsf	3,5	;RP0=1, select bank1
  5739  1555  1303               	bcf	3,6	;RP1=0, select bank1
  5740  1556  0836               	movf	(log@x+1)^(0+128),w
  5741  1557  1283               	bcf	3,5	;RP0=0, select bank0
  5742  1558  1303               	bcf	3,6	;RP1=0, select bank0
  5743  1559  00A1               	movwf	___fleq@ff1+1
  5744  155A  1683               	bsf	3,5	;RP0=1, select bank1
  5745  155B  1303               	bcf	3,6	;RP1=0, select bank1
  5746  155C  0835               	movf	log@x^(0+128),w
  5747  155D  1283               	bcf	3,5	;RP0=0, select bank0
  5748  155E  1303               	bcf	3,6	;RP1=0, select bank0
  5749  155F  00A0               	movwf	___fleq@ff1
  5750  1560  3000               	movlw	0
  5751  1561  00A7               	movwf	___fleq@ff2+3
  5752  1562  3000               	movlw	0
  5753  1563  00A6               	movwf	___fleq@ff2+2
  5754  1564  3000               	movlw	0
  5755  1565  00A5               	movwf	___fleq@ff2+1
  5756  1566  3000               	movlw	0
  5757  1567  00A4               	movwf	___fleq@ff2
  5758  1568  160A  158A  26CC  160A  118A  	fcall	___fleq
  5759  156D  1C03               	btfss	3,0
  5760  156E  2D70               	goto	u4831
  5761  156F  2D71               	goto	u4830
  5762  1570                     u4831:
  5763  1570  2D82               	goto	l3634
  5764  1571                     u4830:
  5765  1571                     l3630:
  5766  1571  3022               	movlw	34
  5767  1572  1683               	bsf	3,5	;RP0=1, select bank3
  5768  1573  1703               	bsf	3,6	;RP1=1, select bank3
  5769  1574  00A0               	movwf	_errno^(0+384)
  5770  1575  3000               	movlw	0
  5771  1576  00A1               	movwf	(_errno^(0+384)+1)
  5772  1577  3000               	movlw	0
  5773  1578  1683               	bsf	3,5	;RP0=1, select bank1
  5774  1579  1303               	bcf	3,6	;RP1=0, select bank1
  5775  157A  00B8               	movwf	(?_log+3)^(0+128)
  5776  157B  3000               	movlw	0
  5777  157C  00B7               	movwf	(?_log+2)^(0+128)
  5778  157D  3000               	movlw	0
  5779  157E  00B6               	movwf	(?_log+1)^(0+128)
  5780  157F  3000               	movlw	0
  5781  1580  00B5               	movwf	?_log^(0+128)
  5782  1581  2E7F               	goto	l874
  5783  1582                     l3634:
  5784  1582  30BF               	movlw	191
  5785  1583  1283               	bcf	3,5	;RP0=0, select bank0
  5786  1584  1303               	bcf	3,6	;RP1=0, select bank0
  5787  1585  00B6               	movwf	___fladd@b+3
  5788  1586  3080               	movlw	128
  5789  1587  00B5               	movwf	___fladd@b+2
  5790  1588  3000               	movlw	0
  5791  1589  00B4               	movwf	___fladd@b+1
  5792  158A  3000               	movlw	0
  5793  158B  00B3               	movwf	___fladd@b
  5794  158C  3040               	movlw	64
  5795  158D  00D2               	movwf	___flmul@b+3
  5796  158E  3000               	movlw	0
  5797  158F  00D1               	movwf	___flmul@b+2
  5798  1590  3000               	movlw	0
  5799  1591  00D0               	movwf	___flmul@b+1
  5800  1592  3000               	movlw	0
  5801  1593  00CF               	movwf	___flmul@b
  5802  1594  30B9               	movlw	(low (log@exponent| 0))& (0+255)
  5803  1595  00EE               	movwf	??_log
  5804  1596  086E               	movf	??_log,w
  5805  1597  00B0               	movwf	frexp@eptr
  5806  1598  1683               	bsf	3,5	;RP0=1, select bank1
  5807  1599  1303               	bcf	3,6	;RP1=0, select bank1
  5808  159A  0838               	movf	(log@x+3)^(0+128),w
  5809  159B  1283               	bcf	3,5	;RP0=0, select bank0
  5810  159C  1303               	bcf	3,6	;RP1=0, select bank0
  5811  159D  00AF               	movwf	frexp@value+3
  5812  159E  1683               	bsf	3,5	;RP0=1, select bank1
  5813  159F  1303               	bcf	3,6	;RP1=0, select bank1
  5814  15A0  0837               	movf	(log@x+2)^(0+128),w
  5815  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  5816  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  5817  15A3  00AE               	movwf	frexp@value+2
  5818  15A4  1683               	bsf	3,5	;RP0=1, select bank1
  5819  15A5  1303               	bcf	3,6	;RP1=0, select bank1
  5820  15A6  0836               	movf	(log@x+1)^(0+128),w
  5821  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  5822  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  5823  15A9  00AD               	movwf	frexp@value+1
  5824  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  5825  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  5826  15AC  0835               	movf	log@x^(0+128),w
  5827  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  5828  15AE  1303               	bcf	3,6	;RP1=0, select bank0
  5829  15AF  00AC               	movwf	frexp@value
  5830  15B0  160A  158A  271C  160A  118A  	fcall	_frexp
  5831  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  5832  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  5833  15B7  082F               	movf	?_frexp+3,w
  5834  15B8  00D6               	movwf	___flmul@a+3
  5835  15B9  082E               	movf	?_frexp+2,w
  5836  15BA  00D5               	movwf	___flmul@a+2
  5837  15BB  082D               	movf	?_frexp+1,w
  5838  15BC  00D4               	movwf	___flmul@a+1
  5839  15BD  082C               	movf	?_frexp,w
  5840  15BE  00D3               	movwf	___flmul@a
  5841  15BF  120A  118A  245A  160A  118A  	fcall	___flmul
  5842  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  5843  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  5844  15C6  0852               	movf	?___flmul+3,w
  5845  15C7  00BA               	movwf	___fladd@a+3
  5846  15C8  0851               	movf	?___flmul+2,w
  5847  15C9  00B9               	movwf	___fladd@a+2
  5848  15CA  0850               	movf	?___flmul+1,w
  5849  15CB  00B8               	movwf	___fladd@a+1
  5850  15CC  084F               	movf	?___flmul,w
  5851  15CD  00B7               	movwf	___fladd@a
  5852  15CE  120A  158A  22E2  160A  118A  	fcall	___fladd
  5853  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  5854  15D4  1303               	bcf	3,6	;RP1=0, select bank0
  5855  15D5  0836               	movf	?___fladd+3,w
  5856  15D6  1683               	bsf	3,5	;RP0=1, select bank1
  5857  15D7  1303               	bcf	3,6	;RP1=0, select bank1
  5858  15D8  00B8               	movwf	(log@x+3)^(0+128)
  5859  15D9  1283               	bcf	3,5	;RP0=0, select bank0
  5860  15DA  1303               	bcf	3,6	;RP1=0, select bank0
  5861  15DB  0835               	movf	?___fladd+2,w
  5862  15DC  1683               	bsf	3,5	;RP0=1, select bank1
  5863  15DD  1303               	bcf	3,6	;RP1=0, select bank1
  5864  15DE  00B7               	movwf	(log@x+2)^(0+128)
  5865  15DF  1283               	bcf	3,5	;RP0=0, select bank0
  5866  15E0  1303               	bcf	3,6	;RP1=0, select bank0
  5867  15E1  0834               	movf	?___fladd+1,w
  5868  15E2  1683               	bsf	3,5	;RP0=1, select bank1
  5869  15E3  1303               	bcf	3,6	;RP1=0, select bank1
  5870  15E4  00B6               	movwf	(log@x+1)^(0+128)
  5871  15E5  1283               	bcf	3,5	;RP0=0, select bank0
  5872  15E6  1303               	bcf	3,6	;RP1=0, select bank0
  5873  15E7  0833               	movf	?___fladd,w
  5874  15E8  1683               	bsf	3,5	;RP0=1, select bank1
  5875  15E9  1303               	bcf	3,6	;RP1=0, select bank1
  5876  15EA  00B5               	movwf	log@x^(0+128)
  5877  15EB                     l3636:
  5878  15EB  30FF               	movlw	255
  5879  15EC  07B9               	addwf	log@exponent^(0+128),f
  5880  15ED  1803               	skipnc
  5881  15EE  0ABA               	incf	(log@exponent+1)^(0+128),f
  5882  15EF  30FF               	movlw	255
  5883  15F0  07BA               	addwf	(log@exponent+1)^(0+128),f
  5884  15F1                     l3638:
  5885  15F1  0838               	movf	(log@x+3)^(0+128),w
  5886  15F2  00A3               	movwf	(eval_poly@x+3)^(0+128)
  5887  15F3  0837               	movf	(log@x+2)^(0+128),w
  5888  15F4  00A2               	movwf	(eval_poly@x+2)^(0+128)
  5889  15F5  0836               	movf	(log@x+1)^(0+128),w
  5890  15F6  00A1               	movwf	(eval_poly@x+1)^(0+128)
  5891  15F7  0835               	movf	log@x^(0+128),w
  5892  15F8  00A0               	movwf	eval_poly@x^(0+128)
  5893  15F9  300F               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  5894  15FA  1283               	bcf	3,5	;RP0=0, select bank0
  5895  15FB  1303               	bcf	3,6	;RP1=0, select bank0
  5896  15FC  00EE               	movwf	??_log
  5897  15FD  086E               	movf	??_log,w
  5898  15FE  1683               	bsf	3,5	;RP0=1, select bank1
  5899  15FF  1303               	bcf	3,6	;RP1=0, select bank1
  5900  1600  00A4               	movwf	eval_poly@d^(0+128)
  5901  1601  3008               	movlw	8
  5902  1602  00A5               	movwf	eval_poly@n^(0+128)
  5903  1603  3000               	movlw	0
  5904  1604  00A6               	movwf	(eval_poly@n^(0+128)+1)
  5905  1605  160A  118A  22E7  160A  118A  	fcall	_eval_poly
  5906  160A  1683               	bsf	3,5	;RP0=1, select bank1
  5907  160B  1303               	bcf	3,6	;RP1=0, select bank1
  5908  160C  0823               	movf	(?_eval_poly+3)^(0+128),w
  5909  160D  00B8               	movwf	(log@x+3)^(0+128)
  5910  160E  0822               	movf	(?_eval_poly+2)^(0+128),w
  5911  160F  00B7               	movwf	(log@x+2)^(0+128)
  5912  1610  0821               	movf	(?_eval_poly+1)^(0+128),w
  5913  1611  00B6               	movwf	(log@x+1)^(0+128)
  5914  1612  0820               	movf	?_eval_poly^(0+128),w
  5915  1613  00B5               	movwf	log@x^(0+128)
  5916  1614                     l3640:
  5917  1614  0838               	movf	(log@x+3)^(0+128),w
  5918  1615  1283               	bcf	3,5	;RP0=0, select bank0
  5919  1616  1303               	bcf	3,6	;RP1=0, select bank0
  5920  1617  00B6               	movwf	___fladd@b+3
  5921  1618  1683               	bsf	3,5	;RP0=1, select bank1
  5922  1619  1303               	bcf	3,6	;RP1=0, select bank1
  5923  161A  0837               	movf	(log@x+2)^(0+128),w
  5924  161B  1283               	bcf	3,5	;RP0=0, select bank0
  5925  161C  1303               	bcf	3,6	;RP1=0, select bank0
  5926  161D  00B5               	movwf	___fladd@b+2
  5927  161E  1683               	bsf	3,5	;RP0=1, select bank1
  5928  161F  1303               	bcf	3,6	;RP1=0, select bank1
  5929  1620  0836               	movf	(log@x+1)^(0+128),w
  5930  1621  1283               	bcf	3,5	;RP0=0, select bank0
  5931  1622  1303               	bcf	3,6	;RP1=0, select bank0
  5932  1623  00B4               	movwf	___fladd@b+1
  5933  1624  1683               	bsf	3,5	;RP0=1, select bank1
  5934  1625  1303               	bcf	3,6	;RP1=0, select bank1
  5935  1626  0835               	movf	log@x^(0+128),w
  5936  1627  1283               	bcf	3,5	;RP0=0, select bank0
  5937  1628  1303               	bcf	3,6	;RP1=0, select bank0
  5938  1629  00B3               	movwf	___fladd@b
  5939  162A  303F               	movlw	63
  5940  162B  00D2               	movwf	___flmul@b+3
  5941  162C  3031               	movlw	49
  5942  162D  00D1               	movwf	___flmul@b+2
  5943  162E  3072               	movlw	114
  5944  162F  00D0               	movwf	___flmul@b+1
  5945  1630  3018               	movlw	24
  5946  1631  00CF               	movwf	___flmul@b
  5947  1632  1683               	bsf	3,5	;RP0=1, select bank1
  5948  1633  1303               	bcf	3,6	;RP1=0, select bank1
  5949  1634  0839               	movf	log@exponent^(0+128),w
  5950  1635  1283               	bcf	3,5	;RP0=0, select bank0
  5951  1636  1303               	bcf	3,6	;RP1=0, select bank0
  5952  1637  00A5               	movwf	___xxtofl@val
  5953  1638  1683               	bsf	3,5	;RP0=1, select bank1
  5954  1639  1303               	bcf	3,6	;RP1=0, select bank1
  5955  163A  083A               	movf	(log@exponent+1)^(0+128),w
  5956  163B  1283               	bcf	3,5	;RP0=0, select bank0
  5957  163C  1303               	bcf	3,6	;RP1=0, select bank0
  5958  163D  00A6               	movwf	___xxtofl@val+1
  5959  163E  3000               	movlw	0
  5960  163F  1BA6               	btfsc	___xxtofl@val+1,7
  5961  1640  30FF               	movlw	255
  5962  1641  00A7               	movwf	___xxtofl@val+2
  5963  1642  00A8               	movwf	___xxtofl@val+3
  5964  1643  3001               	movlw	1
  5965  1644  160A  118A  222B  160A  118A  	fcall	___xxtofl
  5966  1649  1283               	bcf	3,5	;RP0=0, select bank0
  5967  164A  1303               	bcf	3,6	;RP1=0, select bank0
  5968  164B  0828               	movf	?___xxtofl+3,w
  5969  164C  00D6               	movwf	___flmul@a+3
  5970  164D  0827               	movf	?___xxtofl+2,w
  5971  164E  00D5               	movwf	___flmul@a+2
  5972  164F  0826               	movf	?___xxtofl+1,w
  5973  1650  00D4               	movwf	___flmul@a+1
  5974  1651  0825               	movf	?___xxtofl,w
  5975  1652  00D3               	movwf	___flmul@a
  5976  1653  120A  118A  245A  160A  118A  	fcall	___flmul
  5977  1658  1283               	bcf	3,5	;RP0=0, select bank0
  5978  1659  1303               	bcf	3,6	;RP1=0, select bank0
  5979  165A  0852               	movf	?___flmul+3,w
  5980  165B  00BA               	movwf	___fladd@a+3
  5981  165C  0851               	movf	?___flmul+2,w
  5982  165D  00B9               	movwf	___fladd@a+2
  5983  165E  0850               	movf	?___flmul+1,w
  5984  165F  00B8               	movwf	___fladd@a+1
  5985  1660  084F               	movf	?___flmul,w
  5986  1661  00B7               	movwf	___fladd@a
  5987  1662  120A  158A  22E2  160A  118A  	fcall	___fladd
  5988  1667  1283               	bcf	3,5	;RP0=0, select bank0
  5989  1668  1303               	bcf	3,6	;RP1=0, select bank0
  5990  1669  0836               	movf	?___fladd+3,w
  5991  166A  1683               	bsf	3,5	;RP0=1, select bank1
  5992  166B  1303               	bcf	3,6	;RP1=0, select bank1
  5993  166C  00B8               	movwf	(?_log+3)^(0+128)
  5994  166D  1283               	bcf	3,5	;RP0=0, select bank0
  5995  166E  1303               	bcf	3,6	;RP1=0, select bank0
  5996  166F  0835               	movf	?___fladd+2,w
  5997  1670  1683               	bsf	3,5	;RP0=1, select bank1
  5998  1671  1303               	bcf	3,6	;RP1=0, select bank1
  5999  1672  00B7               	movwf	(?_log+2)^(0+128)
  6000  1673  1283               	bcf	3,5	;RP0=0, select bank0
  6001  1674  1303               	bcf	3,6	;RP1=0, select bank0
  6002  1675  0834               	movf	?___fladd+1,w
  6003  1676  1683               	bsf	3,5	;RP0=1, select bank1
  6004  1677  1303               	bcf	3,6	;RP1=0, select bank1
  6005  1678  00B6               	movwf	(?_log+1)^(0+128)
  6006  1679  1283               	bcf	3,5	;RP0=0, select bank0
  6007  167A  1303               	bcf	3,6	;RP1=0, select bank0
  6008  167B  0833               	movf	?___fladd,w
  6009  167C  1683               	bsf	3,5	;RP0=1, select bank1
  6010  167D  1303               	bcf	3,6	;RP1=0, select bank1
  6011  167E  00B5               	movwf	?_log^(0+128)
  6012  167F                     l874:
  6013  167F  0008               	return
  6014  1680                     __end_of_log:
  6015                           
  6016                           	psect	text22
  6017  1F1C                     __ptext22:	
  6018 ;; *************** function _frexp *****************
  6019 ;; Defined at:
  6020 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\frexp.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  value           4   12[BANK0 ] int 
  6023 ;;  eptr            1   16[BANK0 ] PTR int 
  6024 ;;		 -> log@exponent(2), 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;		None
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  4   12[BANK0 ] PTR int 
  6029 ;; Registers used:
  6030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6036 ;;      Params:         0       5       0       0       0
  6037 ;;      Locals:         0       0       0       0       0
  6038 ;;      Temps:          0       2       0       0       0
  6039 ;;      Totals:         0       7       0       0       0
  6040 ;;Total ram usage:        7 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    2
  6043 ;; This function calls:
  6044 ;;		___fleq
  6045 ;; This function is called by:
  6046 ;;		_log
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           
  6051                           ;psect for function _frexp
  6052  1F1C                     _frexp:
  6053  1F1C                     l3566:	
  6054                           ;incstack = 0
  6055                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6056                           
  6057  1F1C  1283               	bcf	3,5	;RP0=0, select bank0
  6058  1F1D  1303               	bcf	3,6	;RP1=0, select bank0
  6059  1F1E  082F               	movf	frexp@value+3,w
  6060  1F1F  00A3               	movwf	___fleq@ff1+3
  6061  1F20  082E               	movf	frexp@value+2,w
  6062  1F21  00A2               	movwf	___fleq@ff1+2
  6063  1F22  082D               	movf	frexp@value+1,w
  6064  1F23  00A1               	movwf	___fleq@ff1+1
  6065  1F24  082C               	movf	frexp@value,w
  6066  1F25  00A0               	movwf	___fleq@ff1
  6067  1F26  3000               	movlw	0
  6068  1F27  00A7               	movwf	___fleq@ff2+3
  6069  1F28  3000               	movlw	0
  6070  1F29  00A6               	movwf	___fleq@ff2+2
  6071  1F2A  3000               	movlw	0
  6072  1F2B  00A5               	movwf	___fleq@ff2+1
  6073  1F2C  3000               	movlw	0
  6074  1F2D  00A4               	movwf	___fleq@ff2
  6075  1F2E  160A  158A  26CC  160A  158A  	fcall	___fleq
  6076  1F33  1C03               	btfss	3,0
  6077  1F34  2F36               	goto	u4731
  6078  1F35  2F37               	goto	u4730
  6079  1F36                     u4731:
  6080  1F36  2F48               	goto	l3574
  6081  1F37                     u4730:
  6082  1F37                     l3568:
  6083  1F37  1283               	bcf	3,5	;RP0=0, select bank0
  6084  1F38  1303               	bcf	3,6	;RP1=0, select bank0
  6085  1F39  0830               	movf	frexp@eptr,w
  6086  1F3A  0084               	movwf	4
  6087  1F3B  1383               	bcf	3,7	;select IRP bank0
  6088  1F3C  0180               	clrf	0
  6089  1F3D  0A84               	incf	4,f
  6090  1F3E  0180               	clrf	0
  6091  1F3F                     l3570:
  6092  1F3F  3000               	movlw	0
  6093  1F40  00AF               	movwf	?_frexp+3
  6094  1F41  3000               	movlw	0
  6095  1F42  00AE               	movwf	?_frexp+2
  6096  1F43  3000               	movlw	0
  6097  1F44  00AD               	movwf	?_frexp+1
  6098  1F45  3000               	movlw	0
  6099  1F46  00AC               	movwf	?_frexp
  6100  1F47  2F77               	goto	l892
  6101  1F48                     l3574:
  6102  1F48  1283               	bcf	3,5	;RP0=0, select bank0
  6103  1F49  1303               	bcf	3,6	;RP1=0, select bank0
  6104  1F4A  082F               	movf	frexp@value+3,w
  6105  1F4B  397F               	andlw	127
  6106  1F4C  00B1               	movwf	??_frexp
  6107  1F4D  01B2               	clrf	??_frexp+1
  6108  1F4E  1003               	clrc
  6109  1F4F  0DB1               	rlf	??_frexp,f
  6110  1F50  0DB2               	rlf	??_frexp+1,f
  6111  1F51  0830               	movf	frexp@eptr,w
  6112  1F52  0084               	movwf	4
  6113  1F53  0831               	movf	??_frexp,w
  6114  1F54  1383               	bcf	3,7	;select IRP bank0
  6115  1F55  0080               	movwf	0
  6116  1F56  0A84               	incf	4,f
  6117  1F57  0832               	movf	??_frexp+1,w
  6118  1F58  0080               	movwf	0
  6119  1F59  0D2E               	rlf	frexp@value+2,w
  6120  1F5A  0D2E               	rlf	frexp@value+2,w
  6121  1F5B  3901               	andlw	1
  6122  1F5C  00B1               	movwf	??_frexp
  6123  1F5D  01B2               	clrf	??_frexp+1
  6124  1F5E  0830               	movf	frexp@eptr,w
  6125  1F5F  0084               	movwf	4
  6126  1F60  0831               	movf	??_frexp,w
  6127  1F61  0480               	iorwf	0,f
  6128  1F62  0A84               	incf	4,f
  6129  1F63  0832               	movf	??_frexp+1,w
  6130  1F64  0480               	iorwf	0,f
  6131  1F65                     l3576:
  6132  1F65  0830               	movf	frexp@eptr,w
  6133  1F66  0084               	movwf	4
  6134  1F67  3082               	movlw	130
  6135  1F68  0780               	addwf	0,f
  6136  1F69  0F84               	incfsz	4,f
  6137  1F6A  0800               	movf	0,w
  6138  1F6B  1803               	skipnc
  6139  1F6C  0A00               	incf	0,w
  6140  1F6D  00FF               	movwf	btemp+1
  6141  1F6E  30FF               	movlw	255
  6142  1F6F  077F               	addwf	btemp+1,w
  6143  1F70  0080               	movwf	0
  6144  1F71  0384               	decf	4,f
  6145  1F72                     l3578:
  6146  1F72  082F               	movf	frexp@value+3,w
  6147  1F73  3980               	andlw	-128
  6148  1F74  383F               	iorlw	63
  6149  1F75  00AF               	movwf	frexp@value+3
  6150  1F76                     l3580:
  6151  1F76  13AE               	bcf	frexp@value+2,7
  6152  1F77                     l3582:
  6153  1F77                     l892:
  6154  1F77  0008               	return
  6155  1F78                     __end_of_frexp:
  6156                           
  6157                           	psect	text23
  6158  1ECC                     __ptext23:	
  6159 ;; *************** function ___fleq *****************
  6160 ;; Defined at:
  6161 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  ff1             4    0[BANK0 ] PTR int 
  6164 ;;  ff2             4    4[BANK0 ] PTR int 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;		None               void
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6176 ;;      Params:         0       8       0       0       0
  6177 ;;      Locals:         0       0       0       0       0
  6178 ;;      Temps:          0       4       0       0       0
  6179 ;;      Totals:         0      12       0       0       0
  6180 ;;Total ram usage:       12 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    1
  6183 ;; This function calls:
  6184 ;;		Nothing
  6185 ;; This function is called by:
  6186 ;;		_log
  6187 ;;		_frexp
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           
  6192                           ;psect for function ___fleq
  6193  1ECC                     ___fleq:
  6194  1ECC                     l2224:	
  6195                           ;incstack = 0
  6196                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6197                           
  6198  1ECC  3000               	movlw	0
  6199  1ECD  1283               	bcf	3,5	;RP0=0, select bank0
  6200  1ECE  1303               	bcf	3,6	;RP1=0, select bank0
  6201  1ECF  0520               	andwf	___fleq@ff1,w
  6202  1ED0  00A8               	movwf	??___fleq
  6203  1ED1  3000               	movlw	0
  6204  1ED2  0521               	andwf	___fleq@ff1+1,w
  6205  1ED3  00A9               	movwf	??___fleq+1
  6206  1ED4  3080               	movlw	128
  6207  1ED5  0522               	andwf	___fleq@ff1+2,w
  6208  1ED6  00AA               	movwf	??___fleq+2
  6209  1ED7  307F               	movlw	127
  6210  1ED8  0523               	andwf	___fleq@ff1+3,w
  6211  1ED9  00AB               	movwf	??___fleq+3
  6212  1EDA  082B               	movf	??___fleq+3,w
  6213  1EDB  042A               	iorwf	??___fleq+2,w
  6214  1EDC  0429               	iorwf	??___fleq+1,w
  6215  1EDD  0428               	iorwf	??___fleq,w
  6216  1EDE  1D03               	skipz
  6217  1EDF  2EE1               	goto	u2211
  6218  1EE0  2EE2               	goto	u2210
  6219  1EE1                     u2211:
  6220  1EE1  2EEA               	goto	l578
  6221  1EE2                     u2210:
  6222  1EE2                     l2226:
  6223  1EE2  3000               	movlw	0
  6224  1EE3  00A3               	movwf	___fleq@ff1+3
  6225  1EE4  3000               	movlw	0
  6226  1EE5  00A2               	movwf	___fleq@ff1+2
  6227  1EE6  3000               	movlw	0
  6228  1EE7  00A1               	movwf	___fleq@ff1+1
  6229  1EE8  3000               	movlw	0
  6230  1EE9  00A0               	movwf	___fleq@ff1
  6231  1EEA                     l578:
  6232  1EEA  3000               	movlw	0
  6233  1EEB  0524               	andwf	___fleq@ff2,w
  6234  1EEC  00A8               	movwf	??___fleq
  6235  1EED  3000               	movlw	0
  6236  1EEE  0525               	andwf	___fleq@ff2+1,w
  6237  1EEF  00A9               	movwf	??___fleq+1
  6238  1EF0  3080               	movlw	128
  6239  1EF1  0526               	andwf	___fleq@ff2+2,w
  6240  1EF2  00AA               	movwf	??___fleq+2
  6241  1EF3  307F               	movlw	127
  6242  1EF4  0527               	andwf	___fleq@ff2+3,w
  6243  1EF5  00AB               	movwf	??___fleq+3
  6244  1EF6  082B               	movf	??___fleq+3,w
  6245  1EF7  042A               	iorwf	??___fleq+2,w
  6246  1EF8  0429               	iorwf	??___fleq+1,w
  6247  1EF9  0428               	iorwf	??___fleq,w
  6248  1EFA  1D03               	skipz
  6249  1EFB  2EFD               	goto	u2221
  6250  1EFC  2EFE               	goto	u2220
  6251  1EFD                     u2221:
  6252  1EFD  2F06               	goto	l579
  6253  1EFE                     u2220:
  6254  1EFE                     l2228:
  6255  1EFE  3000               	movlw	0
  6256  1EFF  00A7               	movwf	___fleq@ff2+3
  6257  1F00  3000               	movlw	0
  6258  1F01  00A6               	movwf	___fleq@ff2+2
  6259  1F02  3000               	movlw	0
  6260  1F03  00A5               	movwf	___fleq@ff2+1
  6261  1F04  3000               	movlw	0
  6262  1F05  00A4               	movwf	___fleq@ff2
  6263  1F06                     l579:
  6264  1F06  0827               	movf	___fleq@ff2+3,w
  6265  1F07  0623               	xorwf	___fleq@ff1+3,w
  6266  1F08  1D03               	skipz
  6267  1F09  2F14               	goto	u2235
  6268  1F0A  0826               	movf	___fleq@ff2+2,w
  6269  1F0B  0622               	xorwf	___fleq@ff1+2,w
  6270  1F0C  1D03               	skipz
  6271  1F0D  2F14               	goto	u2235
  6272  1F0E  0825               	movf	___fleq@ff2+1,w
  6273  1F0F  0621               	xorwf	___fleq@ff1+1,w
  6274  1F10  1D03               	skipz
  6275  1F11  2F14               	goto	u2235
  6276  1F12  0824               	movf	___fleq@ff2,w
  6277  1F13  0620               	xorwf	___fleq@ff1,w
  6278  1F14                     u2235:
  6279  1F14  1903               	skipnz
  6280  1F15  2F17               	goto	u2231
  6281  1F16  2F18               	goto	u2230
  6282  1F17                     u2231:
  6283  1F17  2F1A               	goto	l2232
  6284  1F18                     u2230:
  6285  1F18                     l2230:
  6286  1F18  1003               	clrc
  6287  1F19  2F1B               	goto	l580
  6288  1F1A                     l2232:
  6289  1F1A  1403               	setc
  6290  1F1B                     l580:
  6291  1F1B  0008               	return
  6292  1F1C                     __end_of___fleq:
  6293                           
  6294                           	psect	text24
  6295  12E7                     __ptext24:	
  6296 ;; *************** function _eval_poly *****************
  6297 ;; Defined at:
  6298 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\evalpoly.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  x               4    0[BANK1 ] PTR int 
  6301 ;;  d               1    4[BANK1 ] PTR const 
  6302 ;;		 -> log@coeff(36), 
  6303 ;;  n               2    5[BANK1 ] int 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  res             4    7[BANK1 ] int 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  4    0[BANK1 ] int 
  6308 ;; Registers used:
  6309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6315 ;;      Params:         0       0       7       0       0
  6316 ;;      Locals:         0       0       4       0       0
  6317 ;;      Temps:          0       5       0       0       0
  6318 ;;      Totals:         0       5      11       0       0
  6319 ;;Total ram usage:       16 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:    3
  6322 ;; This function calls:
  6323 ;;		___fladd
  6324 ;;		___flmul
  6325 ;; This function is called by:
  6326 ;;		_log
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           
  6331                           ;psect for function _eval_poly
  6332  12E7                     _eval_poly:
  6333  12E7                     l3586:	
  6334                           ;incstack = 0
  6335                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6336                           
  6337  12E7  1683               	bsf	3,5	;RP0=1, select bank1
  6338  12E8  1303               	bcf	3,6	;RP1=0, select bank1
  6339  12E9  0825               	movf	eval_poly@n^(0+128),w
  6340  12EA  1283               	bcf	3,5	;RP0=0, select bank0
  6341  12EB  1303               	bcf	3,6	;RP1=0, select bank0
  6342  12EC  00E9               	movwf	??_eval_poly
  6343  12ED  3001               	movlw	1
  6344  12EE                     u4745:
  6345  12EE  1003               	clrc
  6346  12EF  0DE9               	rlf	??_eval_poly,f
  6347  12F0  3EFF               	addlw	-1
  6348  12F1  1D03               	skipz
  6349  12F2  2AEE               	goto	u4745
  6350  12F3  1003               	clrc
  6351  12F4  0D69               	rlf	??_eval_poly,w
  6352  12F5  1683               	bsf	3,5	;RP0=1, select bank1
  6353  12F6  1303               	bcf	3,6	;RP1=0, select bank1
  6354  12F7  0724               	addwf	eval_poly@d^(0+128),w
  6355  12F8  0084               	movwf	4
  6356  12F9  160A  118A  200A  160A  118A  	fcall	stringdir
  6357  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  6358  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  6359  1300  00EA               	movwf	??_eval_poly+1
  6360  1301  160A  118A  200A  160A  118A  	fcall	stringdir
  6361  1306  00EB               	movwf	??_eval_poly+2
  6362  1307  160A  118A  200A  160A  118A  	fcall	stringdir
  6363  130C  00EC               	movwf	??_eval_poly+3
  6364  130D  160A  118A  200A  160A  118A  	fcall	stringdir
  6365  1312  00ED               	movwf	??_eval_poly+4
  6366  1313  086D               	movf	??_eval_poly+4,w
  6367  1314  1683               	bsf	3,5	;RP0=1, select bank1
  6368  1315  1303               	bcf	3,6	;RP1=0, select bank1
  6369  1316  00AA               	movwf	(eval_poly@res+3)^(0+128)
  6370  1317  1283               	bcf	3,5	;RP0=0, select bank0
  6371  1318  1303               	bcf	3,6	;RP1=0, select bank0
  6372  1319  086C               	movf	??_eval_poly+3,w
  6373  131A  1683               	bsf	3,5	;RP0=1, select bank1
  6374  131B  1303               	bcf	3,6	;RP1=0, select bank1
  6375  131C  00A9               	movwf	(eval_poly@res+2)^(0+128)
  6376  131D  1283               	bcf	3,5	;RP0=0, select bank0
  6377  131E  1303               	bcf	3,6	;RP1=0, select bank0
  6378  131F  086B               	movf	??_eval_poly+2,w
  6379  1320  1683               	bsf	3,5	;RP0=1, select bank1
  6380  1321  1303               	bcf	3,6	;RP1=0, select bank1
  6381  1322  00A8               	movwf	(eval_poly@res+1)^(0+128)
  6382  1323  1283               	bcf	3,5	;RP0=0, select bank0
  6383  1324  1303               	bcf	3,6	;RP1=0, select bank0
  6384  1325  086A               	movf	??_eval_poly+1,w
  6385  1326  1683               	bsf	3,5	;RP0=1, select bank1
  6386  1327  1303               	bcf	3,6	;RP1=0, select bank1
  6387  1328  00A7               	movwf	eval_poly@res^(0+128)
  6388  1329  2BBE               	goto	l3590
  6389  132A                     l3588:
  6390  132A  30FF               	movlw	255
  6391  132B  07A5               	addwf	eval_poly@n^(0+128),f
  6392  132C  1803               	skipnc
  6393  132D  0AA6               	incf	(eval_poly@n+1)^(0+128),f
  6394  132E  30FF               	movlw	255
  6395  132F  07A6               	addwf	(eval_poly@n+1)^(0+128),f
  6396  1330  0825               	movf	eval_poly@n^(0+128),w
  6397  1331  1283               	bcf	3,5	;RP0=0, select bank0
  6398  1332  1303               	bcf	3,6	;RP1=0, select bank0
  6399  1333  00E9               	movwf	??_eval_poly
  6400  1334  3001               	movlw	1
  6401  1335                     u4755:
  6402  1335  1003               	clrc
  6403  1336  0DE9               	rlf	??_eval_poly,f
  6404  1337  3EFF               	addlw	-1
  6405  1338  1D03               	skipz
  6406  1339  2B35               	goto	u4755
  6407  133A  1003               	clrc
  6408  133B  0D69               	rlf	??_eval_poly,w
  6409  133C  1683               	bsf	3,5	;RP0=1, select bank1
  6410  133D  1303               	bcf	3,6	;RP1=0, select bank1
  6411  133E  0724               	addwf	eval_poly@d^(0+128),w
  6412  133F  0084               	movwf	4
  6413  1340  160A  118A  200A  160A  118A  	fcall	stringdir
  6414  1345  1283               	bcf	3,5	;RP0=0, select bank0
  6415  1346  1303               	bcf	3,6	;RP1=0, select bank0
  6416  1347  00EA               	movwf	??_eval_poly+1
  6417  1348  160A  118A  200A  160A  118A  	fcall	stringdir
  6418  134D  00EB               	movwf	??_eval_poly+2
  6419  134E  160A  118A  200A  160A  118A  	fcall	stringdir
  6420  1353  00EC               	movwf	??_eval_poly+3
  6421  1354  160A  118A  200A  160A  118A  	fcall	stringdir
  6422  1359  00ED               	movwf	??_eval_poly+4
  6423  135A  086D               	movf	??_eval_poly+4,w
  6424  135B  00B6               	movwf	___fladd@b+3
  6425  135C  086C               	movf	??_eval_poly+3,w
  6426  135D  00B5               	movwf	___fladd@b+2
  6427  135E  086B               	movf	??_eval_poly+2,w
  6428  135F  00B4               	movwf	___fladd@b+1
  6429  1360  086A               	movf	??_eval_poly+1,w
  6430  1361  00B3               	movwf	___fladd@b
  6431  1362  1683               	bsf	3,5	;RP0=1, select bank1
  6432  1363  1303               	bcf	3,6	;RP1=0, select bank1
  6433  1364  082A               	movf	(eval_poly@res+3)^(0+128),w
  6434  1365  1283               	bcf	3,5	;RP0=0, select bank0
  6435  1366  1303               	bcf	3,6	;RP1=0, select bank0
  6436  1367  00D2               	movwf	___flmul@b+3
  6437  1368  1683               	bsf	3,5	;RP0=1, select bank1
  6438  1369  1303               	bcf	3,6	;RP1=0, select bank1
  6439  136A  0829               	movf	(eval_poly@res+2)^(0+128),w
  6440  136B  1283               	bcf	3,5	;RP0=0, select bank0
  6441  136C  1303               	bcf	3,6	;RP1=0, select bank0
  6442  136D  00D1               	movwf	___flmul@b+2
  6443  136E  1683               	bsf	3,5	;RP0=1, select bank1
  6444  136F  1303               	bcf	3,6	;RP1=0, select bank1
  6445  1370  0828               	movf	(eval_poly@res+1)^(0+128),w
  6446  1371  1283               	bcf	3,5	;RP0=0, select bank0
  6447  1372  1303               	bcf	3,6	;RP1=0, select bank0
  6448  1373  00D0               	movwf	___flmul@b+1
  6449  1374  1683               	bsf	3,5	;RP0=1, select bank1
  6450  1375  1303               	bcf	3,6	;RP1=0, select bank1
  6451  1376  0827               	movf	eval_poly@res^(0+128),w
  6452  1377  1283               	bcf	3,5	;RP0=0, select bank0
  6453  1378  1303               	bcf	3,6	;RP1=0, select bank0
  6454  1379  00CF               	movwf	___flmul@b
  6455  137A  1683               	bsf	3,5	;RP0=1, select bank1
  6456  137B  1303               	bcf	3,6	;RP1=0, select bank1
  6457  137C  0823               	movf	(eval_poly@x+3)^(0+128),w
  6458  137D  1283               	bcf	3,5	;RP0=0, select bank0
  6459  137E  1303               	bcf	3,6	;RP1=0, select bank0
  6460  137F  00D6               	movwf	___flmul@a+3
  6461  1380  1683               	bsf	3,5	;RP0=1, select bank1
  6462  1381  1303               	bcf	3,6	;RP1=0, select bank1
  6463  1382  0822               	movf	(eval_poly@x+2)^(0+128),w
  6464  1383  1283               	bcf	3,5	;RP0=0, select bank0
  6465  1384  1303               	bcf	3,6	;RP1=0, select bank0
  6466  1385  00D5               	movwf	___flmul@a+2
  6467  1386  1683               	bsf	3,5	;RP0=1, select bank1
  6468  1387  1303               	bcf	3,6	;RP1=0, select bank1
  6469  1388  0821               	movf	(eval_poly@x+1)^(0+128),w
  6470  1389  1283               	bcf	3,5	;RP0=0, select bank0
  6471  138A  1303               	bcf	3,6	;RP1=0, select bank0
  6472  138B  00D4               	movwf	___flmul@a+1
  6473  138C  1683               	bsf	3,5	;RP0=1, select bank1
  6474  138D  1303               	bcf	3,6	;RP1=0, select bank1
  6475  138E  0820               	movf	eval_poly@x^(0+128),w
  6476  138F  1283               	bcf	3,5	;RP0=0, select bank0
  6477  1390  1303               	bcf	3,6	;RP1=0, select bank0
  6478  1391  00D3               	movwf	___flmul@a
  6479  1392  120A  118A  245A  160A  118A  	fcall	___flmul
  6480  1397  1283               	bcf	3,5	;RP0=0, select bank0
  6481  1398  1303               	bcf	3,6	;RP1=0, select bank0
  6482  1399  0852               	movf	?___flmul+3,w
  6483  139A  00BA               	movwf	___fladd@a+3
  6484  139B  0851               	movf	?___flmul+2,w
  6485  139C  00B9               	movwf	___fladd@a+2
  6486  139D  0850               	movf	?___flmul+1,w
  6487  139E  00B8               	movwf	___fladd@a+1
  6488  139F  084F               	movf	?___flmul,w
  6489  13A0  00B7               	movwf	___fladd@a
  6490  13A1  120A  158A  22E2  160A  118A  	fcall	___fladd
  6491  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  6492  13A7  1303               	bcf	3,6	;RP1=0, select bank0
  6493  13A8  0836               	movf	?___fladd+3,w
  6494  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  6495  13AA  1303               	bcf	3,6	;RP1=0, select bank1
  6496  13AB  00AA               	movwf	(eval_poly@res+3)^(0+128)
  6497  13AC  1283               	bcf	3,5	;RP0=0, select bank0
  6498  13AD  1303               	bcf	3,6	;RP1=0, select bank0
  6499  13AE  0835               	movf	?___fladd+2,w
  6500  13AF  1683               	bsf	3,5	;RP0=1, select bank1
  6501  13B0  1303               	bcf	3,6	;RP1=0, select bank1
  6502  13B1  00A9               	movwf	(eval_poly@res+2)^(0+128)
  6503  13B2  1283               	bcf	3,5	;RP0=0, select bank0
  6504  13B3  1303               	bcf	3,6	;RP1=0, select bank0
  6505  13B4  0834               	movf	?___fladd+1,w
  6506  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  6507  13B6  1303               	bcf	3,6	;RP1=0, select bank1
  6508  13B7  00A8               	movwf	(eval_poly@res+1)^(0+128)
  6509  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  6510  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  6511  13BA  0833               	movf	?___fladd,w
  6512  13BB  1683               	bsf	3,5	;RP0=1, select bank1
  6513  13BC  1303               	bcf	3,6	;RP1=0, select bank1
  6514  13BD  00A7               	movwf	eval_poly@res^(0+128)
  6515  13BE                     l3590:
  6516  13BE  0825               	movf	eval_poly@n^(0+128),w
  6517  13BF  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  6518  13C0  1D03               	btfss	3,2
  6519  13C1  2BC3               	goto	u4761
  6520  13C2  2BC4               	goto	u4760
  6521  13C3                     u4761:
  6522  13C3  2B2A               	goto	l3588
  6523  13C4                     u4760:
  6524  13C4                     l3592:
  6525  13C4  082A               	movf	(eval_poly@res+3)^(0+128),w
  6526  13C5  00A3               	movwf	(?_eval_poly+3)^(0+128)
  6527  13C6  0829               	movf	(eval_poly@res+2)^(0+128),w
  6528  13C7  00A2               	movwf	(?_eval_poly+2)^(0+128)
  6529  13C8  0828               	movf	(eval_poly@res+1)^(0+128),w
  6530  13C9  00A1               	movwf	(?_eval_poly+1)^(0+128)
  6531  13CA  0827               	movf	eval_poly@res^(0+128),w
  6532  13CB  00A0               	movwf	?_eval_poly^(0+128)
  6533  13CC                     l886:
  6534  13CC  0008               	return
  6535  13CD                     __end_of_eval_poly:
  6536                           
  6537                           	psect	text25
  6538  045A                     __ptext25:	
  6539 ;; *************** function ___flmul *****************
  6540 ;; Defined at:
  6541 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcmul.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  b               4   47[BANK0 ] int 
  6544 ;;  a               4   51[BANK0 ] int 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  prod            4   67[BANK0 ] struct .
  6547 ;;  grs             4   62[BANK0 ] unsigned long 
  6548 ;;  temp            2   71[BANK0 ] struct .
  6549 ;;  bexp            1   66[BANK0 ] unsigned char 
  6550 ;;  aexp            1   61[BANK0 ] unsigned char 
  6551 ;;  sign            1   60[BANK0 ] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  4   47[BANK0 ] unsigned char 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6561 ;;      Params:         0       8       0       0       0
  6562 ;;      Locals:         0      13       0       0       0
  6563 ;;      Temps:          0       5       0       0       0
  6564 ;;      Totals:         0      26       0       0       0
  6565 ;;Total ram usage:       26 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:    2
  6568 ;; This function calls:
  6569 ;;		__Umul8_16
  6570 ;; This function is called by:
  6571 ;;		_map
  6572 ;;		_GetTemp
  6573 ;;		_log
  6574 ;;		_eval_poly
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           
  6579                           ;psect for function ___flmul
  6580  045A                     ___flmul:
  6581  045A                     l3420:	
  6582                           ;incstack = 0
  6583                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6584                           
  6585  045A  1283               	bcf	3,5	;RP0=0, select bank0
  6586  045B  1303               	bcf	3,6	;RP1=0, select bank0
  6587  045C  0852               	movf	___flmul@b+3,w
  6588  045D  3980               	andlw	128
  6589  045E  00D7               	movwf	??___flmul
  6590  045F  0857               	movf	??___flmul,w
  6591  0460  00DC               	movwf	___flmul@sign
  6592  0461                     l3422:
  6593  0461  0852               	movf	___flmul@b+3,w
  6594  0462  00D7               	movwf	??___flmul
  6595  0463  0757               	addwf	??___flmul,w
  6596  0464  00D8               	movwf	??___flmul+1
  6597  0465  0858               	movf	??___flmul+1,w
  6598  0466  00E2               	movwf	___flmul@bexp
  6599  0467                     l3424:
  6600  0467  1FD1               	btfss	___flmul@b+2,7
  6601  0468  2C6A               	goto	u4361
  6602  0469  2C6B               	goto	u4360
  6603  046A                     u4361:
  6604  046A  2C6C               	goto	l3428
  6605  046B                     u4360:
  6606  046B                     l3426:
  6607  046B  1462               	bsf	___flmul@bexp,0
  6608  046C                     l3428:
  6609  046C  0862               	movf	___flmul@bexp,w
  6610  046D  1903               	btfsc	3,2
  6611  046E  2C70               	goto	u4371
  6612  046F  2C71               	goto	u4370
  6613  0470                     u4371:
  6614  0470  2C80               	goto	l3436
  6615  0471                     u4370:
  6616  0471                     l3430:
  6617  0471  0A62               	incf	___flmul@bexp,w
  6618  0472  1D03               	btfss	3,2
  6619  0473  2C75               	goto	u4381
  6620  0474  2C76               	goto	u4380
  6621  0475                     u4381:
  6622  0475  2C7E               	goto	l3434
  6623  0476                     u4380:
  6624  0476                     l3432:
  6625  0476  3000               	movlw	0
  6626  0477  00D2               	movwf	___flmul@b+3
  6627  0478  3000               	movlw	0
  6628  0479  00D1               	movwf	___flmul@b+2
  6629  047A  3000               	movlw	0
  6630  047B  00D0               	movwf	___flmul@b+1
  6631  047C  3000               	movlw	0
  6632  047D  00CF               	movwf	___flmul@b
  6633  047E                     l3434:
  6634  047E  17D1               	bsf	___flmul@b+2,7
  6635  047F  2C88               	goto	l3438
  6636  0480                     l3436:
  6637  0480  3000               	movlw	0
  6638  0481  00D2               	movwf	___flmul@b+3
  6639  0482  3000               	movlw	0
  6640  0483  00D1               	movwf	___flmul@b+2
  6641  0484  3000               	movlw	0
  6642  0485  00D0               	movwf	___flmul@b+1
  6643  0486  3000               	movlw	0
  6644  0487  00CF               	movwf	___flmul@b
  6645  0488                     l3438:
  6646  0488  0856               	movf	___flmul@a+3,w
  6647  0489  3980               	andlw	128
  6648  048A  00D7               	movwf	??___flmul
  6649  048B  0857               	movf	??___flmul,w
  6650  048C  06DC               	xorwf	___flmul@sign,f
  6651  048D                     l3440:
  6652  048D  0856               	movf	___flmul@a+3,w
  6653  048E  00D7               	movwf	??___flmul
  6654  048F  0757               	addwf	??___flmul,w
  6655  0490  00D8               	movwf	??___flmul+1
  6656  0491  0858               	movf	??___flmul+1,w
  6657  0492  00DD               	movwf	___flmul@aexp
  6658  0493                     l3442:
  6659  0493  1FD5               	btfss	___flmul@a+2,7
  6660  0494  2C96               	goto	u4391
  6661  0495  2C97               	goto	u4390
  6662  0496                     u4391:
  6663  0496  2C98               	goto	l3446
  6664  0497                     u4390:
  6665  0497                     l3444:
  6666  0497  145D               	bsf	___flmul@aexp,0
  6667  0498                     l3446:
  6668  0498  085D               	movf	___flmul@aexp,w
  6669  0499  1903               	btfsc	3,2
  6670  049A  2C9C               	goto	u4401
  6671  049B  2C9D               	goto	u4400
  6672  049C                     u4401:
  6673  049C  2CAC               	goto	l3454
  6674  049D                     u4400:
  6675  049D                     l3448:
  6676  049D  0A5D               	incf	___flmul@aexp,w
  6677  049E  1D03               	btfss	3,2
  6678  049F  2CA1               	goto	u4411
  6679  04A0  2CA2               	goto	u4410
  6680  04A1                     u4411:
  6681  04A1  2CAA               	goto	l3452
  6682  04A2                     u4410:
  6683  04A2                     l3450:
  6684  04A2  3000               	movlw	0
  6685  04A3  00D6               	movwf	___flmul@a+3
  6686  04A4  3000               	movlw	0
  6687  04A5  00D5               	movwf	___flmul@a+2
  6688  04A6  3000               	movlw	0
  6689  04A7  00D4               	movwf	___flmul@a+1
  6690  04A8  3000               	movlw	0
  6691  04A9  00D3               	movwf	___flmul@a
  6692  04AA                     l3452:
  6693  04AA  17D5               	bsf	___flmul@a+2,7
  6694  04AB  2CB4               	goto	l3456
  6695  04AC                     l3454:
  6696  04AC  3000               	movlw	0
  6697  04AD  00D6               	movwf	___flmul@a+3
  6698  04AE  3000               	movlw	0
  6699  04AF  00D5               	movwf	___flmul@a+2
  6700  04B0  3000               	movlw	0
  6701  04B1  00D4               	movwf	___flmul@a+1
  6702  04B2  3000               	movlw	0
  6703  04B3  00D3               	movwf	___flmul@a
  6704  04B4                     l3456:
  6705  04B4  085D               	movf	___flmul@aexp,w
  6706  04B5  1903               	btfsc	3,2
  6707  04B6  2CB8               	goto	u4421
  6708  04B7  2CB9               	goto	u4420
  6709  04B8                     u4421:
  6710  04B8  2CBE               	goto	l3460
  6711  04B9                     u4420:
  6712  04B9                     l3458:
  6713  04B9  0862               	movf	___flmul@bexp,w
  6714  04BA  1D03               	btfss	3,2
  6715  04BB  2CBD               	goto	u4431
  6716  04BC  2CBE               	goto	u4430
  6717  04BD                     u4431:
  6718  04BD  2CC7               	goto	l3464
  6719  04BE                     u4430:
  6720  04BE                     l3460:
  6721  04BE  3000               	movlw	0
  6722  04BF  00D2               	movwf	?___flmul+3
  6723  04C0  3000               	movlw	0
  6724  04C1  00D1               	movwf	?___flmul+2
  6725  04C2  3000               	movlw	0
  6726  04C3  00D0               	movwf	?___flmul+1
  6727  04C4  3000               	movlw	0
  6728  04C5  00CF               	movwf	?___flmul
  6729  04C6  2FBA               	goto	l798
  6730  04C7                     l3464:
  6731  04C7  084F               	movf	___flmul@b,w
  6732  04C8  00D7               	movwf	??___flmul
  6733  04C9  0857               	movf	??___flmul,w
  6734  04CA  00A0               	movwf	__Umul8_16@multiplicand
  6735  04CB  0855               	movf	___flmul@a+2,w
  6736  04CC  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  6737  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  6738  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  6739  04D3  0821               	movf	?__Umul8_16+1,w
  6740  04D4  00E8               	movwf	___flmul@temp+1
  6741  04D5  0820               	movf	?__Umul8_16,w
  6742  04D6  00E7               	movwf	___flmul@temp
  6743  04D7                     l3466:
  6744  04D7  0867               	movf	___flmul@temp,w
  6745  04D8  00D7               	movwf	??___flmul
  6746  04D9  01D8               	clrf	??___flmul+1
  6747  04DA  01D9               	clrf	??___flmul+2
  6748  04DB  01DA               	clrf	??___flmul+3
  6749  04DC  085A               	movf	??___flmul+3,w
  6750  04DD  00E1               	movwf	___flmul@grs+3
  6751  04DE  0859               	movf	??___flmul+2,w
  6752  04DF  00E0               	movwf	___flmul@grs+2
  6753  04E0  0858               	movf	??___flmul+1,w
  6754  04E1  00DF               	movwf	___flmul@grs+1
  6755  04E2  0857               	movf	??___flmul,w
  6756  04E3  00DE               	movwf	___flmul@grs
  6757  04E4                     l3468:
  6758  04E4  0868               	movf	___flmul@temp+1,w
  6759  04E5  00D7               	movwf	??___flmul
  6760  04E6  01D8               	clrf	??___flmul+1
  6761  04E7  01D9               	clrf	??___flmul+2
  6762  04E8  01DA               	clrf	??___flmul+3
  6763  04E9  085A               	movf	??___flmul+3,w
  6764  04EA  00E6               	movwf	___flmul@prod+3
  6765  04EB  0859               	movf	??___flmul+2,w
  6766  04EC  00E5               	movwf	___flmul@prod+2
  6767  04ED  0858               	movf	??___flmul+1,w
  6768  04EE  00E4               	movwf	___flmul@prod+1
  6769  04EF  0857               	movf	??___flmul,w
  6770  04F0  00E3               	movwf	___flmul@prod
  6771  04F1  0850               	movf	___flmul@b+1,w
  6772  04F2  00D7               	movwf	??___flmul
  6773  04F3  0857               	movf	??___flmul,w
  6774  04F4  00A0               	movwf	__Umul8_16@multiplicand
  6775  04F5  0854               	movf	___flmul@a+1,w
  6776  04F6  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  6777  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  6778  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  6779  04FD  0821               	movf	?__Umul8_16+1,w
  6780  04FE  00E8               	movwf	___flmul@temp+1
  6781  04FF  0820               	movf	?__Umul8_16,w
  6782  0500  00E7               	movwf	___flmul@temp
  6783  0501                     l3470:
  6784  0501  0867               	movf	___flmul@temp,w
  6785  0502  00D7               	movwf	??___flmul
  6786  0503  01D8               	clrf	??___flmul+1
  6787  0504  01D9               	clrf	??___flmul+2
  6788  0505  01DA               	clrf	??___flmul+3
  6789  0506  0857               	movf	??___flmul,w
  6790  0507  07DE               	addwf	___flmul@grs,f
  6791  0508  0858               	movf	??___flmul+1,w
  6792  0509  1103               	clrz
  6793  050A  1803               	skipnc
  6794  050B  3E01               	addlw	1
  6795  050C  1903               	skipnz
  6796  050D  2D0F               	goto	u4441
  6797  050E  07DF               	addwf	___flmul@grs+1,f
  6798  050F                     u4441:
  6799  050F  0859               	movf	??___flmul+2,w
  6800  0510  1103               	clrz
  6801  0511  1803               	skipnc
  6802  0512  3E01               	addlw	1
  6803  0513  1903               	skipnz
  6804  0514  2D16               	goto	u4442
  6805  0515  07E0               	addwf	___flmul@grs+2,f
  6806  0516                     u4442:
  6807  0516  085A               	movf	??___flmul+3,w
  6808  0517  1103               	clrz
  6809  0518  1803               	skipnc
  6810  0519  3E01               	addlw	1
  6811  051A  1903               	skipnz
  6812  051B  2D1D               	goto	u4443
  6813  051C  07E1               	addwf	___flmul@grs+3,f
  6814  051D                     u4443:
  6815  051D                     l3472:
  6816  051D  0868               	movf	___flmul@temp+1,w
  6817  051E  00D7               	movwf	??___flmul
  6818  051F  01D8               	clrf	??___flmul+1
  6819  0520  01D9               	clrf	??___flmul+2
  6820  0521  01DA               	clrf	??___flmul+3
  6821  0522  0857               	movf	??___flmul,w
  6822  0523  07E3               	addwf	___flmul@prod,f
  6823  0524  0858               	movf	??___flmul+1,w
  6824  0525  1103               	clrz
  6825  0526  1803               	skipnc
  6826  0527  3E01               	addlw	1
  6827  0528  1903               	skipnz
  6828  0529  2D2B               	goto	u4451
  6829  052A  07E4               	addwf	___flmul@prod+1,f
  6830  052B                     u4451:
  6831  052B  0859               	movf	??___flmul+2,w
  6832  052C  1103               	clrz
  6833  052D  1803               	skipnc
  6834  052E  3E01               	addlw	1
  6835  052F  1903               	skipnz
  6836  0530  2D32               	goto	u4452
  6837  0531  07E5               	addwf	___flmul@prod+2,f
  6838  0532                     u4452:
  6839  0532  085A               	movf	??___flmul+3,w
  6840  0533  1103               	clrz
  6841  0534  1803               	skipnc
  6842  0535  3E01               	addlw	1
  6843  0536  1903               	skipnz
  6844  0537  2D39               	goto	u4453
  6845  0538  07E6               	addwf	___flmul@prod+3,f
  6846  0539                     u4453:
  6847  0539  0851               	movf	___flmul@b+2,w
  6848  053A  00D7               	movwf	??___flmul
  6849  053B  0857               	movf	??___flmul,w
  6850  053C  00A0               	movwf	__Umul8_16@multiplicand
  6851  053D  0853               	movf	___flmul@a,w
  6852  053E  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  6853  0543  1283               	bcf	3,5	;RP0=0, select bank0
  6854  0544  1303               	bcf	3,6	;RP1=0, select bank0
  6855  0545  0821               	movf	?__Umul8_16+1,w
  6856  0546  00E8               	movwf	___flmul@temp+1
  6857  0547  0820               	movf	?__Umul8_16,w
  6858  0548  00E7               	movwf	___flmul@temp
  6859  0549                     l3474:
  6860  0549  0867               	movf	___flmul@temp,w
  6861  054A  00D7               	movwf	??___flmul
  6862  054B  01D8               	clrf	??___flmul+1
  6863  054C  01D9               	clrf	??___flmul+2
  6864  054D  01DA               	clrf	??___flmul+3
  6865  054E  0857               	movf	??___flmul,w
  6866  054F  07DE               	addwf	___flmul@grs,f
  6867  0550  0858               	movf	??___flmul+1,w
  6868  0551  1103               	clrz
  6869  0552  1803               	skipnc
  6870  0553  3E01               	addlw	1
  6871  0554  1903               	skipnz
  6872  0555  2D57               	goto	u4461
  6873  0556  07DF               	addwf	___flmul@grs+1,f
  6874  0557                     u4461:
  6875  0557  0859               	movf	??___flmul+2,w
  6876  0558  1103               	clrz
  6877  0559  1803               	skipnc
  6878  055A  3E01               	addlw	1
  6879  055B  1903               	skipnz
  6880  055C  2D5E               	goto	u4462
  6881  055D  07E0               	addwf	___flmul@grs+2,f
  6882  055E                     u4462:
  6883  055E  085A               	movf	??___flmul+3,w
  6884  055F  1103               	clrz
  6885  0560  1803               	skipnc
  6886  0561  3E01               	addlw	1
  6887  0562  1903               	skipnz
  6888  0563  2D65               	goto	u4463
  6889  0564  07E1               	addwf	___flmul@grs+3,f
  6890  0565                     u4463:
  6891  0565                     l3476:
  6892  0565  0868               	movf	___flmul@temp+1,w
  6893  0566  00D7               	movwf	??___flmul
  6894  0567  01D8               	clrf	??___flmul+1
  6895  0568  01D9               	clrf	??___flmul+2
  6896  0569  01DA               	clrf	??___flmul+3
  6897  056A  0857               	movf	??___flmul,w
  6898  056B  07E3               	addwf	___flmul@prod,f
  6899  056C  0858               	movf	??___flmul+1,w
  6900  056D  1103               	clrz
  6901  056E  1803               	skipnc
  6902  056F  3E01               	addlw	1
  6903  0570  1903               	skipnz
  6904  0571  2D73               	goto	u4471
  6905  0572  07E4               	addwf	___flmul@prod+1,f
  6906  0573                     u4471:
  6907  0573  0859               	movf	??___flmul+2,w
  6908  0574  1103               	clrz
  6909  0575  1803               	skipnc
  6910  0576  3E01               	addlw	1
  6911  0577  1903               	skipnz
  6912  0578  2D7A               	goto	u4472
  6913  0579  07E5               	addwf	___flmul@prod+2,f
  6914  057A                     u4472:
  6915  057A  085A               	movf	??___flmul+3,w
  6916  057B  1103               	clrz
  6917  057C  1803               	skipnc
  6918  057D  3E01               	addlw	1
  6919  057E  1903               	skipnz
  6920  057F  2D81               	goto	u4473
  6921  0580  07E6               	addwf	___flmul@prod+3,f
  6922  0581                     u4473:
  6923  0581                     l3478:
  6924  0581  3008               	movlw	8
  6925  0582  00D7               	movwf	??___flmul
  6926  0583                     u4485:
  6927  0583  1003               	clrc
  6928  0584  0DDE               	rlf	___flmul@grs,f
  6929  0585  0DDF               	rlf	___flmul@grs+1,f
  6930  0586  0DE0               	rlf	___flmul@grs+2,f
  6931  0587  0DE1               	rlf	___flmul@grs+3,f
  6932  0588  0BD7               	decfsz	??___flmul,f
  6933  0589  2D83               	goto	u4485
  6934  058A                     l3480:
  6935  058A  0850               	movf	___flmul@b+1,w
  6936  058B  00D7               	movwf	??___flmul
  6937  058C  0857               	movf	??___flmul,w
  6938  058D  00A0               	movwf	__Umul8_16@multiplicand
  6939  058E  0853               	movf	___flmul@a,w
  6940  058F  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  6941  0594  1283               	bcf	3,5	;RP0=0, select bank0
  6942  0595  1303               	bcf	3,6	;RP1=0, select bank0
  6943  0596  0821               	movf	?__Umul8_16+1,w
  6944  0597  00E8               	movwf	___flmul@temp+1
  6945  0598  0820               	movf	?__Umul8_16,w
  6946  0599  00E7               	movwf	___flmul@temp
  6947  059A                     l3482:
  6948  059A  0867               	movf	___flmul@temp,w
  6949  059B  00D7               	movwf	??___flmul
  6950  059C  0868               	movf	___flmul@temp+1,w
  6951  059D  00D8               	movwf	??___flmul+1
  6952  059E  01D9               	clrf	??___flmul+2
  6953  059F  01DA               	clrf	??___flmul+3
  6954  05A0  0857               	movf	??___flmul,w
  6955  05A1  07DE               	addwf	___flmul@grs,f
  6956  05A2  0858               	movf	??___flmul+1,w
  6957  05A3  1103               	clrz
  6958  05A4  1803               	skipnc
  6959  05A5  3E01               	addlw	1
  6960  05A6  1903               	skipnz
  6961  05A7  2DA9               	goto	u4491
  6962  05A8  07DF               	addwf	___flmul@grs+1,f
  6963  05A9                     u4491:
  6964  05A9  0859               	movf	??___flmul+2,w
  6965  05AA  1103               	clrz
  6966  05AB  1803               	skipnc
  6967  05AC  3E01               	addlw	1
  6968  05AD  1903               	skipnz
  6969  05AE  2DB0               	goto	u4492
  6970  05AF  07E0               	addwf	___flmul@grs+2,f
  6971  05B0                     u4492:
  6972  05B0  085A               	movf	??___flmul+3,w
  6973  05B1  1103               	clrz
  6974  05B2  1803               	skipnc
  6975  05B3  3E01               	addlw	1
  6976  05B4  1903               	skipnz
  6977  05B5  2DB7               	goto	u4493
  6978  05B6  07E1               	addwf	___flmul@grs+3,f
  6979  05B7                     u4493:
  6980  05B7                     l3484:
  6981  05B7  084F               	movf	___flmul@b,w
  6982  05B8  00D7               	movwf	??___flmul
  6983  05B9  0857               	movf	??___flmul,w
  6984  05BA  00A0               	movwf	__Umul8_16@multiplicand
  6985  05BB  0854               	movf	___flmul@a+1,w
  6986  05BC  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  6987  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  6988  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  6989  05C3  0821               	movf	?__Umul8_16+1,w
  6990  05C4  00E8               	movwf	___flmul@temp+1
  6991  05C5  0820               	movf	?__Umul8_16,w
  6992  05C6  00E7               	movwf	___flmul@temp
  6993  05C7                     l3486:
  6994  05C7  0867               	movf	___flmul@temp,w
  6995  05C8  00D7               	movwf	??___flmul
  6996  05C9  0868               	movf	___flmul@temp+1,w
  6997  05CA  00D8               	movwf	??___flmul+1
  6998  05CB  01D9               	clrf	??___flmul+2
  6999  05CC  01DA               	clrf	??___flmul+3
  7000  05CD  0857               	movf	??___flmul,w
  7001  05CE  07DE               	addwf	___flmul@grs,f
  7002  05CF  0858               	movf	??___flmul+1,w
  7003  05D0  1103               	clrz
  7004  05D1  1803               	skipnc
  7005  05D2  3E01               	addlw	1
  7006  05D3  1903               	skipnz
  7007  05D4  2DD6               	goto	u4501
  7008  05D5  07DF               	addwf	___flmul@grs+1,f
  7009  05D6                     u4501:
  7010  05D6  0859               	movf	??___flmul+2,w
  7011  05D7  1103               	clrz
  7012  05D8  1803               	skipnc
  7013  05D9  3E01               	addlw	1
  7014  05DA  1903               	skipnz
  7015  05DB  2DDD               	goto	u4502
  7016  05DC  07E0               	addwf	___flmul@grs+2,f
  7017  05DD                     u4502:
  7018  05DD  085A               	movf	??___flmul+3,w
  7019  05DE  1103               	clrz
  7020  05DF  1803               	skipnc
  7021  05E0  3E01               	addlw	1
  7022  05E1  1903               	skipnz
  7023  05E2  2DE4               	goto	u4503
  7024  05E3  07E1               	addwf	___flmul@grs+3,f
  7025  05E4                     u4503:
  7026  05E4                     l3488:
  7027  05E4  3008               	movlw	8
  7028  05E5  00D7               	movwf	??___flmul
  7029  05E6                     u4515:
  7030  05E6  1003               	clrc
  7031  05E7  0DDE               	rlf	___flmul@grs,f
  7032  05E8  0DDF               	rlf	___flmul@grs+1,f
  7033  05E9  0DE0               	rlf	___flmul@grs+2,f
  7034  05EA  0DE1               	rlf	___flmul@grs+3,f
  7035  05EB  0BD7               	decfsz	??___flmul,f
  7036  05EC  2DE6               	goto	u4515
  7037  05ED  084F               	movf	___flmul@b,w
  7038  05EE  00D7               	movwf	??___flmul
  7039  05EF  0857               	movf	??___flmul,w
  7040  05F0  00A0               	movwf	__Umul8_16@multiplicand
  7041  05F1  0853               	movf	___flmul@a,w
  7042  05F2  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  7043  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  7044  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  7045  05F9  0821               	movf	?__Umul8_16+1,w
  7046  05FA  00E8               	movwf	___flmul@temp+1
  7047  05FB  0820               	movf	?__Umul8_16,w
  7048  05FC  00E7               	movwf	___flmul@temp
  7049  05FD                     l3490:
  7050  05FD  0867               	movf	___flmul@temp,w
  7051  05FE  00D7               	movwf	??___flmul
  7052  05FF  0868               	movf	___flmul@temp+1,w
  7053  0600  00D8               	movwf	??___flmul+1
  7054  0601  01D9               	clrf	??___flmul+2
  7055  0602  01DA               	clrf	??___flmul+3
  7056  0603  0857               	movf	??___flmul,w
  7057  0604  07DE               	addwf	___flmul@grs,f
  7058  0605  0858               	movf	??___flmul+1,w
  7059  0606  1103               	clrz
  7060  0607  1803               	skipnc
  7061  0608  3E01               	addlw	1
  7062  0609  1903               	skipnz
  7063  060A  2E0C               	goto	u4521
  7064  060B  07DF               	addwf	___flmul@grs+1,f
  7065  060C                     u4521:
  7066  060C  0859               	movf	??___flmul+2,w
  7067  060D  1103               	clrz
  7068  060E  1803               	skipnc
  7069  060F  3E01               	addlw	1
  7070  0610  1903               	skipnz
  7071  0611  2E13               	goto	u4522
  7072  0612  07E0               	addwf	___flmul@grs+2,f
  7073  0613                     u4522:
  7074  0613  085A               	movf	??___flmul+3,w
  7075  0614  1103               	clrz
  7076  0615  1803               	skipnc
  7077  0616  3E01               	addlw	1
  7078  0617  1903               	skipnz
  7079  0618  2E1A               	goto	u4523
  7080  0619  07E1               	addwf	___flmul@grs+3,f
  7081  061A                     u4523:
  7082  061A                     l3492:
  7083  061A  0850               	movf	___flmul@b+1,w
  7084  061B  00D7               	movwf	??___flmul
  7085  061C  0857               	movf	??___flmul,w
  7086  061D  00A0               	movwf	__Umul8_16@multiplicand
  7087  061E  0855               	movf	___flmul@a+2,w
  7088  061F  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  7089  0624  1283               	bcf	3,5	;RP0=0, select bank0
  7090  0625  1303               	bcf	3,6	;RP1=0, select bank0
  7091  0626  0821               	movf	?__Umul8_16+1,w
  7092  0627  00E8               	movwf	___flmul@temp+1
  7093  0628  0820               	movf	?__Umul8_16,w
  7094  0629  00E7               	movwf	___flmul@temp
  7095  062A  0867               	movf	___flmul@temp,w
  7096  062B  00D7               	movwf	??___flmul
  7097  062C  0868               	movf	___flmul@temp+1,w
  7098  062D  00D8               	movwf	??___flmul+1
  7099  062E  01D9               	clrf	??___flmul+2
  7100  062F  01DA               	clrf	??___flmul+3
  7101  0630  0857               	movf	??___flmul,w
  7102  0631  07E3               	addwf	___flmul@prod,f
  7103  0632  0858               	movf	??___flmul+1,w
  7104  0633  1103               	clrz
  7105  0634  1803               	skipnc
  7106  0635  3E01               	addlw	1
  7107  0636  1903               	skipnz
  7108  0637  2E39               	goto	u4531
  7109  0638  07E4               	addwf	___flmul@prod+1,f
  7110  0639                     u4531:
  7111  0639  0859               	movf	??___flmul+2,w
  7112  063A  1103               	clrz
  7113  063B  1803               	skipnc
  7114  063C  3E01               	addlw	1
  7115  063D  1903               	skipnz
  7116  063E  2E40               	goto	u4532
  7117  063F  07E5               	addwf	___flmul@prod+2,f
  7118  0640                     u4532:
  7119  0640  085A               	movf	??___flmul+3,w
  7120  0641  1103               	clrz
  7121  0642  1803               	skipnc
  7122  0643  3E01               	addlw	1
  7123  0644  1903               	skipnz
  7124  0645  2E47               	goto	u4533
  7125  0646  07E6               	addwf	___flmul@prod+3,f
  7126  0647                     u4533:
  7127  0647                     l3494:
  7128  0647  0851               	movf	___flmul@b+2,w
  7129  0648  00D7               	movwf	??___flmul
  7130  0649  0857               	movf	??___flmul,w
  7131  064A  00A0               	movwf	__Umul8_16@multiplicand
  7132  064B  0854               	movf	___flmul@a+1,w
  7133  064C  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  7134  0651  1283               	bcf	3,5	;RP0=0, select bank0
  7135  0652  1303               	bcf	3,6	;RP1=0, select bank0
  7136  0653  0821               	movf	?__Umul8_16+1,w
  7137  0654  00E8               	movwf	___flmul@temp+1
  7138  0655  0820               	movf	?__Umul8_16,w
  7139  0656  00E7               	movwf	___flmul@temp
  7140  0657                     l3496:
  7141  0657  0867               	movf	___flmul@temp,w
  7142  0658  00D7               	movwf	??___flmul
  7143  0659  0868               	movf	___flmul@temp+1,w
  7144  065A  00D8               	movwf	??___flmul+1
  7145  065B  01D9               	clrf	??___flmul+2
  7146  065C  01DA               	clrf	??___flmul+3
  7147  065D  0857               	movf	??___flmul,w
  7148  065E  07E3               	addwf	___flmul@prod,f
  7149  065F  0858               	movf	??___flmul+1,w
  7150  0660  1103               	clrz
  7151  0661  1803               	skipnc
  7152  0662  3E01               	addlw	1
  7153  0663  1903               	skipnz
  7154  0664  2E66               	goto	u4541
  7155  0665  07E4               	addwf	___flmul@prod+1,f
  7156  0666                     u4541:
  7157  0666  0859               	movf	??___flmul+2,w
  7158  0667  1103               	clrz
  7159  0668  1803               	skipnc
  7160  0669  3E01               	addlw	1
  7161  066A  1903               	skipnz
  7162  066B  2E6D               	goto	u4542
  7163  066C  07E5               	addwf	___flmul@prod+2,f
  7164  066D                     u4542:
  7165  066D  085A               	movf	??___flmul+3,w
  7166  066E  1103               	clrz
  7167  066F  1803               	skipnc
  7168  0670  3E01               	addlw	1
  7169  0671  1903               	skipnz
  7170  0672  2E74               	goto	u4543
  7171  0673  07E6               	addwf	___flmul@prod+3,f
  7172  0674                     u4543:
  7173  0674  0851               	movf	___flmul@b+2,w
  7174  0675  00D7               	movwf	??___flmul
  7175  0676  0857               	movf	??___flmul,w
  7176  0677  00A0               	movwf	__Umul8_16@multiplicand
  7177  0678  0855               	movf	___flmul@a+2,w
  7178  0679  160A  158A  25FA  120A  118A  	fcall	__Umul8_16
  7179  067E  1283               	bcf	3,5	;RP0=0, select bank0
  7180  067F  1303               	bcf	3,6	;RP1=0, select bank0
  7181  0680  0821               	movf	?__Umul8_16+1,w
  7182  0681  00E8               	movwf	___flmul@temp+1
  7183  0682  0820               	movf	?__Umul8_16,w
  7184  0683  00E7               	movwf	___flmul@temp
  7185  0684                     l3498:
  7186  0684  0867               	movf	___flmul@temp,w
  7187  0685  00D7               	movwf	??___flmul
  7188  0686  0868               	movf	___flmul@temp+1,w
  7189  0687  00D8               	movwf	??___flmul+1
  7190  0688  01D9               	clrf	??___flmul+2
  7191  0689  01DA               	clrf	??___flmul+3
  7192  068A  3008               	movlw	8
  7193  068B                     u4555:
  7194  068B  1003               	clrc
  7195  068C  0DD7               	rlf	??___flmul,f
  7196  068D  0DD8               	rlf	??___flmul+1,f
  7197  068E  0DD9               	rlf	??___flmul+2,f
  7198  068F  0DDA               	rlf	??___flmul+3,f
  7199  0690                     u4550:
  7200  0690  3EFF               	addlw	-1
  7201  0691  1D03               	skipz
  7202  0692  2E8B               	goto	u4555
  7203  0693  0857               	movf	??___flmul,w
  7204  0694  07E3               	addwf	___flmul@prod,f
  7205  0695  0858               	movf	??___flmul+1,w
  7206  0696  1103               	clrz
  7207  0697  1803               	skipnc
  7208  0698  3E01               	addlw	1
  7209  0699  1903               	skipnz
  7210  069A  2E9C               	goto	u4561
  7211  069B  07E4               	addwf	___flmul@prod+1,f
  7212  069C                     u4561:
  7213  069C  0859               	movf	??___flmul+2,w
  7214  069D  1103               	clrz
  7215  069E  1803               	skipnc
  7216  069F  3E01               	addlw	1
  7217  06A0  1903               	skipnz
  7218  06A1  2EA3               	goto	u4562
  7219  06A2  07E5               	addwf	___flmul@prod+2,f
  7220  06A3                     u4562:
  7221  06A3  085A               	movf	??___flmul+3,w
  7222  06A4  1103               	clrz
  7223  06A5  1803               	skipnc
  7224  06A6  3E01               	addlw	1
  7225  06A7  1903               	skipnz
  7226  06A8  2EAA               	goto	u4563
  7227  06A9  07E6               	addwf	___flmul@prod+3,f
  7228  06AA                     u4563:
  7229  06AA                     l3500:
  7230  06AA  085E               	movf	___flmul@grs,w
  7231  06AB  00D7               	movwf	??___flmul
  7232  06AC  085F               	movf	___flmul@grs+1,w
  7233  06AD  00D8               	movwf	??___flmul+1
  7234  06AE  0860               	movf	___flmul@grs+2,w
  7235  06AF  00D9               	movwf	??___flmul+2
  7236  06B0  0861               	movf	___flmul@grs+3,w
  7237  06B1  00DA               	movwf	??___flmul+3
  7238  06B2  3018               	movlw	24
  7239  06B3                     u4575:
  7240  06B3  1003               	clrc
  7241  06B4  0CDA               	rrf	??___flmul+3,f
  7242  06B5  0CD9               	rrf	??___flmul+2,f
  7243  06B6  0CD8               	rrf	??___flmul+1,f
  7244  06B7  0CD7               	rrf	??___flmul,f
  7245  06B8                     u4570:
  7246  06B8  3EFF               	addlw	-1
  7247  06B9  1D03               	skipz
  7248  06BA  2EB3               	goto	u4575
  7249  06BB  0857               	movf	??___flmul,w
  7250  06BC  07E3               	addwf	___flmul@prod,f
  7251  06BD  0858               	movf	??___flmul+1,w
  7252  06BE  1103               	clrz
  7253  06BF  1803               	skipnc
  7254  06C0  3E01               	addlw	1
  7255  06C1  1903               	skipnz
  7256  06C2  2EC4               	goto	u4581
  7257  06C3  07E4               	addwf	___flmul@prod+1,f
  7258  06C4                     u4581:
  7259  06C4  0859               	movf	??___flmul+2,w
  7260  06C5  1103               	clrz
  7261  06C6  1803               	skipnc
  7262  06C7  3E01               	addlw	1
  7263  06C8  1903               	skipnz
  7264  06C9  2ECB               	goto	u4582
  7265  06CA  07E5               	addwf	___flmul@prod+2,f
  7266  06CB                     u4582:
  7267  06CB  085A               	movf	??___flmul+3,w
  7268  06CC  1103               	clrz
  7269  06CD  1803               	skipnc
  7270  06CE  3E01               	addlw	1
  7271  06CF  1903               	skipnz
  7272  06D0  2ED2               	goto	u4583
  7273  06D1  07E6               	addwf	___flmul@prod+3,f
  7274  06D2                     u4583:
  7275  06D2                     l3502:
  7276  06D2  3008               	movlw	8
  7277  06D3  00D7               	movwf	??___flmul
  7278  06D4                     u4595:
  7279  06D4  1003               	clrc
  7280  06D5  0DDE               	rlf	___flmul@grs,f
  7281  06D6  0DDF               	rlf	___flmul@grs+1,f
  7282  06D7  0DE0               	rlf	___flmul@grs+2,f
  7283  06D8  0DE1               	rlf	___flmul@grs+3,f
  7284  06D9  0BD7               	decfsz	??___flmul,f
  7285  06DA  2ED4               	goto	u4595
  7286  06DB                     l3504:
  7287  06DB  0862               	movf	___flmul@bexp,w
  7288  06DC  075D               	addwf	___flmul@aexp,w
  7289  06DD  00D7               	movwf	??___flmul
  7290  06DE  01D8               	clrf	??___flmul+1
  7291  06DF  0DD8               	rlf	??___flmul+1,f
  7292  06E0  0857               	movf	??___flmul,w
  7293  06E1  3E82               	addlw	130
  7294  06E2  00E7               	movwf	___flmul@temp
  7295  06E3  0858               	movf	??___flmul+1,w
  7296  06E4  1803               	skipnc
  7297  06E5  3E01               	addlw	1
  7298  06E6  3EFF               	addlw	255
  7299  06E7  00E8               	movwf	___flmul@temp+1
  7300  06E8  2F06               	goto	l3516
  7301  06E9                     l3506:
  7302  06E9  3001               	movlw	1
  7303  06EA  00D7               	movwf	??___flmul
  7304  06EB                     u4605:
  7305  06EB  1003               	clrc
  7306  06EC  0DE3               	rlf	___flmul@prod,f
  7307  06ED  0DE4               	rlf	___flmul@prod+1,f
  7308  06EE  0DE5               	rlf	___flmul@prod+2,f
  7309  06EF  0DE6               	rlf	___flmul@prod+3,f
  7310  06F0  0BD7               	decfsz	??___flmul,f
  7311  06F1  2EEB               	goto	u4605
  7312  06F2                     l3508:
  7313  06F2  1FE1               	btfss	___flmul@grs+3,7
  7314  06F3  2EF5               	goto	u4611
  7315  06F4  2EF6               	goto	u4610
  7316  06F5                     u4611:
  7317  06F5  2EF7               	goto	l3512
  7318  06F6                     u4610:
  7319  06F6                     l3510:
  7320  06F6  1463               	bsf	___flmul@prod,0
  7321  06F7                     l3512:
  7322  06F7  3001               	movlw	1
  7323  06F8  00D7               	movwf	??___flmul
  7324  06F9                     u4625:
  7325  06F9  1003               	clrc
  7326  06FA  0DDE               	rlf	___flmul@grs,f
  7327  06FB  0DDF               	rlf	___flmul@grs+1,f
  7328  06FC  0DE0               	rlf	___flmul@grs+2,f
  7329  06FD  0DE1               	rlf	___flmul@grs+3,f
  7330  06FE  0BD7               	decfsz	??___flmul,f
  7331  06FF  2EF9               	goto	u4625
  7332  0700                     l3514:
  7333  0700  30FF               	movlw	255
  7334  0701  07E7               	addwf	___flmul@temp,f
  7335  0702  1803               	skipnc
  7336  0703  0AE8               	incf	___flmul@temp+1,f
  7337  0704  30FF               	movlw	255
  7338  0705  07E8               	addwf	___flmul@temp+1,f
  7339  0706                     l3516:
  7340  0706  1FE5               	btfss	___flmul@prod+2,7
  7341  0707  2F09               	goto	u4631
  7342  0708  2F0A               	goto	u4630
  7343  0709                     u4631:
  7344  0709  2EE9               	goto	l3506
  7345  070A                     u4630:
  7346  070A                     l3518:
  7347  070A  01DD               	clrf	___flmul@aexp
  7348  070B                     l3520:
  7349  070B  1FE1               	btfss	___flmul@grs+3,7
  7350  070C  2F0E               	goto	u4641
  7351  070D  2F0F               	goto	u4640
  7352  070E                     u4641:
  7353  070E  2F2B               	goto	l3528
  7354  070F                     u4640:
  7355  070F                     l3522:
  7356  070F  30FF               	movlw	255
  7357  0710  055E               	andwf	___flmul@grs,w
  7358  0711  00D7               	movwf	??___flmul
  7359  0712  30FF               	movlw	255
  7360  0713  055F               	andwf	___flmul@grs+1,w
  7361  0714  00D8               	movwf	??___flmul+1
  7362  0715  30FF               	movlw	255
  7363  0716  0560               	andwf	___flmul@grs+2,w
  7364  0717  00D9               	movwf	??___flmul+2
  7365  0718  307F               	movlw	127
  7366  0719  0561               	andwf	___flmul@grs+3,w
  7367  071A  00DA               	movwf	??___flmul+3
  7368  071B  085A               	movf	??___flmul+3,w
  7369  071C  0459               	iorwf	??___flmul+2,w
  7370  071D  0458               	iorwf	??___flmul+1,w
  7371  071E  0457               	iorwf	??___flmul,w
  7372  071F  1903               	skipnz
  7373  0720  2F22               	goto	u4651
  7374  0721  2F23               	goto	u4650
  7375  0722                     u4651:
  7376  0722  2F26               	goto	l804
  7377  0723                     u4650:
  7378  0723                     l3524:
  7379  0723  01DD               	clrf	___flmul@aexp
  7380  0724  0ADD               	incf	___flmul@aexp,f
  7381  0725  2F2B               	goto	l3528
  7382  0726                     l804:
  7383  0726  1C63               	btfss	___flmul@prod,0
  7384  0727  2F29               	goto	u4661
  7385  0728  2F2A               	goto	u4660
  7386  0729                     u4661:
  7387  0729  2F2B               	goto	l3528
  7388  072A                     u4660:
  7389  072A  2F23               	goto	l3524
  7390  072B                     l3528:
  7391  072B  085D               	movf	___flmul@aexp,w
  7392  072C  1903               	btfsc	3,2
  7393  072D  2F2F               	goto	u4671
  7394  072E  2F30               	goto	u4670
  7395  072F                     u4671:
  7396  072F  2F61               	goto	l3538
  7397  0730                     u4670:
  7398  0730                     l3530:
  7399  0730  3001               	movlw	1
  7400  0731  07E3               	addwf	___flmul@prod,f
  7401  0732  3000               	movlw	0
  7402  0733  1803               	skipnc
  7403  0734  3001               	movlw	1
  7404  0735  07E4               	addwf	___flmul@prod+1,f
  7405  0736  3000               	movlw	0
  7406  0737  1803               	skipnc
  7407  0738  3001               	movlw	1
  7408  0739  07E5               	addwf	___flmul@prod+2,f
  7409  073A  3000               	movlw	0
  7410  073B  1803               	skipnc
  7411  073C  3001               	movlw	1
  7412  073D  07E6               	addwf	___flmul@prod+3,f
  7413  073E                     l3532:
  7414  073E  1C66               	btfss	___flmul@prod+3,0
  7415  073F  2F41               	goto	u4681
  7416  0740  2F42               	goto	u4680
  7417  0741                     u4681:
  7418  0741  2F61               	goto	l3538
  7419  0742                     u4680:
  7420  0742                     l3534:
  7421  0742  0863               	movf	___flmul@prod,w
  7422  0743  00D7               	movwf	??___flmul
  7423  0744  0864               	movf	___flmul@prod+1,w
  7424  0745  00D8               	movwf	??___flmul+1
  7425  0746  0865               	movf	___flmul@prod+2,w
  7426  0747  00D9               	movwf	??___flmul+2
  7427  0748  0866               	movf	___flmul@prod+3,w
  7428  0749  00DA               	movwf	??___flmul+3
  7429  074A  3001               	movlw	1
  7430  074B  00DB               	movwf	??___flmul+4
  7431  074C                     u4695:
  7432  074C  0D5A               	rlf	??___flmul+3,w
  7433  074D  0CDA               	rrf	??___flmul+3,f
  7434  074E  0CD9               	rrf	??___flmul+2,f
  7435  074F  0CD8               	rrf	??___flmul+1,f
  7436  0750  0CD7               	rrf	??___flmul,f
  7437  0751                     u4690:
  7438  0751  0BDB               	decfsz	??___flmul+4,f
  7439  0752  2F4C               	goto	u4695
  7440  0753  085A               	movf	??___flmul+3,w
  7441  0754  00E6               	movwf	___flmul@prod+3
  7442  0755  0859               	movf	??___flmul+2,w
  7443  0756  00E5               	movwf	___flmul@prod+2
  7444  0757  0858               	movf	??___flmul+1,w
  7445  0758  00E4               	movwf	___flmul@prod+1
  7446  0759  0857               	movf	??___flmul,w
  7447  075A  00E3               	movwf	___flmul@prod
  7448  075B                     l3536:
  7449  075B  3001               	movlw	1
  7450  075C  07E7               	addwf	___flmul@temp,f
  7451  075D  1803               	skipnc
  7452  075E  0AE8               	incf	___flmul@temp+1,f
  7453  075F  3000               	movlw	0
  7454  0760  07E8               	addwf	___flmul@temp+1,f
  7455  0761                     l3538:
  7456  0761  0868               	movf	___flmul@temp+1,w
  7457  0762  3A80               	xorlw	128
  7458  0763  00FF               	movwf	btemp+1
  7459  0764  3080               	movlw	128
  7460  0765  027F               	subwf	btemp+1,w
  7461  0766  1D03               	skipz
  7462  0767  2F6A               	goto	u4705
  7463  0768  30FF               	movlw	255
  7464  0769  0267               	subwf	___flmul@temp,w
  7465  076A                     u4705:
  7466  076A  1C03               	skipc
  7467  076B  2F6D               	goto	u4701
  7468  076C  2F6E               	goto	u4700
  7469  076D                     u4701:
  7470  076D  2F79               	goto	l3542
  7471  076E                     u4700:
  7472  076E                     l3540:
  7473  076E  307F               	movlw	127
  7474  076F  1283               	bcf	3,5	;RP0=0, select bank0
  7475  0770  1303               	bcf	3,6	;RP1=0, select bank0
  7476  0771  00E6               	movwf	___flmul@prod+3
  7477  0772  3080               	movlw	128
  7478  0773  00E5               	movwf	___flmul@prod+2
  7479  0774  3000               	movlw	0
  7480  0775  00E4               	movwf	___flmul@prod+1
  7481  0776  3000               	movlw	0
  7482  0777  00E3               	movwf	___flmul@prod
  7483  0778  2FAE               	goto	l810
  7484  0779                     l3542:
  7485  0779  1283               	bcf	3,5	;RP0=0, select bank0
  7486  077A  1303               	bcf	3,6	;RP1=0, select bank0
  7487  077B  0868               	movf	___flmul@temp+1,w
  7488  077C  3A80               	xorlw	128
  7489  077D  00FF               	movwf	btemp+1
  7490  077E  3080               	movlw	128
  7491  077F  027F               	subwf	btemp+1,w
  7492  0780  1D03               	skipz
  7493  0781  2F84               	goto	u4715
  7494  0782  3001               	movlw	1
  7495  0783  0267               	subwf	___flmul@temp,w
  7496  0784                     u4715:
  7497  0784  1803               	skipnc
  7498  0785  2F87               	goto	u4711
  7499  0786  2F88               	goto	u4710
  7500  0787                     u4711:
  7501  0787  2F94               	goto	l3548
  7502  0788                     u4710:
  7503  0788                     l3544:
  7504  0788  3000               	movlw	0
  7505  0789  1283               	bcf	3,5	;RP0=0, select bank0
  7506  078A  1303               	bcf	3,6	;RP1=0, select bank0
  7507  078B  00E6               	movwf	___flmul@prod+3
  7508  078C  3000               	movlw	0
  7509  078D  00E5               	movwf	___flmul@prod+2
  7510  078E  3000               	movlw	0
  7511  078F  00E4               	movwf	___flmul@prod+1
  7512  0790  3000               	movlw	0
  7513  0791  00E3               	movwf	___flmul@prod
  7514  0792                     l3546:
  7515  0792  01DC               	clrf	___flmul@sign
  7516  0793  2FAE               	goto	l810
  7517  0794                     l3548:
  7518  0794  1283               	bcf	3,5	;RP0=0, select bank0
  7519  0795  1303               	bcf	3,6	;RP1=0, select bank0
  7520  0796  0867               	movf	___flmul@temp,w
  7521  0797  00D7               	movwf	??___flmul
  7522  0798  0857               	movf	??___flmul,w
  7523  0799  00E2               	movwf	___flmul@bexp
  7524  079A  30FF               	movlw	255
  7525  079B  05E3               	andwf	___flmul@prod,f
  7526  079C  30FF               	movlw	255
  7527  079D  05E4               	andwf	___flmul@prod+1,f
  7528  079E  307F               	movlw	127
  7529  079F  05E5               	andwf	___flmul@prod+2,f
  7530  07A0  3000               	movlw	0
  7531  07A1  05E6               	andwf	___flmul@prod+3,f
  7532  07A2                     l3550:
  7533  07A2  1C62               	btfss	___flmul@bexp,0
  7534  07A3  2FA5               	goto	u4721
  7535  07A4  2FA6               	goto	u4720
  7536  07A5                     u4721:
  7537  07A5  2FA7               	goto	l3554
  7538  07A6                     u4720:
  7539  07A6                     l3552:
  7540  07A6  17E5               	bsf	___flmul@prod+2,7
  7541  07A7                     l3554:
  7542  07A7  0862               	movf	___flmul@bexp,w
  7543  07A8  00D7               	movwf	??___flmul
  7544  07A9  1003               	clrc
  7545  07AA  0C57               	rrf	??___flmul,w
  7546  07AB  00D8               	movwf	??___flmul+1
  7547  07AC  0858               	movf	??___flmul+1,w
  7548  07AD  00E6               	movwf	___flmul@prod+3
  7549  07AE                     l810:
  7550  07AE  085C               	movf	___flmul@sign,w
  7551  07AF  00D7               	movwf	??___flmul
  7552  07B0  0857               	movf	??___flmul,w
  7553  07B1  04E6               	iorwf	___flmul@prod+3,f
  7554  07B2                     l3556:
  7555  07B2  0866               	movf	___flmul@prod+3,w
  7556  07B3  00D2               	movwf	?___flmul+3
  7557  07B4  0865               	movf	___flmul@prod+2,w
  7558  07B5  00D1               	movwf	?___flmul+2
  7559  07B6  0864               	movf	___flmul@prod+1,w
  7560  07B7  00D0               	movwf	?___flmul+1
  7561  07B8  0863               	movf	___flmul@prod,w
  7562  07B9  00CF               	movwf	?___flmul
  7563  07BA                     l798:
  7564  07BA  0008               	return
  7565  07BB                     __end_of___flmul:
  7566                           
  7567                           	psect	text26
  7568  1DFA                     __ptext26:	
  7569 ;; *************** function __Umul8_16 *****************
  7570 ;; Defined at:
  7571 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul8_16.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  multiplier      1    wreg     unsigned char 
  7574 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7577 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7578 ;;  product         2    4[BANK0 ] unsigned int 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  2    0[BANK0 ] unsigned int 
  7581 ;; Registers used:
  7582 ;;		wreg, status,2, status,0
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7588 ;;      Params:         0       2       0       0       0
  7589 ;;      Locals:         0       5       0       0       0
  7590 ;;      Temps:          0       2       0       0       0
  7591 ;;      Totals:         0       9       0       0       0
  7592 ;;Total ram usage:        9 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:    1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		___flmul
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           
  7603                           ;psect for function __Umul8_16
  7604  1DFA                     __Umul8_16:
  7605                           
  7606                           ;incstack = 0
  7607                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7608                           ;__Umul8_16@multiplier stored from wreg
  7609  1DFA  1283               	bcf	3,5	;RP0=0, select bank0
  7610  1DFB  1303               	bcf	3,6	;RP1=0, select bank0
  7611  1DFC  00A8               	movwf	__Umul8_16@multiplier
  7612  1DFD                     l3404:
  7613  1DFD  01A4               	clrf	__Umul8_16@product
  7614  1DFE  01A5               	clrf	__Umul8_16@product+1
  7615  1DFF                     l3406:
  7616  1DFF  0820               	movf	__Umul8_16@multiplicand,w
  7617  1E00  00A2               	movwf	??__Umul8_16
  7618  1E01  01A3               	clrf	??__Umul8_16+1
  7619  1E02  0822               	movf	??__Umul8_16,w
  7620  1E03  00A6               	movwf	__Umul8_16@word_mpld
  7621  1E04  0823               	movf	??__Umul8_16+1,w
  7622  1E05  00A7               	movwf	__Umul8_16@word_mpld+1
  7623  1E06                     l3408:
  7624  1E06  1C28               	btfss	__Umul8_16@multiplier,0
  7625  1E07  2E09               	goto	u4331
  7626  1E08  2E0A               	goto	u4330
  7627  1E09                     u4331:
  7628  1E09  2E10               	goto	l817
  7629  1E0A                     u4330:
  7630  1E0A                     l3410:
  7631  1E0A  0826               	movf	__Umul8_16@word_mpld,w
  7632  1E0B  07A4               	addwf	__Umul8_16@product,f
  7633  1E0C  1803               	skipnc
  7634  1E0D  0AA5               	incf	__Umul8_16@product+1,f
  7635  1E0E  0827               	movf	__Umul8_16@word_mpld+1,w
  7636  1E0F  07A5               	addwf	__Umul8_16@product+1,f
  7637  1E10                     l817:
  7638  1E10  3001               	movlw	1
  7639  1E11                     u4345:
  7640  1E11  1003               	clrc
  7641  1E12  0DA6               	rlf	__Umul8_16@word_mpld,f
  7642  1E13  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7643  1E14  3EFF               	addlw	-1
  7644  1E15  1D03               	skipz
  7645  1E16  2E11               	goto	u4345
  7646  1E17  1003               	clrc
  7647  1E18  0CA8               	rrf	__Umul8_16@multiplier,f
  7648  1E19                     l3412:
  7649  1E19  0828               	movf	__Umul8_16@multiplier,w
  7650  1E1A  1D03               	btfss	3,2
  7651  1E1B  2E1D               	goto	u4351
  7652  1E1C  2E1E               	goto	u4350
  7653  1E1D                     u4351:
  7654  1E1D  2E06               	goto	l3408
  7655  1E1E                     u4350:
  7656  1E1E                     l3414:
  7657  1E1E  0825               	movf	__Umul8_16@product+1,w
  7658  1E1F  00A1               	movwf	?__Umul8_16+1
  7659  1E20  0824               	movf	__Umul8_16@product,w
  7660  1E21  00A0               	movwf	?__Umul8_16
  7661  1E22                     l819:
  7662  1E22  0008               	return
  7663  1E23                     __end_of__Umul8_16:
  7664                           
  7665                           	psect	text27
  7666  122B                     __ptext27:	
  7667 ;; *************** function ___xxtofl *****************
  7668 ;; Defined at:
  7669 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  sign            1    wreg     unsigned char 
  7672 ;;  val             4    5[BANK0 ] long 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;  sign            1   13[BANK0 ] unsigned char 
  7675 ;;  arg             4   15[BANK0 ] unsigned long 
  7676 ;;  exp             1   14[BANK0 ] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  4    5[BANK0 ] unsigned char 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7686 ;;      Params:         0       4       0       0       0
  7687 ;;      Locals:         0       6       0       0       0
  7688 ;;      Temps:          0       4       0       0       0
  7689 ;;      Totals:         0      14       0       0       0
  7690 ;;Total ram usage:       14 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    1
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_main
  7697 ;;		_GetTemp
  7698 ;;		_log
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function ___xxtofl
  7704  122B                     ___xxtofl:
  7705                           
  7706                           ;incstack = 0
  7707                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7708                           ;___xxtofl@sign stored from wreg
  7709  122B  1283               	bcf	3,5	;RP0=0, select bank0
  7710  122C  1303               	bcf	3,6	;RP1=0, select bank0
  7711  122D  00AD               	movwf	___xxtofl@sign
  7712  122E                     l2596:
  7713  122E  082D               	movf	___xxtofl@sign,w
  7714  122F  1903               	btfsc	3,2
  7715  1230  2A32               	goto	u3141
  7716  1231  2A33               	goto	u3140
  7717  1232                     u3141:
  7718  1232  2A47               	goto	l2602
  7719  1233                     u3140:
  7720  1233                     l2598:
  7721  1233  1FA8               	btfss	___xxtofl@val+3,7
  7722  1234  2A36               	goto	u3151
  7723  1235  2A37               	goto	u3150
  7724  1236                     u3151:
  7725  1236  2A47               	goto	l2602
  7726  1237                     u3150:
  7727  1237                     l2600:
  7728  1237  0925               	comf	___xxtofl@val,w
  7729  1238  00AF               	movwf	___xxtofl@arg
  7730  1239  0926               	comf	___xxtofl@val+1,w
  7731  123A  00B0               	movwf	___xxtofl@arg+1
  7732  123B  0927               	comf	___xxtofl@val+2,w
  7733  123C  00B1               	movwf	___xxtofl@arg+2
  7734  123D  0928               	comf	___xxtofl@val+3,w
  7735  123E  00B2               	movwf	___xxtofl@arg+3
  7736  123F  0AAF               	incf	___xxtofl@arg,f
  7737  1240  1903               	skipnz
  7738  1241  0AB0               	incf	___xxtofl@arg+1,f
  7739  1242  1903               	skipnz
  7740  1243  0AB1               	incf	___xxtofl@arg+2,f
  7741  1244  1903               	skipnz
  7742  1245  0AB2               	incf	___xxtofl@arg+3,f
  7743  1246  2A4F               	goto	l842
  7744  1247                     l2602:
  7745  1247  0828               	movf	___xxtofl@val+3,w
  7746  1248  00B2               	movwf	___xxtofl@arg+3
  7747  1249  0827               	movf	___xxtofl@val+2,w
  7748  124A  00B1               	movwf	___xxtofl@arg+2
  7749  124B  0826               	movf	___xxtofl@val+1,w
  7750  124C  00B0               	movwf	___xxtofl@arg+1
  7751  124D  0825               	movf	___xxtofl@val,w
  7752  124E  00AF               	movwf	___xxtofl@arg
  7753  124F                     l842:
  7754  124F  0828               	movf	___xxtofl@val+3,w
  7755  1250  0427               	iorwf	___xxtofl@val+2,w
  7756  1251  0426               	iorwf	___xxtofl@val+1,w
  7757  1252  0425               	iorwf	___xxtofl@val,w
  7758  1253  1D03               	skipz
  7759  1254  2A56               	goto	u3161
  7760  1255  2A57               	goto	u3160
  7761  1256                     u3161:
  7762  1256  2A60               	goto	l2608
  7763  1257                     u3160:
  7764  1257                     l2604:
  7765  1257  3000               	movlw	0
  7766  1258  00A8               	movwf	?___xxtofl+3
  7767  1259  3000               	movlw	0
  7768  125A  00A7               	movwf	?___xxtofl+2
  7769  125B  3000               	movlw	0
  7770  125C  00A6               	movwf	?___xxtofl+1
  7771  125D  3000               	movlw	0
  7772  125E  00A5               	movwf	?___xxtofl
  7773  125F  2AE6               	goto	l844
  7774  1260                     l2608:
  7775  1260  3096               	movlw	150
  7776  1261  00A9               	movwf	??___xxtofl
  7777  1262  0829               	movf	??___xxtofl,w
  7778  1263  00AE               	movwf	___xxtofl@exp
  7779  1264  2A72               	goto	l2612
  7780  1265                     l2610:
  7781  1265  3001               	movlw	1
  7782  1266  00A9               	movwf	??___xxtofl
  7783  1267  0829               	movf	??___xxtofl,w
  7784  1268  07AE               	addwf	___xxtofl@exp,f
  7785  1269  3001               	movlw	1
  7786  126A                     u3175:
  7787  126A  1003               	clrc
  7788  126B  0CB2               	rrf	___xxtofl@arg+3,f
  7789  126C  0CB1               	rrf	___xxtofl@arg+2,f
  7790  126D  0CB0               	rrf	___xxtofl@arg+1,f
  7791  126E  0CAF               	rrf	___xxtofl@arg,f
  7792  126F  3EFF               	addlw	-1
  7793  1270  1D03               	skipz
  7794  1271  2A6A               	goto	u3175
  7795  1272                     l2612:
  7796  1272  30FE               	movlw	254
  7797  1273  0532               	andwf	___xxtofl@arg+3,w
  7798  1274  1D03               	btfss	3,2
  7799  1275  2A77               	goto	u3181
  7800  1276  2A78               	goto	u3180
  7801  1277                     u3181:
  7802  1277  2A65               	goto	l2610
  7803  1278                     u3180:
  7804  1278  2A94               	goto	l848
  7805  1279                     l2614:
  7806  1279  3001               	movlw	1
  7807  127A  00A9               	movwf	??___xxtofl
  7808  127B  0829               	movf	??___xxtofl,w
  7809  127C  07AE               	addwf	___xxtofl@exp,f
  7810  127D                     l2616:
  7811  127D  3001               	movlw	1
  7812  127E  07AF               	addwf	___xxtofl@arg,f
  7813  127F  3000               	movlw	0
  7814  1280  1803               	skipnc
  7815  1281  3001               	movlw	1
  7816  1282  07B0               	addwf	___xxtofl@arg+1,f
  7817  1283  3000               	movlw	0
  7818  1284  1803               	skipnc
  7819  1285  3001               	movlw	1
  7820  1286  07B1               	addwf	___xxtofl@arg+2,f
  7821  1287  3000               	movlw	0
  7822  1288  1803               	skipnc
  7823  1289  3001               	movlw	1
  7824  128A  07B2               	addwf	___xxtofl@arg+3,f
  7825  128B                     l2618:
  7826  128B  3001               	movlw	1
  7827  128C                     u3195:
  7828  128C  1003               	clrc
  7829  128D  0CB2               	rrf	___xxtofl@arg+3,f
  7830  128E  0CB1               	rrf	___xxtofl@arg+2,f
  7831  128F  0CB0               	rrf	___xxtofl@arg+1,f
  7832  1290  0CAF               	rrf	___xxtofl@arg,f
  7833  1291  3EFF               	addlw	-1
  7834  1292  1D03               	skipz
  7835  1293  2A8C               	goto	u3195
  7836  1294                     l848:
  7837  1294  30FF               	movlw	255
  7838  1295  0532               	andwf	___xxtofl@arg+3,w
  7839  1296  1D03               	btfss	3,2
  7840  1297  2A99               	goto	u3201
  7841  1298  2A9A               	goto	u3200
  7842  1299                     u3201:
  7843  1299  2A79               	goto	l2614
  7844  129A                     u3200:
  7845  129A  2AA6               	goto	l2622
  7846  129B                     l2620:
  7847  129B  3001               	movlw	1
  7848  129C  02AE               	subwf	___xxtofl@exp,f
  7849  129D  3001               	movlw	1
  7850  129E  00A9               	movwf	??___xxtofl
  7851  129F                     u3215:
  7852  129F  1003               	clrc
  7853  12A0  0DAF               	rlf	___xxtofl@arg,f
  7854  12A1  0DB0               	rlf	___xxtofl@arg+1,f
  7855  12A2  0DB1               	rlf	___xxtofl@arg+2,f
  7856  12A3  0DB2               	rlf	___xxtofl@arg+3,f
  7857  12A4  0BA9               	decfsz	??___xxtofl,f
  7858  12A5  2A9F               	goto	u3215
  7859  12A6                     l2622:
  7860  12A6  1BB1               	btfsc	___xxtofl@arg+2,7
  7861  12A7  2AA9               	goto	u3221
  7862  12A8  2AAA               	goto	u3220
  7863  12A9                     u3221:
  7864  12A9  2AB0               	goto	l855
  7865  12AA                     u3220:
  7866  12AA                     l2624:
  7867  12AA  3002               	movlw	2
  7868  12AB  022E               	subwf	___xxtofl@exp,w
  7869  12AC  1803               	skipnc
  7870  12AD  2AAF               	goto	u3231
  7871  12AE  2AB0               	goto	u3230
  7872  12AF                     u3231:
  7873  12AF  2A9B               	goto	l2620
  7874  12B0                     u3230:
  7875  12B0                     l855:
  7876  12B0  182E               	btfsc	___xxtofl@exp,0
  7877  12B1  2AB3               	goto	u3241
  7878  12B2  2AB4               	goto	u3240
  7879  12B3                     u3241:
  7880  12B3  2ABC               	goto	l856
  7881  12B4                     u3240:
  7882  12B4                     l2626:
  7883  12B4  30FF               	movlw	255
  7884  12B5  05AF               	andwf	___xxtofl@arg,f
  7885  12B6  30FF               	movlw	255
  7886  12B7  05B0               	andwf	___xxtofl@arg+1,f
  7887  12B8  307F               	movlw	127
  7888  12B9  05B1               	andwf	___xxtofl@arg+2,f
  7889  12BA  30FF               	movlw	255
  7890  12BB  05B2               	andwf	___xxtofl@arg+3,f
  7891  12BC                     l856:
  7892  12BC  1003               	clrc
  7893  12BD  0CAE               	rrf	___xxtofl@exp,f
  7894  12BE                     l2628:
  7895  12BE  082E               	movf	___xxtofl@exp,w
  7896  12BF  00A9               	movwf	??___xxtofl
  7897  12C0  01AA               	clrf	??___xxtofl+1
  7898  12C1  01AB               	clrf	??___xxtofl+2
  7899  12C2  01AC               	clrf	??___xxtofl+3
  7900  12C3  3018               	movlw	24
  7901  12C4                     u3255:
  7902  12C4  1003               	clrc
  7903  12C5  0DA9               	rlf	??___xxtofl,f
  7904  12C6  0DAA               	rlf	??___xxtofl+1,f
  7905  12C7  0DAB               	rlf	??___xxtofl+2,f
  7906  12C8  0DAC               	rlf	??___xxtofl+3,f
  7907  12C9                     u3250:
  7908  12C9  3EFF               	addlw	-1
  7909  12CA  1D03               	skipz
  7910  12CB  2AC4               	goto	u3255
  7911  12CC  0829               	movf	??___xxtofl,w
  7912  12CD  04AF               	iorwf	___xxtofl@arg,f
  7913  12CE  082A               	movf	??___xxtofl+1,w
  7914  12CF  04B0               	iorwf	___xxtofl@arg+1,f
  7915  12D0  082B               	movf	??___xxtofl+2,w
  7916  12D1  04B1               	iorwf	___xxtofl@arg+2,f
  7917  12D2  082C               	movf	??___xxtofl+3,w
  7918  12D3  04B2               	iorwf	___xxtofl@arg+3,f
  7919  12D4                     l2630:
  7920  12D4  082D               	movf	___xxtofl@sign,w
  7921  12D5  1903               	btfsc	3,2
  7922  12D6  2AD8               	goto	u3261
  7923  12D7  2AD9               	goto	u3260
  7924  12D8                     u3261:
  7925  12D8  2ADE               	goto	l2636
  7926  12D9                     u3260:
  7927  12D9                     l2632:
  7928  12D9  1FA8               	btfss	___xxtofl@val+3,7
  7929  12DA  2ADC               	goto	u3271
  7930  12DB  2ADD               	goto	u3270
  7931  12DC                     u3271:
  7932  12DC  2ADE               	goto	l2636
  7933  12DD                     u3270:
  7934  12DD                     l2634:
  7935  12DD  17B2               	bsf	___xxtofl@arg+3,7
  7936  12DE                     l2636:
  7937  12DE  0832               	movf	___xxtofl@arg+3,w
  7938  12DF  00A8               	movwf	?___xxtofl+3
  7939  12E0  0831               	movf	___xxtofl@arg+2,w
  7940  12E1  00A7               	movwf	?___xxtofl+2
  7941  12E2  0830               	movf	___xxtofl@arg+1,w
  7942  12E3  00A6               	movwf	?___xxtofl+1
  7943  12E4  082F               	movf	___xxtofl@arg,w
  7944  12E5  00A5               	movwf	?___xxtofl
  7945  12E6                     l844:
  7946  12E6  0008               	return
  7947  12E7                     __end_of___xxtofl:
  7948                           
  7949                           	psect	text28
  7950  1187                     __ptext28:	
  7951 ;; *************** function ___flge *****************
  7952 ;; Defined at:
  7953 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flge.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  ff1             4    0[BANK0 ] unsigned char 
  7956 ;;  ff2             4    4[BANK0 ] unsigned char 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;		None               void
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7968 ;;      Params:         0       8       0       0       0
  7969 ;;      Locals:         0       0       0       0       0
  7970 ;;      Temps:          0       4       0       0       0
  7971 ;;      Totals:         0      12       0       0       0
  7972 ;;Total ram usage:       12 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:    1
  7975 ;; This function calls:
  7976 ;;		Nothing
  7977 ;; This function is called by:
  7978 ;;		_log
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           
  7983                           ;psect for function ___flge
  7984  1187                     ___flge:
  7985  1187                     l2576:	
  7986                           ;incstack = 0
  7987                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7988                           
  7989  1187  3000               	movlw	0
  7990  1188  1283               	bcf	3,5	;RP0=0, select bank0
  7991  1189  1303               	bcf	3,6	;RP1=0, select bank0
  7992  118A  0520               	andwf	___flge@ff1,w
  7993  118B  00A8               	movwf	??___flge
  7994  118C  3000               	movlw	0
  7995  118D  0521               	andwf	___flge@ff1+1,w
  7996  118E  00A9               	movwf	??___flge+1
  7997  118F  3080               	movlw	128
  7998  1190  0522               	andwf	___flge@ff1+2,w
  7999  1191  00AA               	movwf	??___flge+2
  8000  1192  307F               	movlw	127
  8001  1193  0523               	andwf	___flge@ff1+3,w
  8002  1194  00AB               	movwf	??___flge+3
  8003  1195  082B               	movf	??___flge+3,w
  8004  1196  042A               	iorwf	??___flge+2,w
  8005  1197  0429               	iorwf	??___flge+1,w
  8006  1198  0428               	iorwf	??___flge,w
  8007  1199  1D03               	skipz
  8008  119A  299C               	goto	u3071
  8009  119B  299D               	goto	u3070
  8010  119C                     u3071:
  8011  119C  29A5               	goto	l583
  8012  119D                     u3070:
  8013  119D                     l2578:
  8014  119D  3000               	movlw	0
  8015  119E  00A3               	movwf	___flge@ff1+3
  8016  119F  3000               	movlw	0
  8017  11A0  00A2               	movwf	___flge@ff1+2
  8018  11A1  3000               	movlw	0
  8019  11A2  00A1               	movwf	___flge@ff1+1
  8020  11A3  3000               	movlw	0
  8021  11A4  00A0               	movwf	___flge@ff1
  8022  11A5                     l583:
  8023  11A5  3000               	movlw	0
  8024  11A6  0524               	andwf	___flge@ff2,w
  8025  11A7  00A8               	movwf	??___flge
  8026  11A8  3000               	movlw	0
  8027  11A9  0525               	andwf	___flge@ff2+1,w
  8028  11AA  00A9               	movwf	??___flge+1
  8029  11AB  3080               	movlw	128
  8030  11AC  0526               	andwf	___flge@ff2+2,w
  8031  11AD  00AA               	movwf	??___flge+2
  8032  11AE  307F               	movlw	127
  8033  11AF  0527               	andwf	___flge@ff2+3,w
  8034  11B0  00AB               	movwf	??___flge+3
  8035  11B1  082B               	movf	??___flge+3,w
  8036  11B2  042A               	iorwf	??___flge+2,w
  8037  11B3  0429               	iorwf	??___flge+1,w
  8038  11B4  0428               	iorwf	??___flge,w
  8039  11B5  1D03               	skipz
  8040  11B6  29B8               	goto	u3081
  8041  11B7  29B9               	goto	u3080
  8042  11B8                     u3081:
  8043  11B8  29C1               	goto	l2582
  8044  11B9                     u3080:
  8045  11B9                     l2580:
  8046  11B9  3000               	movlw	0
  8047  11BA  00A7               	movwf	___flge@ff2+3
  8048  11BB  3000               	movlw	0
  8049  11BC  00A6               	movwf	___flge@ff2+2
  8050  11BD  3000               	movlw	0
  8051  11BE  00A5               	movwf	___flge@ff2+1
  8052  11BF  3000               	movlw	0
  8053  11C0  00A4               	movwf	___flge@ff2
  8054  11C1                     l2582:
  8055  11C1  1FA3               	btfss	___flge@ff1+3,7
  8056  11C2  29C4               	goto	u3091
  8057  11C3  29C5               	goto	u3090
  8058  11C4                     u3091:
  8059  11C4  29E9               	goto	l2586
  8060  11C5                     u3090:
  8061  11C5                     l2584:
  8062  11C5  3000               	movlw	0
  8063  11C6  00A8               	movwf	??___flge
  8064  11C7  3000               	movlw	0
  8065  11C8  00A9               	movwf	??___flge+1
  8066  11C9  3000               	movlw	0
  8067  11CA  00AA               	movwf	??___flge+2
  8068  11CB  3080               	movlw	128
  8069  11CC  00AB               	movwf	??___flge+3
  8070  11CD  0820               	movf	___flge@ff1,w
  8071  11CE  02A8               	subwf	??___flge,f
  8072  11CF  0821               	movf	___flge@ff1+1,w
  8073  11D0  1C03               	skipc
  8074  11D1  0F21               	incfsz	___flge@ff1+1,w
  8075  11D2  29D4               	goto	u3101
  8076  11D3  29D5               	goto	u3102
  8077  11D4                     u3101:
  8078  11D4  02A9               	subwf	??___flge+1,f
  8079  11D5                     u3102:
  8080  11D5  0822               	movf	___flge@ff1+2,w
  8081  11D6  1C03               	skipc
  8082  11D7  0F22               	incfsz	___flge@ff1+2,w
  8083  11D8  29DA               	goto	u3103
  8084  11D9  29DB               	goto	u3104
  8085  11DA                     u3103:
  8086  11DA  02AA               	subwf	??___flge+2,f
  8087  11DB                     u3104:
  8088  11DB  0823               	movf	___flge@ff1+3,w
  8089  11DC  1C03               	skipc
  8090  11DD  0F23               	incfsz	___flge@ff1+3,w
  8091  11DE  29E0               	goto	u3105
  8092  11DF  29E1               	goto	u3106
  8093  11E0                     u3105:
  8094  11E0  02AB               	subwf	??___flge+3,f
  8095  11E1                     u3106:
  8096  11E1  082B               	movf	??___flge+3,w
  8097  11E2  00A3               	movwf	___flge@ff1+3
  8098  11E3  082A               	movf	??___flge+2,w
  8099  11E4  00A2               	movwf	___flge@ff1+2
  8100  11E5  0829               	movf	??___flge+1,w
  8101  11E6  00A1               	movwf	___flge@ff1+1
  8102  11E7  0828               	movf	??___flge,w
  8103  11E8  00A0               	movwf	___flge@ff1
  8104  11E9                     l2586:
  8105  11E9  1FA7               	btfss	___flge@ff2+3,7
  8106  11EA  29EC               	goto	u3111
  8107  11EB  29ED               	goto	u3110
  8108  11EC                     u3111:
  8109  11EC  2A11               	goto	l586
  8110  11ED                     u3110:
  8111  11ED                     l2588:
  8112  11ED  3000               	movlw	0
  8113  11EE  00A8               	movwf	??___flge
  8114  11EF  3000               	movlw	0
  8115  11F0  00A9               	movwf	??___flge+1
  8116  11F1  3000               	movlw	0
  8117  11F2  00AA               	movwf	??___flge+2
  8118  11F3  3080               	movlw	128
  8119  11F4  00AB               	movwf	??___flge+3
  8120  11F5  0824               	movf	___flge@ff2,w
  8121  11F6  02A8               	subwf	??___flge,f
  8122  11F7  0825               	movf	___flge@ff2+1,w
  8123  11F8  1C03               	skipc
  8124  11F9  0F25               	incfsz	___flge@ff2+1,w
  8125  11FA  29FC               	goto	u3121
  8126  11FB  29FD               	goto	u3122
  8127  11FC                     u3121:
  8128  11FC  02A9               	subwf	??___flge+1,f
  8129  11FD                     u3122:
  8130  11FD  0826               	movf	___flge@ff2+2,w
  8131  11FE  1C03               	skipc
  8132  11FF  0F26               	incfsz	___flge@ff2+2,w
  8133  1200  2A02               	goto	u3123
  8134  1201  2A03               	goto	u3124
  8135  1202                     u3123:
  8136  1202  02AA               	subwf	??___flge+2,f
  8137  1203                     u3124:
  8138  1203  0827               	movf	___flge@ff2+3,w
  8139  1204  1C03               	skipc
  8140  1205  0F27               	incfsz	___flge@ff2+3,w
  8141  1206  2A08               	goto	u3125
  8142  1207  2A09               	goto	u3126
  8143  1208                     u3125:
  8144  1208  02AB               	subwf	??___flge+3,f
  8145  1209                     u3126:
  8146  1209  082B               	movf	??___flge+3,w
  8147  120A  00A7               	movwf	___flge@ff2+3
  8148  120B  082A               	movf	??___flge+2,w
  8149  120C  00A6               	movwf	___flge@ff2+2
  8150  120D  0829               	movf	??___flge+1,w
  8151  120E  00A5               	movwf	___flge@ff2+1
  8152  120F  0828               	movf	??___flge,w
  8153  1210  00A4               	movwf	___flge@ff2
  8154  1211                     l586:
  8155  1211  3080               	movlw	128
  8156  1212  06A3               	xorwf	___flge@ff1+3,f
  8157  1213  3080               	movlw	128
  8158  1214  06A7               	xorwf	___flge@ff2+3,f
  8159  1215  0827               	movf	___flge@ff2+3,w
  8160  1216  0223               	subwf	___flge@ff1+3,w
  8161  1217  1D03               	skipz
  8162  1218  2A23               	goto	u3135
  8163  1219  0826               	movf	___flge@ff2+2,w
  8164  121A  0222               	subwf	___flge@ff1+2,w
  8165  121B  1D03               	skipz
  8166  121C  2A23               	goto	u3135
  8167  121D  0825               	movf	___flge@ff2+1,w
  8168  121E  0221               	subwf	___flge@ff1+1,w
  8169  121F  1D03               	skipz
  8170  1220  2A23               	goto	u3135
  8171  1221  0824               	movf	___flge@ff2,w
  8172  1222  0220               	subwf	___flge@ff1,w
  8173  1223                     u3135:
  8174  1223  1803               	skipnc
  8175  1224  2A26               	goto	u3131
  8176  1225  2A27               	goto	u3130
  8177  1226                     u3131:
  8178  1226  2A29               	goto	l2592
  8179  1227                     u3130:
  8180  1227                     l2590:
  8181  1227  1003               	clrc
  8182  1228  2A2A               	goto	l587
  8183  1229                     l2592:
  8184  1229  1403               	setc
  8185  122A                     l587:
  8186  122A  0008               	return
  8187  122B                     __end_of___flge:
  8188                           
  8189                           	psect	text29
  8190  0803                     __ptext29:	
  8191 ;; *************** function ___fltol *****************
  8192 ;; Defined at:
  8193 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fltol.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  f1              4   45[BANK1 ] unsigned char 
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;  exp1            1   55[BANK1 ] unsigned char 
  8198 ;;  sign1           1   54[BANK1 ] unsigned char 
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  4   45[BANK1 ] long 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8208 ;;      Params:         0       0       4       0       0
  8209 ;;      Locals:         0       0       2       0       0
  8210 ;;      Temps:          0       0       5       0       0
  8211 ;;      Totals:         0       0      11       0       0
  8212 ;;Total ram usage:       11 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:    1
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_main
  8219 ;;		_GetTemp
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           
  8224                           ;psect for function ___fltol
  8225  0803                     ___fltol:
  8226  0803                     l2744:	
  8227                           ;incstack = 0
  8228                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8229                           
  8230  0803  1003               	clrc
  8231  0804  1683               	bsf	3,5	;RP0=1, select bank1
  8232  0805  1303               	bcf	3,6	;RP1=0, select bank1
  8233  0806  0D4F               	rlf	(___fltol@f1+2)^(0+128),w
  8234  0807  0D50               	rlf	(___fltol@f1+3)^(0+128),w
  8235  0808  00D1               	movwf	??___fltol^(0+128)
  8236  0809  0851               	movf	??___fltol^(0+128),w
  8237  080A  00D7               	movwf	___fltol@exp1^(0+128)
  8238  080B  0857               	movf	___fltol@exp1^(0+128),w
  8239  080C  1D03               	btfss	3,2
  8240  080D  280F               	goto	u3451
  8241  080E  2810               	goto	u3450
  8242  080F                     u3451:
  8243  080F  2819               	goto	l2750
  8244  0810                     u3450:
  8245  0810                     l2746:
  8246  0810  3000               	movlw	0
  8247  0811  00D0               	movwf	(?___fltol+3)^(0+128)
  8248  0812  3000               	movlw	0
  8249  0813  00CF               	movwf	(?___fltol+2)^(0+128)
  8250  0814  3000               	movlw	0
  8251  0815  00CE               	movwf	(?___fltol+1)^(0+128)
  8252  0816  3000               	movlw	0
  8253  0817  00CD               	movwf	?___fltol^(0+128)
  8254  0818  287E               	goto	l595
  8255  0819                     l2750:
  8256  0819  084D               	movf	___fltol@f1^(0+128),w
  8257  081A  00D1               	movwf	??___fltol^(0+128)
  8258  081B  084E               	movf	(___fltol@f1+1)^(0+128),w
  8259  081C  00D2               	movwf	(??___fltol^(0+128)+1)
  8260  081D  084F               	movf	(___fltol@f1+2)^(0+128),w
  8261  081E  00D3               	movwf	(??___fltol^(0+128)+2)
  8262  081F  0850               	movf	(___fltol@f1+3)^(0+128),w
  8263  0820  00D4               	movwf	(??___fltol^(0+128)+3)
  8264  0821  301F               	movlw	31
  8265  0822                     u3465:
  8266  0822  1003               	clrc
  8267  0823  0CD4               	rrf	(??___fltol^(0+128)+3),f
  8268  0824  0CD3               	rrf	(??___fltol^(0+128)+2),f
  8269  0825  0CD2               	rrf	(??___fltol^(0+128)+1),f
  8270  0826  0CD1               	rrf	??___fltol^(0+128),f
  8271  0827                     u3460:
  8272  0827  3EFF               	addlw	-1
  8273  0828  1D03               	skipz
  8274  0829  2822               	goto	u3465
  8275  082A  0851               	movf	??___fltol^(0+128),w
  8276  082B  00D5               	movwf	(??___fltol+4)^(0+128)
  8277  082C  0855               	movf	(??___fltol+4)^(0+128),w
  8278  082D  00D6               	movwf	___fltol@sign1^(0+128)
  8279  082E                     l2752:
  8280  082E  17CF               	bsf	(___fltol@f1^(0+128)+2),7
  8281  082F                     l2754:
  8282  082F  30FF               	movlw	255
  8283  0830  05CD               	andwf	___fltol@f1^(0+128),f
  8284  0831  30FF               	movlw	255
  8285  0832  05CE               	andwf	(___fltol@f1+1)^(0+128),f
  8286  0833  30FF               	movlw	255
  8287  0834  05CF               	andwf	(___fltol@f1+2)^(0+128),f
  8288  0835  3000               	movlw	0
  8289  0836  05D0               	andwf	(___fltol@f1+3)^(0+128),f
  8290  0837                     l2756:
  8291  0837  3096               	movlw	150
  8292  0838  02D7               	subwf	___fltol@exp1^(0+128),f
  8293  0839                     l2758:
  8294  0839  1FD7               	btfss	___fltol@exp1^(0+128),7
  8295  083A  283C               	goto	u3471
  8296  083B  283D               	goto	u3470
  8297  083C                     u3471:
  8298  083C  2857               	goto	l2768
  8299  083D                     u3470:
  8300  083D                     l2760:
  8301  083D  0857               	movf	___fltol@exp1^(0+128),w
  8302  083E  3A80               	xorlw	128
  8303  083F  3E97               	addlw	151
  8304  0840  1803               	skipnc
  8305  0841  2843               	goto	u3481
  8306  0842  2844               	goto	u3480
  8307  0843                     u3481:
  8308  0843  2845               	goto	l2766
  8309  0844                     u3480:
  8310  0844  2810               	goto	l2746
  8311  0845                     l2766:
  8312  0845  3001               	movlw	1
  8313  0846                     u3495:
  8314  0846  1003               	clrc
  8315  0847  0CD0               	rrf	(___fltol@f1+3)^(0+128),f
  8316  0848  0CCF               	rrf	(___fltol@f1+2)^(0+128),f
  8317  0849  0CCE               	rrf	(___fltol@f1+1)^(0+128),f
  8318  084A  0CCD               	rrf	___fltol@f1^(0+128),f
  8319  084B  3EFF               	addlw	-1
  8320  084C  1D03               	skipz
  8321  084D  2846               	goto	u3495
  8322  084E  3001               	movlw	1
  8323  084F  00D1               	movwf	??___fltol^(0+128)
  8324  0850  0851               	movf	??___fltol^(0+128),w
  8325  0851  07D7               	addwf	___fltol@exp1^(0+128),f
  8326  0852  1D03               	btfss	3,2
  8327  0853  2855               	goto	u3501
  8328  0854  2856               	goto	u3500
  8329  0855                     u3501:
  8330  0855  2845               	goto	l2766
  8331  0856                     u3500:
  8332  0856  286E               	goto	l2776
  8333  0857                     l2768:
  8334  0857  3020               	movlw	32
  8335  0858  0257               	subwf	___fltol@exp1^(0+128),w
  8336  0859  1C03               	skipc
  8337  085A  285C               	goto	u3511
  8338  085B  285D               	goto	u3510
  8339  085C                     u3511:
  8340  085C  2869               	goto	l602
  8341  085D                     u3510:
  8342  085D  2810               	goto	l2746
  8343  085E                     l2774:
  8344  085E  3001               	movlw	1
  8345  085F  00D1               	movwf	??___fltol^(0+128)
  8346  0860                     u3525:
  8347  0860  1003               	clrc
  8348  0861  0DCD               	rlf	___fltol@f1^(0+128),f
  8349  0862  0DCE               	rlf	(___fltol@f1+1)^(0+128),f
  8350  0863  0DCF               	rlf	(___fltol@f1+2)^(0+128),f
  8351  0864  0DD0               	rlf	(___fltol@f1+3)^(0+128),f
  8352  0865  0BD1               	decfsz	??___fltol^(0+128),f
  8353  0866  2860               	goto	u3525
  8354  0867  3001               	movlw	1
  8355  0868  02D7               	subwf	___fltol@exp1^(0+128),f
  8356  0869                     l602:
  8357  0869  0857               	movf	___fltol@exp1^(0+128),w
  8358  086A  1D03               	btfss	3,2
  8359  086B  286D               	goto	u3531
  8360  086C  286E               	goto	u3530
  8361  086D                     u3531:
  8362  086D  285E               	goto	l2774
  8363  086E                     u3530:
  8364  086E                     l2776:
  8365  086E  0856               	movf	___fltol@sign1^(0+128),w
  8366  086F  1903               	btfsc	3,2
  8367  0870  2872               	goto	u3541
  8368  0871  2873               	goto	u3540
  8369  0872                     u3541:
  8370  0872  287E               	goto	l605
  8371  0873                     u3540:
  8372  0873                     l2778:
  8373  0873  09CD               	comf	___fltol@f1^(0+128),f
  8374  0874  09CE               	comf	(___fltol@f1+1)^(0+128),f
  8375  0875  09CF               	comf	(___fltol@f1+2)^(0+128),f
  8376  0876  09D0               	comf	(___fltol@f1+3)^(0+128),f
  8377  0877  0ACD               	incf	___fltol@f1^(0+128),f
  8378  0878  1903               	skipnz
  8379  0879  0ACE               	incf	(___fltol@f1+1)^(0+128),f
  8380  087A  1903               	skipnz
  8381  087B  0ACF               	incf	(___fltol@f1+2)^(0+128),f
  8382  087C  1903               	skipnz
  8383  087D  0AD0               	incf	(___fltol@f1+3)^(0+128),f
  8384  087E                     l605:
  8385  087E                     l595:
  8386  087E  0008               	return
  8387  087F                     __end_of___fltol:
  8388                           
  8389                           	psect	text30
  8390  1D89                     __ptext30:	
  8391 ;; *************** function ___flsub *****************
  8392 ;; Defined at:
  8393 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  a               4   39[BANK0 ] long 
  8396 ;;  b               4   43[BANK0 ] long 
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  4   39[BANK0 ] long 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8408 ;;      Params:         0       8       0       0       0
  8409 ;;      Locals:         0       0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0
  8411 ;;      Totals:         0       8       0       0       0
  8412 ;;Total ram usage:        8 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    2
  8415 ;; This function calls:
  8416 ;;		___fladd
  8417 ;; This function is called by:
  8418 ;;		_map
  8419 ;;		_GetTemp
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423                           
  8424                           ;psect for function ___flsub
  8425  1D89                     ___flsub:
  8426  1D89                     l3718:	
  8427                           ;incstack = 0
  8428                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8429                           
  8430  1D89  3080               	movlw	128
  8431  1D8A  1283               	bcf	3,5	;RP0=0, select bank0
  8432  1D8B  1303               	bcf	3,6	;RP1=0, select bank0
  8433  1D8C  06CA               	xorwf	___flsub@a+3,f
  8434  1D8D                     l3720:
  8435  1D8D  084E               	movf	___flsub@b+3,w
  8436  1D8E  00B6               	movwf	___fladd@b+3
  8437  1D8F  084D               	movf	___flsub@b+2,w
  8438  1D90  00B5               	movwf	___fladd@b+2
  8439  1D91  084C               	movf	___flsub@b+1,w
  8440  1D92  00B4               	movwf	___fladd@b+1
  8441  1D93  084B               	movf	___flsub@b,w
  8442  1D94  00B3               	movwf	___fladd@b
  8443  1D95  084A               	movf	___flsub@a+3,w
  8444  1D96  00BA               	movwf	___fladd@a+3
  8445  1D97  0849               	movf	___flsub@a+2,w
  8446  1D98  00B9               	movwf	___fladd@a+2
  8447  1D99  0848               	movf	___flsub@a+1,w
  8448  1D9A  00B8               	movwf	___fladd@a+1
  8449  1D9B  0847               	movf	___flsub@a,w
  8450  1D9C  00B7               	movwf	___fladd@a
  8451  1D9D  120A  158A  22E2  160A  158A  	fcall	___fladd
  8452  1DA2  1283               	bcf	3,5	;RP0=0, select bank0
  8453  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
  8454  1DA4  0836               	movf	?___fladd+3,w
  8455  1DA5  00CA               	movwf	?___flsub+3
  8456  1DA6  0835               	movf	?___fladd+2,w
  8457  1DA7  00C9               	movwf	?___flsub+2
  8458  1DA8  0834               	movf	?___fladd+1,w
  8459  1DA9  00C8               	movwf	?___flsub+1
  8460  1DAA  0833               	movf	?___fladd,w
  8461  1DAB  00C7               	movwf	?___flsub
  8462  1DAC                     l748:
  8463  1DAC  0008               	return
  8464  1DAD                     __end_of___flsub:
  8465                           
  8466                           	psect	text31
  8467  0AE2                     __ptext31:	
  8468 ;; *************** function ___fladd *****************
  8469 ;; Defined at:
  8470 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  b               4   19[BANK0 ] long 
  8473 ;;  a               4   23[BANK0 ] long 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;  grs             1   38[BANK0 ] unsigned char 
  8476 ;;  bexp            1   37[BANK0 ] unsigned char 
  8477 ;;  aexp            1   36[BANK0 ] unsigned char 
  8478 ;;  signs           1   35[BANK0 ] unsigned char 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  4   19[BANK0 ] unsigned char 
  8481 ;; Registers used:
  8482 ;;		wreg, status,2, status,0, btemp+1
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8488 ;;      Params:         0       8       0       0       0
  8489 ;;      Locals:         0       4       0       0       0
  8490 ;;      Temps:          0       8       0       0       0
  8491 ;;      Totals:         0      20       0       0       0
  8492 ;;Total ram usage:       20 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    1
  8495 ;; This function calls:
  8496 ;;		Nothing
  8497 ;; This function is called by:
  8498 ;;		_map
  8499 ;;		_GetTemp
  8500 ;;		___flsub
  8501 ;;		_log
  8502 ;;		_eval_poly
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           
  8507                           ;psect for function ___fladd
  8508  0AE2                     ___fladd:
  8509  0AE2                     l2236:	
  8510                           ;incstack = 0
  8511                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8512                           
  8513  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  8514  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  8515  0AE4  0836               	movf	___fladd@b+3,w
  8516  0AE5  3980               	andlw	128
  8517  0AE6  00BB               	movwf	??___fladd
  8518  0AE7  083B               	movf	??___fladd,w
  8519  0AE8  00C3               	movwf	___fladd@signs
  8520  0AE9                     l2238:
  8521  0AE9  0836               	movf	___fladd@b+3,w
  8522  0AEA  00BB               	movwf	??___fladd
  8523  0AEB  073B               	addwf	??___fladd,w
  8524  0AEC  00BC               	movwf	??___fladd+1
  8525  0AED  083C               	movf	??___fladd+1,w
  8526  0AEE  00C5               	movwf	___fladd@bexp
  8527  0AEF                     l2240:
  8528  0AEF  1FB5               	btfss	___fladd@b+2,7
  8529  0AF0  2AF2               	goto	u2241
  8530  0AF1  2AF3               	goto	u2240
  8531  0AF2                     u2241:
  8532  0AF2  2AF4               	goto	l2244
  8533  0AF3                     u2240:
  8534  0AF3                     l2242:
  8535  0AF3  1445               	bsf	___fladd@bexp,0
  8536  0AF4                     l2244:
  8537  0AF4  0845               	movf	___fladd@bexp,w
  8538  0AF5  1903               	btfsc	3,2
  8539  0AF6  2AF8               	goto	u2251
  8540  0AF7  2AF9               	goto	u2250
  8541  0AF8                     u2251:
  8542  0AF8  2B09               	goto	l2254
  8543  0AF9                     u2250:
  8544  0AF9                     l2246:
  8545  0AF9  0A45               	incf	___fladd@bexp,w
  8546  0AFA  1D03               	btfss	3,2
  8547  0AFB  2AFD               	goto	u2261
  8548  0AFC  2AFE               	goto	u2260
  8549  0AFD                     u2261:
  8550  0AFD  2B06               	goto	l2250
  8551  0AFE                     u2260:
  8552  0AFE                     l2248:
  8553  0AFE  3000               	movlw	0
  8554  0AFF  00B6               	movwf	___fladd@b+3
  8555  0B00  3000               	movlw	0
  8556  0B01  00B5               	movwf	___fladd@b+2
  8557  0B02  3000               	movlw	0
  8558  0B03  00B4               	movwf	___fladd@b+1
  8559  0B04  3000               	movlw	0
  8560  0B05  00B3               	movwf	___fladd@b
  8561  0B06                     l2250:
  8562  0B06  17B5               	bsf	___fladd@b+2,7
  8563  0B07                     l2252:
  8564  0B07  01B6               	clrf	___fladd@b+3
  8565  0B08  2B11               	goto	l2256
  8566  0B09                     l2254:
  8567  0B09  3000               	movlw	0
  8568  0B0A  00B6               	movwf	___fladd@b+3
  8569  0B0B  3000               	movlw	0
  8570  0B0C  00B5               	movwf	___fladd@b+2
  8571  0B0D  3000               	movlw	0
  8572  0B0E  00B4               	movwf	___fladd@b+1
  8573  0B0F  3000               	movlw	0
  8574  0B10  00B3               	movwf	___fladd@b
  8575  0B11                     l2256:
  8576  0B11  083A               	movf	___fladd@a+3,w
  8577  0B12  3980               	andlw	128
  8578  0B13  00BB               	movwf	??___fladd
  8579  0B14  083B               	movf	??___fladd,w
  8580  0B15  00C4               	movwf	___fladd@aexp
  8581  0B16                     l2258:
  8582  0B16  0844               	movf	___fladd@aexp,w
  8583  0B17  0643               	xorwf	___fladd@signs,w
  8584  0B18  1903               	skipnz
  8585  0B19  2B1B               	goto	u2271
  8586  0B1A  2B1C               	goto	u2270
  8587  0B1B                     u2271:
  8588  0B1B  2B1D               	goto	l2262
  8589  0B1C                     u2270:
  8590  0B1C                     l2260:
  8591  0B1C  1743               	bsf	___fladd@signs,6
  8592  0B1D                     l2262:
  8593  0B1D  083A               	movf	___fladd@a+3,w
  8594  0B1E  00BB               	movwf	??___fladd
  8595  0B1F  073B               	addwf	??___fladd,w
  8596  0B20  00BC               	movwf	??___fladd+1
  8597  0B21  083C               	movf	??___fladd+1,w
  8598  0B22  00C4               	movwf	___fladd@aexp
  8599  0B23                     l2264:
  8600  0B23  1FB9               	btfss	___fladd@a+2,7
  8601  0B24  2B26               	goto	u2281
  8602  0B25  2B27               	goto	u2280
  8603  0B26                     u2281:
  8604  0B26  2B28               	goto	l2268
  8605  0B27                     u2280:
  8606  0B27                     l2266:
  8607  0B27  1444               	bsf	___fladd@aexp,0
  8608  0B28                     l2268:
  8609  0B28  0844               	movf	___fladd@aexp,w
  8610  0B29  1903               	btfsc	3,2
  8611  0B2A  2B2C               	goto	u2291
  8612  0B2B  2B2D               	goto	u2290
  8613  0B2C                     u2291:
  8614  0B2C  2B3D               	goto	l2278
  8615  0B2D                     u2290:
  8616  0B2D                     l2270:
  8617  0B2D  0A44               	incf	___fladd@aexp,w
  8618  0B2E  1D03               	btfss	3,2
  8619  0B2F  2B31               	goto	u2301
  8620  0B30  2B32               	goto	u2300
  8621  0B31                     u2301:
  8622  0B31  2B3A               	goto	l2274
  8623  0B32                     u2300:
  8624  0B32                     l2272:
  8625  0B32  3000               	movlw	0
  8626  0B33  00BA               	movwf	___fladd@a+3
  8627  0B34  3000               	movlw	0
  8628  0B35  00B9               	movwf	___fladd@a+2
  8629  0B36  3000               	movlw	0
  8630  0B37  00B8               	movwf	___fladd@a+1
  8631  0B38  3000               	movlw	0
  8632  0B39  00B7               	movwf	___fladd@a
  8633  0B3A                     l2274:
  8634  0B3A  17B9               	bsf	___fladd@a+2,7
  8635  0B3B                     l2276:
  8636  0B3B  01BA               	clrf	___fladd@a+3
  8637  0B3C  2B45               	goto	l702
  8638  0B3D                     l2278:
  8639  0B3D  3000               	movlw	0
  8640  0B3E  00BA               	movwf	___fladd@a+3
  8641  0B3F  3000               	movlw	0
  8642  0B40  00B9               	movwf	___fladd@a+2
  8643  0B41  3000               	movlw	0
  8644  0B42  00B8               	movwf	___fladd@a+1
  8645  0B43  3000               	movlw	0
  8646  0B44  00B7               	movwf	___fladd@a
  8647  0B45                     l702:
  8648  0B45  0845               	movf	___fladd@bexp,w
  8649  0B46  0244               	subwf	___fladd@aexp,w
  8650  0B47  1803               	skipnc
  8651  0B48  2B4A               	goto	u2311
  8652  0B49  2B4B               	goto	u2310
  8653  0B4A                     u2311:
  8654  0B4A  2B8F               	goto	l2314
  8655  0B4B                     u2310:
  8656  0B4B                     l2280:
  8657  0B4B  1F43               	btfss	___fladd@signs,6
  8658  0B4C  2B4E               	goto	u2321
  8659  0B4D  2B4F               	goto	u2320
  8660  0B4E                     u2321:
  8661  0B4E  2B53               	goto	l2284
  8662  0B4F                     u2320:
  8663  0B4F                     l2282:
  8664  0B4F  3080               	movlw	128
  8665  0B50  00BB               	movwf	??___fladd
  8666  0B51  083B               	movf	??___fladd,w
  8667  0B52  06C3               	xorwf	___fladd@signs,f
  8668  0B53                     l2284:
  8669  0B53  0845               	movf	___fladd@bexp,w
  8670  0B54  00BB               	movwf	??___fladd
  8671  0B55  083B               	movf	??___fladd,w
  8672  0B56  00C6               	movwf	___fladd@grs
  8673  0B57                     l2286:
  8674  0B57  0844               	movf	___fladd@aexp,w
  8675  0B58  00BB               	movwf	??___fladd
  8676  0B59  083B               	movf	??___fladd,w
  8677  0B5A  00C5               	movwf	___fladd@bexp
  8678  0B5B                     l2288:
  8679  0B5B  0846               	movf	___fladd@grs,w
  8680  0B5C  00BB               	movwf	??___fladd
  8681  0B5D  083B               	movf	??___fladd,w
  8682  0B5E  00C4               	movwf	___fladd@aexp
  8683  0B5F                     l2290:
  8684  0B5F  0833               	movf	___fladd@b,w
  8685  0B60  00BB               	movwf	??___fladd
  8686  0B61  083B               	movf	??___fladd,w
  8687  0B62  00C6               	movwf	___fladd@grs
  8688  0B63                     l2292:
  8689  0B63  0837               	movf	___fladd@a,w
  8690  0B64  00BB               	movwf	??___fladd
  8691  0B65  083B               	movf	??___fladd,w
  8692  0B66  00B3               	movwf	___fladd@b
  8693  0B67                     l2294:
  8694  0B67  0846               	movf	___fladd@grs,w
  8695  0B68  00BB               	movwf	??___fladd
  8696  0B69  083B               	movf	??___fladd,w
  8697  0B6A  00B7               	movwf	___fladd@a
  8698  0B6B                     l2296:
  8699  0B6B  0834               	movf	___fladd@b+1,w
  8700  0B6C  00BB               	movwf	??___fladd
  8701  0B6D  083B               	movf	??___fladd,w
  8702  0B6E  00C6               	movwf	___fladd@grs
  8703  0B6F                     l2298:
  8704  0B6F  0838               	movf	___fladd@a+1,w
  8705  0B70  00BB               	movwf	??___fladd
  8706  0B71  083B               	movf	??___fladd,w
  8707  0B72  00B4               	movwf	___fladd@b+1
  8708  0B73                     l2300:
  8709  0B73  0846               	movf	___fladd@grs,w
  8710  0B74  00BB               	movwf	??___fladd
  8711  0B75  083B               	movf	??___fladd,w
  8712  0B76  00B8               	movwf	___fladd@a+1
  8713  0B77                     l2302:
  8714  0B77  0835               	movf	___fladd@b+2,w
  8715  0B78  00BB               	movwf	??___fladd
  8716  0B79  083B               	movf	??___fladd,w
  8717  0B7A  00C6               	movwf	___fladd@grs
  8718  0B7B                     l2304:
  8719  0B7B  0839               	movf	___fladd@a+2,w
  8720  0B7C  00BB               	movwf	??___fladd
  8721  0B7D  083B               	movf	??___fladd,w
  8722  0B7E  00B5               	movwf	___fladd@b+2
  8723  0B7F                     l2306:
  8724  0B7F  0846               	movf	___fladd@grs,w
  8725  0B80  00BB               	movwf	??___fladd
  8726  0B81  083B               	movf	??___fladd,w
  8727  0B82  00B9               	movwf	___fladd@a+2
  8728  0B83                     l2308:
  8729  0B83  0836               	movf	___fladd@b+3,w
  8730  0B84  00BB               	movwf	??___fladd
  8731  0B85  083B               	movf	??___fladd,w
  8732  0B86  00C6               	movwf	___fladd@grs
  8733  0B87                     l2310:
  8734  0B87  083A               	movf	___fladd@a+3,w
  8735  0B88  00BB               	movwf	??___fladd
  8736  0B89  083B               	movf	??___fladd,w
  8737  0B8A  00B6               	movwf	___fladd@b+3
  8738  0B8B                     l2312:
  8739  0B8B  0846               	movf	___fladd@grs,w
  8740  0B8C  00BB               	movwf	??___fladd
  8741  0B8D  083B               	movf	??___fladd,w
  8742  0B8E  00BA               	movwf	___fladd@a+3
  8743  0B8F                     l2314:
  8744  0B8F  01C6               	clrf	___fladd@grs
  8745  0B90                     l2316:
  8746  0B90  0844               	movf	___fladd@aexp,w
  8747  0B91  00BB               	movwf	??___fladd
  8748  0B92  01BC               	clrf	??___fladd+1
  8749  0B93  083C               	movf	??___fladd+1,w
  8750  0B94  00BE               	movwf	??___fladd+3
  8751  0B95  0845               	movf	___fladd@bexp,w
  8752  0B96  023B               	subwf	??___fladd,w
  8753  0B97  00BD               	movwf	??___fladd+2
  8754  0B98  1C03               	skipc
  8755  0B99  03BE               	decf	??___fladd+3,f
  8756  0B9A  083E               	movf	??___fladd+3,w
  8757  0B9B  3A80               	xorlw	128
  8758  0B9C  00FF               	movwf	btemp+1
  8759  0B9D  3080               	movlw	128
  8760  0B9E  027F               	subwf	btemp+1,w
  8761  0B9F  1D03               	skipz
  8762  0BA0  2BA3               	goto	u2335
  8763  0BA1  301A               	movlw	26
  8764  0BA2  023D               	subwf	??___fladd+2,w
  8765  0BA3                     u2335:
  8766  0BA3  1C03               	skipc
  8767  0BA4  2BA6               	goto	u2331
  8768  0BA5  2BA7               	goto	u2330
  8769  0BA6                     u2331:
  8770  0BA6  2BE4               	goto	l2332
  8771  0BA7                     u2330:
  8772  0BA7                     l2318:
  8773  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  8774  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  8775  0BA9  0836               	movf	___fladd@b+3,w
  8776  0BAA  0435               	iorwf	___fladd@b+2,w
  8777  0BAB  0434               	iorwf	___fladd@b+1,w
  8778  0BAC  0433               	iorwf	___fladd@b,w
  8779  0BAD  1D03               	skipz
  8780  0BAE  2BB0               	goto	u2341
  8781  0BAF  2BB2               	goto	u2340
  8782  0BB0                     u2341:
  8783  0BB0  3001               	movlw	1
  8784  0BB1  2BB3               	goto	u2350
  8785  0BB2                     u2340:
  8786  0BB2  3000               	movlw	0
  8787  0BB3                     u2350:
  8788  0BB3  00BB               	movwf	??___fladd
  8789  0BB4  083B               	movf	??___fladd,w
  8790  0BB5  00C6               	movwf	___fladd@grs
  8791  0BB6  3000               	movlw	0
  8792  0BB7  00B6               	movwf	___fladd@b+3
  8793  0BB8  3000               	movlw	0
  8794  0BB9  00B5               	movwf	___fladd@b+2
  8795  0BBA  3000               	movlw	0
  8796  0BBB  00B4               	movwf	___fladd@b+1
  8797  0BBC  3000               	movlw	0
  8798  0BBD  00B3               	movwf	___fladd@b
  8799  0BBE  0844               	movf	___fladd@aexp,w
  8800  0BBF  00BB               	movwf	??___fladd
  8801  0BC0  083B               	movf	??___fladd,w
  8802  0BC1  00C5               	movwf	___fladd@bexp
  8803  0BC2  2BEC               	goto	l706
  8804  0BC3                     l708:
  8805  0BC3  1C46               	btfss	___fladd@grs,0
  8806  0BC4  2BC6               	goto	u2361
  8807  0BC5  2BC7               	goto	u2360
  8808  0BC6                     u2361:
  8809  0BC6  2BD0               	goto	l2322
  8810  0BC7                     u2360:
  8811  0BC7                     l2320:
  8812  0BC7  0846               	movf	___fladd@grs,w
  8813  0BC8  00BB               	movwf	??___fladd
  8814  0BC9  1003               	clrc
  8815  0BCA  0C3B               	rrf	??___fladd,w
  8816  0BCB  3801               	iorlw	1
  8817  0BCC  00BC               	movwf	??___fladd+1
  8818  0BCD  083C               	movf	??___fladd+1,w
  8819  0BCE  00C6               	movwf	___fladd@grs
  8820  0BCF  2BD2               	goto	l2324
  8821  0BD0                     l2322:
  8822  0BD0  1003               	clrc
  8823  0BD1  0CC6               	rrf	___fladd@grs,f
  8824  0BD2                     l2324:
  8825  0BD2  1C33               	btfss	___fladd@b,0
  8826  0BD3  2BD5               	goto	u2371
  8827  0BD4  2BD6               	goto	u2370
  8828  0BD5                     u2371:
  8829  0BD5  2BD7               	goto	l2328
  8830  0BD6                     u2370:
  8831  0BD6                     l2326:
  8832  0BD6  17C6               	bsf	___fladd@grs,7
  8833  0BD7                     l2328:
  8834  0BD7  3001               	movlw	1
  8835  0BD8  00BB               	movwf	??___fladd
  8836  0BD9                     u2385:
  8837  0BD9  0D36               	rlf	___fladd@b+3,w
  8838  0BDA  0CB6               	rrf	___fladd@b+3,f
  8839  0BDB  0CB5               	rrf	___fladd@b+2,f
  8840  0BDC  0CB4               	rrf	___fladd@b+1,f
  8841  0BDD  0CB3               	rrf	___fladd@b,f
  8842  0BDE  0BBB               	decfsz	??___fladd& (0+127),f
  8843  0BDF  2BD9               	goto	u2385
  8844  0BE0                     l2330:
  8845  0BE0  3001               	movlw	1
  8846  0BE1  00BB               	movwf	??___fladd
  8847  0BE2  083B               	movf	??___fladd,w
  8848  0BE3  07C5               	addwf	___fladd@bexp,f
  8849  0BE4                     l2332:
  8850  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  8851  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  8852  0BE6  0844               	movf	___fladd@aexp,w
  8853  0BE7  0245               	subwf	___fladd@bexp,w
  8854  0BE8  1C03               	skipc
  8855  0BE9  2BEB               	goto	u2391
  8856  0BEA  2BEC               	goto	u2390
  8857  0BEB                     u2391:
  8858  0BEB  2BC3               	goto	l708
  8859  0BEC                     u2390:
  8860  0BEC                     l706:
  8861  0BEC  1B43               	btfsc	___fladd@signs,6
  8862  0BED  2BEF               	goto	u2401
  8863  0BEE  2BF0               	goto	u2400
  8864  0BEF                     u2401:
  8865  0BEF  2C3B               	goto	l2358
  8866  0BF0                     u2400:
  8867  0BF0                     l2334:
  8868  0BF0  0845               	movf	___fladd@bexp,w
  8869  0BF1  1D03               	btfss	3,2
  8870  0BF2  2BF4               	goto	u2411
  8871  0BF3  2BF5               	goto	u2410
  8872  0BF4                     u2411:
  8873  0BF4  2BFE               	goto	l2340
  8874  0BF5                     u2410:
  8875  0BF5                     l2336:
  8876  0BF5  3000               	movlw	0
  8877  0BF6  00B6               	movwf	?___fladd+3
  8878  0BF7  3000               	movlw	0
  8879  0BF8  00B5               	movwf	?___fladd+2
  8880  0BF9  3000               	movlw	0
  8881  0BFA  00B4               	movwf	?___fladd+1
  8882  0BFB  3000               	movlw	0
  8883  0BFC  00B3               	movwf	?___fladd
  8884  0BFD  2D69               	goto	l715
  8885  0BFE                     l2340:
  8886  0BFE  0837               	movf	___fladd@a,w
  8887  0BFF  07B3               	addwf	___fladd@b,f
  8888  0C00  0838               	movf	___fladd@a+1,w
  8889  0C01  1103               	clrz
  8890  0C02  1803               	skipnc
  8891  0C03  3E01               	addlw	1
  8892  0C04  1903               	skipnz
  8893  0C05  2C07               	goto	u2421
  8894  0C06  07B4               	addwf	___fladd@b+1,f
  8895  0C07                     u2421:
  8896  0C07  0839               	movf	___fladd@a+2,w
  8897  0C08  1103               	clrz
  8898  0C09  1803               	skipnc
  8899  0C0A  3E01               	addlw	1
  8900  0C0B  1903               	skipnz
  8901  0C0C  2C0E               	goto	u2422
  8902  0C0D  07B5               	addwf	___fladd@b+2,f
  8903  0C0E                     u2422:
  8904  0C0E  083A               	movf	___fladd@a+3,w
  8905  0C0F  1103               	clrz
  8906  0C10  1803               	skipnc
  8907  0C11  3E01               	addlw	1
  8908  0C12  1903               	skipnz
  8909  0C13  2C15               	goto	u2423
  8910  0C14  07B6               	addwf	___fladd@b+3,f
  8911  0C15                     u2423:
  8912  0C15                     l2342:
  8913  0C15  1C36               	btfss	___fladd@b+3,0
  8914  0C16  2C18               	goto	u2431
  8915  0C17  2C19               	goto	u2430
  8916  0C18                     u2431:
  8917  0C18  2CEF               	goto	l2392
  8918  0C19                     u2430:
  8919  0C19                     l2344:
  8920  0C19  1C46               	btfss	___fladd@grs,0
  8921  0C1A  2C1C               	goto	u2441
  8922  0C1B  2C1D               	goto	u2440
  8923  0C1C                     u2441:
  8924  0C1C  2C26               	goto	l2348
  8925  0C1D                     u2440:
  8926  0C1D                     l2346:
  8927  0C1D  0846               	movf	___fladd@grs,w
  8928  0C1E  00BB               	movwf	??___fladd
  8929  0C1F  1003               	clrc
  8930  0C20  0C3B               	rrf	??___fladd,w
  8931  0C21  3801               	iorlw	1
  8932  0C22  00BC               	movwf	??___fladd+1
  8933  0C23  083C               	movf	??___fladd+1,w
  8934  0C24  00C6               	movwf	___fladd@grs
  8935  0C25  2C28               	goto	l2350
  8936  0C26                     l2348:
  8937  0C26  1003               	clrc
  8938  0C27  0CC6               	rrf	___fladd@grs,f
  8939  0C28                     l2350:
  8940  0C28  1C33               	btfss	___fladd@b,0
  8941  0C29  2C2B               	goto	u2451
  8942  0C2A  2C2C               	goto	u2450
  8943  0C2B                     u2451:
  8944  0C2B  2C2D               	goto	l2354
  8945  0C2C                     u2450:
  8946  0C2C                     l2352:
  8947  0C2C  17C6               	bsf	___fladd@grs,7
  8948  0C2D                     l2354:
  8949  0C2D  3001               	movlw	1
  8950  0C2E  00BB               	movwf	??___fladd
  8951  0C2F                     u2465:
  8952  0C2F  0D36               	rlf	___fladd@b+3,w
  8953  0C30  0CB6               	rrf	___fladd@b+3,f
  8954  0C31  0CB5               	rrf	___fladd@b+2,f
  8955  0C32  0CB4               	rrf	___fladd@b+1,f
  8956  0C33  0CB3               	rrf	___fladd@b,f
  8957  0C34  0BBB               	decfsz	??___fladd& (0+127),f
  8958  0C35  2C2F               	goto	u2465
  8959  0C36                     l2356:
  8960  0C36  3001               	movlw	1
  8961  0C37  00BB               	movwf	??___fladd
  8962  0C38  083B               	movf	??___fladd,w
  8963  0C39  07C5               	addwf	___fladd@bexp,f
  8964  0C3A  2CEF               	goto	l2392
  8965  0C3B                     l2358:
  8966  0C3B  0836               	movf	___fladd@b+3,w
  8967  0C3C  3A80               	xorlw	128
  8968  0C3D  00FF               	movwf	btemp+1
  8969  0C3E  083A               	movf	___fladd@a+3,w
  8970  0C3F  3A80               	xorlw	128
  8971  0C40  027F               	subwf	btemp+1,w
  8972  0C41  1D03               	skipz
  8973  0C42  2C4D               	goto	u2473
  8974  0C43  0839               	movf	___fladd@a+2,w
  8975  0C44  0235               	subwf	___fladd@b+2,w
  8976  0C45  1D03               	skipz
  8977  0C46  2C4D               	goto	u2473
  8978  0C47  0838               	movf	___fladd@a+1,w
  8979  0C48  0234               	subwf	___fladd@b+1,w
  8980  0C49  1D03               	skipz
  8981  0C4A  2C4D               	goto	u2473
  8982  0C4B  0837               	movf	___fladd@a,w
  8983  0C4C  0233               	subwf	___fladd@b,w
  8984  0C4D                     u2473:
  8985  0C4D  1803               	skipnc
  8986  0C4E  2C50               	goto	u2471
  8987  0C4F  2C51               	goto	u2470
  8988  0C50                     u2471:
  8989  0C50  2CA9               	goto	l2368
  8990  0C51                     u2470:
  8991  0C51                     l2360:
  8992  0C51  30FF               	movlw	255
  8993  0C52  00BB               	movwf	??___fladd
  8994  0C53  30FF               	movlw	255
  8995  0C54  00BC               	movwf	??___fladd+1
  8996  0C55  30FF               	movlw	255
  8997  0C56  00BD               	movwf	??___fladd+2
  8998  0C57  30FF               	movlw	255
  8999  0C58  00BE               	movwf	??___fladd+3
  9000  0C59  0837               	movf	___fladd@a,w
  9001  0C5A  00BF               	movwf	??___fladd+4
  9002  0C5B  0838               	movf	___fladd@a+1,w
  9003  0C5C  00C0               	movwf	??___fladd+5
  9004  0C5D  0839               	movf	___fladd@a+2,w
  9005  0C5E  00C1               	movwf	??___fladd+6
  9006  0C5F  083A               	movf	___fladd@a+3,w
  9007  0C60  00C2               	movwf	??___fladd+7
  9008  0C61  0833               	movf	___fladd@b,w
  9009  0C62  02BF               	subwf	??___fladd+4,f
  9010  0C63  0834               	movf	___fladd@b+1,w
  9011  0C64  1C03               	skipc
  9012  0C65  0F34               	incfsz	___fladd@b+1,w
  9013  0C66  2C68               	goto	u2481
  9014  0C67  2C69               	goto	u2482
  9015  0C68                     u2481:
  9016  0C68  02C0               	subwf	??___fladd+5,f
  9017  0C69                     u2482:
  9018  0C69  0835               	movf	___fladd@b+2,w
  9019  0C6A  1C03               	skipc
  9020  0C6B  0F35               	incfsz	___fladd@b+2,w
  9021  0C6C  2C6E               	goto	u2483
  9022  0C6D  2C6F               	goto	u2484
  9023  0C6E                     u2483:
  9024  0C6E  02C1               	subwf	??___fladd+6,f
  9025  0C6F                     u2484:
  9026  0C6F  0836               	movf	___fladd@b+3,w
  9027  0C70  1C03               	skipc
  9028  0C71  0F36               	incfsz	___fladd@b+3,w
  9029  0C72  2C74               	goto	u2485
  9030  0C73  2C75               	goto	u2486
  9031  0C74                     u2485:
  9032  0C74  02C2               	subwf	??___fladd+7,f
  9033  0C75                     u2486:
  9034  0C75  083F               	movf	??___fladd+4,w
  9035  0C76  07BB               	addwf	??___fladd,f
  9036  0C77  0840               	movf	??___fladd+5,w
  9037  0C78  1803               	skipnc
  9038  0C79  0F40               	incfsz	??___fladd+5,w
  9039  0C7A  2C7C               	goto	u2490
  9040  0C7B  2C7D               	goto	u2491
  9041  0C7C                     u2490:
  9042  0C7C  07BC               	addwf	??___fladd+1,f
  9043  0C7D                     u2491:
  9044  0C7D  0841               	movf	??___fladd+6,w
  9045  0C7E  1803               	skipnc
  9046  0C7F  0F41               	incfsz	??___fladd+6,w
  9047  0C80  2C82               	goto	u2492
  9048  0C81  2C83               	goto	u2493
  9049  0C82                     u2492:
  9050  0C82  07BD               	addwf	??___fladd+2,f
  9051  0C83                     u2493:
  9052  0C83  0842               	movf	??___fladd+7,w
  9053  0C84  1803               	skipnc
  9054  0C85  0A42               	incf	??___fladd+7,w
  9055  0C86  07BE               	addwf	??___fladd+3,f
  9056  0C87  083E               	movf	??___fladd+3,w
  9057  0C88  00B6               	movwf	___fladd@b+3
  9058  0C89  083D               	movf	??___fladd+2,w
  9059  0C8A  00B5               	movwf	___fladd@b+2
  9060  0C8B  083C               	movf	??___fladd+1,w
  9061  0C8C  00B4               	movwf	___fladd@b+1
  9062  0C8D  083B               	movf	??___fladd,w
  9063  0C8E  00B3               	movwf	___fladd@b
  9064  0C8F                     l2362:
  9065  0C8F  3080               	movlw	128
  9066  0C90  00BB               	movwf	??___fladd
  9067  0C91  083B               	movf	??___fladd,w
  9068  0C92  06C3               	xorwf	___fladd@signs,f
  9069  0C93  09C6               	comf	___fladd@grs,f
  9070  0C94  0AC6               	incf	___fladd@grs,f
  9071  0C95                     l2364:
  9072  0C95  0846               	movf	___fladd@grs,w
  9073  0C96  1D03               	btfss	3,2
  9074  0C97  2C99               	goto	u2501
  9075  0C98  2C9A               	goto	u2500
  9076  0C99                     u2501:
  9077  0C99  2CB7               	goto	l723
  9078  0C9A                     u2500:
  9079  0C9A                     l2366:
  9080  0C9A  3001               	movlw	1
  9081  0C9B  07B3               	addwf	___fladd@b,f
  9082  0C9C  3000               	movlw	0
  9083  0C9D  1803               	skipnc
  9084  0C9E  3001               	movlw	1
  9085  0C9F  07B4               	addwf	___fladd@b+1,f
  9086  0CA0  3000               	movlw	0
  9087  0CA1  1803               	skipnc
  9088  0CA2  3001               	movlw	1
  9089  0CA3  07B5               	addwf	___fladd@b+2,f
  9090  0CA4  3000               	movlw	0
  9091  0CA5  1803               	skipnc
  9092  0CA6  3001               	movlw	1
  9093  0CA7  07B6               	addwf	___fladd@b+3,f
  9094  0CA8  2CB7               	goto	l723
  9095  0CA9                     l2368:
  9096  0CA9  0837               	movf	___fladd@a,w
  9097  0CAA  02B3               	subwf	___fladd@b,f
  9098  0CAB  0838               	movf	___fladd@a+1,w
  9099  0CAC  1C03               	skipc
  9100  0CAD  0F38               	incfsz	___fladd@a+1,w
  9101  0CAE  02B4               	subwf	___fladd@b+1,f
  9102  0CAF  0839               	movf	___fladd@a+2,w
  9103  0CB0  1C03               	skipc
  9104  0CB1  0F39               	incfsz	___fladd@a+2,w
  9105  0CB2  02B5               	subwf	___fladd@b+2,f
  9106  0CB3  083A               	movf	___fladd@a+3,w
  9107  0CB4  1C03               	skipc
  9108  0CB5  0F3A               	incfsz	___fladd@a+3,w
  9109  0CB6  02B6               	subwf	___fladd@b+3,f
  9110  0CB7                     l723:
  9111  0CB7  0836               	movf	___fladd@b+3,w
  9112  0CB8  0435               	iorwf	___fladd@b+2,w
  9113  0CB9  0434               	iorwf	___fladd@b+1,w
  9114  0CBA  0433               	iorwf	___fladd@b,w
  9115  0CBB  1D03               	skipz
  9116  0CBC  2CBE               	goto	u2511
  9117  0CBD  2CBF               	goto	u2510
  9118  0CBE                     u2511:
  9119  0CBE  2CEB               	goto	l2390
  9120  0CBF                     u2510:
  9121  0CBF                     l2370:
  9122  0CBF  0846               	movf	___fladd@grs,w
  9123  0CC0  1D03               	btfss	3,2
  9124  0CC1  2CC3               	goto	u2521
  9125  0CC2  2CC4               	goto	u2520
  9126  0CC3                     u2521:
  9127  0CC3  2CEB               	goto	l2390
  9128  0CC4                     u2520:
  9129  0CC4                     l2372:
  9130  0CC4  3000               	movlw	0
  9131  0CC5  00B6               	movwf	?___fladd+3
  9132  0CC6  3000               	movlw	0
  9133  0CC7  00B5               	movwf	?___fladd+2
  9134  0CC8  3000               	movlw	0
  9135  0CC9  00B4               	movwf	?___fladd+1
  9136  0CCA  3000               	movlw	0
  9137  0CCB  00B3               	movwf	?___fladd
  9138  0CCC  2D69               	goto	l715
  9139  0CCD                     l2376:
  9140  0CCD  3001               	movlw	1
  9141  0CCE  00BB               	movwf	??___fladd
  9142  0CCF                     u2535:
  9143  0CCF  1003               	clrc
  9144  0CD0  0DB3               	rlf	___fladd@b,f
  9145  0CD1  0DB4               	rlf	___fladd@b+1,f
  9146  0CD2  0DB5               	rlf	___fladd@b+2,f
  9147  0CD3  0DB6               	rlf	___fladd@b+3,f
  9148  0CD4  0BBB               	decfsz	??___fladd,f
  9149  0CD5  2CCF               	goto	u2535
  9150  0CD6                     l2378:
  9151  0CD6  1FC6               	btfss	___fladd@grs,7
  9152  0CD7  2CD9               	goto	u2541
  9153  0CD8  2CDA               	goto	u2540
  9154  0CD9                     u2541:
  9155  0CD9  2CDB               	goto	l727
  9156  0CDA                     u2540:
  9157  0CDA                     l2380:
  9158  0CDA  1433               	bsf	___fladd@b,0
  9159  0CDB                     l727:
  9160  0CDB  1C46               	btfss	___fladd@grs,0
  9161  0CDC  2CDE               	goto	u2551
  9162  0CDD  2CDF               	goto	u2550
  9163  0CDE                     u2551:
  9164  0CDE  2CE2               	goto	l2384
  9165  0CDF                     u2550:
  9166  0CDF                     l2382:
  9167  0CDF  1403               	setc
  9168  0CE0  0DC6               	rlf	___fladd@grs,f
  9169  0CE1  2CE4               	goto	l2386
  9170  0CE2                     l2384:
  9171  0CE2  1003               	clrc
  9172  0CE3  0DC6               	rlf	___fladd@grs,f
  9173  0CE4                     l2386:
  9174  0CE4  0845               	movf	___fladd@bexp,w
  9175  0CE5  1903               	btfsc	3,2
  9176  0CE6  2CE8               	goto	u2561
  9177  0CE7  2CE9               	goto	u2560
  9178  0CE8                     u2561:
  9179  0CE8  2CEB               	goto	l2390
  9180  0CE9                     u2560:
  9181  0CE9                     l2388:
  9182  0CE9  3001               	movlw	1
  9183  0CEA  02C5               	subwf	___fladd@bexp,f
  9184  0CEB                     l2390:
  9185  0CEB  1FB5               	btfss	___fladd@b+2,7
  9186  0CEC  2CEE               	goto	u2571
  9187  0CED  2CEF               	goto	u2570
  9188  0CEE                     u2571:
  9189  0CEE  2CCD               	goto	l2376
  9190  0CEF                     u2570:
  9191  0CEF                     l2392:
  9192  0CEF  01C4               	clrf	___fladd@aexp
  9193  0CF0                     l2394:
  9194  0CF0  1FC6               	btfss	___fladd@grs,7
  9195  0CF1  2CF3               	goto	u2581
  9196  0CF2  2CF4               	goto	u2580
  9197  0CF3                     u2581:
  9198  0CF3  2D02               	goto	l2402
  9199  0CF4                     u2580:
  9200  0CF4                     l2396:
  9201  0CF4  0846               	movf	___fladd@grs,w
  9202  0CF5  397F               	andlw	127
  9203  0CF6  1903               	btfsc	3,2
  9204  0CF7  2CF9               	goto	u2591
  9205  0CF8  2CFA               	goto	u2590
  9206  0CF9                     u2591:
  9207  0CF9  2CFD               	goto	l733
  9208  0CFA                     u2590:
  9209  0CFA                     l2398:
  9210  0CFA  01C4               	clrf	___fladd@aexp
  9211  0CFB  0AC4               	incf	___fladd@aexp,f
  9212  0CFC  2D02               	goto	l2402
  9213  0CFD                     l733:
  9214  0CFD  1C33               	btfss	___fladd@b,0
  9215  0CFE  2D00               	goto	u2601
  9216  0CFF  2D01               	goto	u2600
  9217  0D00                     u2601:
  9218  0D00  2D02               	goto	l2402
  9219  0D01                     u2600:
  9220  0D01  2CFA               	goto	l2398
  9221  0D02                     l2402:
  9222  0D02  0844               	movf	___fladd@aexp,w
  9223  0D03  1903               	btfsc	3,2
  9224  0D04  2D06               	goto	u2611
  9225  0D05  2D07               	goto	u2610
  9226  0D06                     u2611:
  9227  0D06  2D3B               	goto	l736
  9228  0D07                     u2610:
  9229  0D07                     l2404:
  9230  0D07  3001               	movlw	1
  9231  0D08  07B3               	addwf	___fladd@b,f
  9232  0D09  3000               	movlw	0
  9233  0D0A  1803               	skipnc
  9234  0D0B  3001               	movlw	1
  9235  0D0C  07B4               	addwf	___fladd@b+1,f
  9236  0D0D  3000               	movlw	0
  9237  0D0E  1803               	skipnc
  9238  0D0F  3001               	movlw	1
  9239  0D10  07B5               	addwf	___fladd@b+2,f
  9240  0D11  3000               	movlw	0
  9241  0D12  1803               	skipnc
  9242  0D13  3001               	movlw	1
  9243  0D14  07B6               	addwf	___fladd@b+3,f
  9244  0D15                     l2406:
  9245  0D15  1C36               	btfss	___fladd@b+3,0
  9246  0D16  2D18               	goto	u2621
  9247  0D17  2D19               	goto	u2620
  9248  0D18                     u2621:
  9249  0D18  2D3B               	goto	l736
  9250  0D19                     u2620:
  9251  0D19                     l2408:
  9252  0D19  0833               	movf	___fladd@b,w
  9253  0D1A  00BB               	movwf	??___fladd
  9254  0D1B  0834               	movf	___fladd@b+1,w
  9255  0D1C  00BC               	movwf	??___fladd+1
  9256  0D1D  0835               	movf	___fladd@b+2,w
  9257  0D1E  00BD               	movwf	??___fladd+2
  9258  0D1F  0836               	movf	___fladd@b+3,w
  9259  0D20  00BE               	movwf	??___fladd+3
  9260  0D21  3001               	movlw	1
  9261  0D22  00BF               	movwf	??___fladd+4
  9262  0D23                     u2635:
  9263  0D23  0D3E               	rlf	??___fladd+3,w
  9264  0D24  0CBE               	rrf	??___fladd+3,f
  9265  0D25  0CBD               	rrf	??___fladd+2,f
  9266  0D26  0CBC               	rrf	??___fladd+1,f
  9267  0D27  0CBB               	rrf	??___fladd,f
  9268  0D28                     u2630:
  9269  0D28  0BBF               	decfsz	??___fladd+4,f
  9270  0D29  2D23               	goto	u2635
  9271  0D2A  083E               	movf	??___fladd+3,w
  9272  0D2B  00B6               	movwf	___fladd@b+3
  9273  0D2C  083D               	movf	??___fladd+2,w
  9274  0D2D  00B5               	movwf	___fladd@b+2
  9275  0D2E  083C               	movf	??___fladd+1,w
  9276  0D2F  00B4               	movwf	___fladd@b+1
  9277  0D30  083B               	movf	??___fladd,w
  9278  0D31  00B3               	movwf	___fladd@b
  9279  0D32  0A45               	incf	___fladd@bexp,w
  9280  0D33  1903               	btfsc	3,2
  9281  0D34  2D36               	goto	u2641
  9282  0D35  2D37               	goto	u2640
  9283  0D36                     u2641:
  9284  0D36  2D3B               	goto	l736
  9285  0D37                     u2640:
  9286  0D37                     l2410:
  9287  0D37  3001               	movlw	1
  9288  0D38  00BB               	movwf	??___fladd
  9289  0D39  083B               	movf	??___fladd,w
  9290  0D3A  07C5               	addwf	___fladd@bexp,f
  9291  0D3B                     l736:
  9292  0D3B  0A45               	incf	___fladd@bexp,w
  9293  0D3C  1903               	btfsc	3,2
  9294  0D3D  2D3F               	goto	u2651
  9295  0D3E  2D40               	goto	u2650
  9296  0D3F                     u2651:
  9297  0D3F  2D45               	goto	l2414
  9298  0D40                     u2650:
  9299  0D40                     l2412:
  9300  0D40  0845               	movf	___fladd@bexp,w
  9301  0D41  1D03               	btfss	3,2
  9302  0D42  2D44               	goto	u2661
  9303  0D43  2D45               	goto	u2660
  9304  0D44                     u2661:
  9305  0D44  2D53               	goto	l2420
  9306  0D45                     u2660:
  9307  0D45                     l2414:
  9308  0D45  3000               	movlw	0
  9309  0D46  00B6               	movwf	___fladd@b+3
  9310  0D47  3000               	movlw	0
  9311  0D48  00B5               	movwf	___fladd@b+2
  9312  0D49  3000               	movlw	0
  9313  0D4A  00B4               	movwf	___fladd@b+1
  9314  0D4B  3000               	movlw	0
  9315  0D4C  00B3               	movwf	___fladd@b
  9316  0D4D                     l2416:
  9317  0D4D  0845               	movf	___fladd@bexp,w
  9318  0D4E  1D03               	btfss	3,2
  9319  0D4F  2D51               	goto	u2671
  9320  0D50  2D52               	goto	u2670
  9321  0D51                     u2671:
  9322  0D51  2D53               	goto	l2420
  9323  0D52                     u2670:
  9324  0D52                     l2418:
  9325  0D52  01C3               	clrf	___fladd@signs
  9326  0D53                     l2420:
  9327  0D53  1C45               	btfss	___fladd@bexp,0
  9328  0D54  2D56               	goto	u2681
  9329  0D55  2D57               	goto	u2680
  9330  0D56                     u2681:
  9331  0D56  2D59               	goto	l2424
  9332  0D57                     u2680:
  9333  0D57                     l2422:
  9334  0D57  17B5               	bsf	___fladd@b+2,7
  9335  0D58  2D5D               	goto	l744
  9336  0D59                     l2424:
  9337  0D59  307F               	movlw	127
  9338  0D5A  00BB               	movwf	??___fladd
  9339  0D5B  083B               	movf	??___fladd,w
  9340  0D5C  05B5               	andwf	___fladd@b+2,f
  9341  0D5D                     l744:
  9342  0D5D  0845               	movf	___fladd@bexp,w
  9343  0D5E  00BB               	movwf	??___fladd
  9344  0D5F  1003               	clrc
  9345  0D60  0C3B               	rrf	??___fladd,w
  9346  0D61  00BC               	movwf	??___fladd+1
  9347  0D62  083C               	movf	??___fladd+1,w
  9348  0D63  00B6               	movwf	___fladd@b+3
  9349  0D64                     l2426:
  9350  0D64  1FC3               	btfss	___fladd@signs,7
  9351  0D65  2D67               	goto	u2691
  9352  0D66  2D68               	goto	u2690
  9353  0D67                     u2691:
  9354  0D67  2D69               	goto	l745
  9355  0D68                     u2690:
  9356  0D68                     l2428:
  9357  0D68  17B6               	bsf	___fladd@b+3,7
  9358  0D69                     l745:
  9359  0D69                     l715:
  9360  0D69  0008               	return
  9361  0D6A                     __end_of___fladd:
  9362                           
  9363                           	psect	text32
  9364  087F                     __ptext32:	
  9365 ;; *************** function ___fldiv *****************
  9366 ;; Defined at:
  9367 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcdiv.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;  a               4    0[BANK1 ] unsigned char 
  9370 ;;  b               4    4[BANK1 ] unsigned char 
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;  grs             4   15[BANK1 ] unsigned long 
  9373 ;;  rem             4    8[BANK1 ] unsigned long 
  9374 ;;  new_exp         2   13[BANK1 ] int 
  9375 ;;  aexp            1   20[BANK1 ] unsigned char 
  9376 ;;  bexp            1   19[BANK1 ] unsigned char 
  9377 ;;  sign            1   12[BANK1 ] unsigned char 
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  4    0[BANK1 ] unsigned char 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0, btemp+1
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9387 ;;      Params:         0       0       8       0       0
  9388 ;;      Locals:         0       0      13       0       0
  9389 ;;      Temps:          0       5       0       0       0
  9390 ;;      Totals:         0       5      21       0       0
  9391 ;;Total ram usage:       26 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:    1
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_map
  9398 ;;		_GetTemp
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           
  9403                           ;psect for function ___fldiv
  9404  087F                     ___fldiv:
  9405  087F                     l3724:	
  9406                           ;incstack = 0
  9407                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9408                           
  9409  087F  1683               	bsf	3,5	;RP0=1, select bank1
  9410  0880  1303               	bcf	3,6	;RP1=0, select bank1
  9411  0881  0827               	movf	(___fldiv@b^(0+128)+3),w
  9412  0882  3980               	andlw	128
  9413  0883  1283               	bcf	3,5	;RP0=0, select bank0
  9414  0884  1303               	bcf	3,6	;RP1=0, select bank0
  9415  0885  00E9               	movwf	??___fldiv
  9416  0886  0869               	movf	??___fldiv,w
  9417  0887  1683               	bsf	3,5	;RP0=1, select bank1
  9418  0888  1303               	bcf	3,6	;RP1=0, select bank1
  9419  0889  00AC               	movwf	___fldiv@sign^(0+128)
  9420  088A                     l3726:
  9421  088A  0827               	movf	(___fldiv@b^(0+128)+3),w
  9422  088B  1283               	bcf	3,5	;RP0=0, select bank0
  9423  088C  1303               	bcf	3,6	;RP1=0, select bank0
  9424  088D  00E9               	movwf	??___fldiv
  9425  088E  0769               	addwf	??___fldiv,w
  9426  088F  00EA               	movwf	??___fldiv+1
  9427  0890  086A               	movf	??___fldiv+1,w
  9428  0891  1683               	bsf	3,5	;RP0=1, select bank1
  9429  0892  1303               	bcf	3,6	;RP1=0, select bank1
  9430  0893  00B3               	movwf	___fldiv@bexp^(0+128)
  9431  0894                     l3728:
  9432  0894  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
  9433  0895  2897               	goto	u5031
  9434  0896  2898               	goto	u5030
  9435  0897                     u5031:
  9436  0897  2899               	goto	l3732
  9437  0898                     u5030:
  9438  0898                     l3730:
  9439  0898  1433               	bsf	___fldiv@bexp^(0+128),0
  9440  0899                     l3732:
  9441  0899  0833               	movf	___fldiv@bexp^(0+128),w
  9442  089A  1903               	btfsc	3,2
  9443  089B  289D               	goto	u5041
  9444  089C  289E               	goto	u5040
  9445  089D                     u5041:
  9446  089D  28AE               	goto	l3742
  9447  089E                     u5040:
  9448  089E                     l3734:
  9449  089E  0A33               	incf	___fldiv@bexp^(0+128),w
  9450  089F  1D03               	btfss	3,2
  9451  08A0  28A2               	goto	u5051
  9452  08A1  28A3               	goto	u5050
  9453  08A2                     u5051:
  9454  08A2  28AB               	goto	l3738
  9455  08A3                     u5050:
  9456  08A3                     l3736:
  9457  08A3  3000               	movlw	0
  9458  08A4  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9459  08A5  3000               	movlw	0
  9460  08A6  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9461  08A7  3000               	movlw	0
  9462  08A8  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9463  08A9  3000               	movlw	0
  9464  08AA  00A4               	movwf	___fldiv@b^(0+128)
  9465  08AB                     l3738:
  9466  08AB  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9467  08AC                     l3740:
  9468  08AC  01A7               	clrf	(___fldiv@b^(0+128)+3)
  9469  08AD  28B6               	goto	l3744
  9470  08AE                     l3742:
  9471  08AE  3000               	movlw	0
  9472  08AF  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9473  08B0  3000               	movlw	0
  9474  08B1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9475  08B2  3000               	movlw	0
  9476  08B3  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9477  08B4  3000               	movlw	0
  9478  08B5  00A4               	movwf	___fldiv@b^(0+128)
  9479  08B6                     l3744:
  9480  08B6  0823               	movf	(___fldiv@a^(0+128)+3),w
  9481  08B7  3980               	andlw	128
  9482  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  9483  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  9484  08BA  00E9               	movwf	??___fldiv
  9485  08BB  0869               	movf	??___fldiv,w
  9486  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  9487  08BD  1303               	bcf	3,6	;RP1=0, select bank1
  9488  08BE  06AC               	xorwf	___fldiv@sign^(0+128),f
  9489  08BF                     l3746:
  9490  08BF  0823               	movf	(___fldiv@a^(0+128)+3),w
  9491  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  9492  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  9493  08C2  00E9               	movwf	??___fldiv
  9494  08C3  0769               	addwf	??___fldiv,w
  9495  08C4  00EA               	movwf	??___fldiv+1
  9496  08C5  086A               	movf	??___fldiv+1,w
  9497  08C6  1683               	bsf	3,5	;RP0=1, select bank1
  9498  08C7  1303               	bcf	3,6	;RP1=0, select bank1
  9499  08C8  00B4               	movwf	___fldiv@aexp^(0+128)
  9500  08C9                     l3748:
  9501  08C9  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
  9502  08CA  28CC               	goto	u5061
  9503  08CB  28CD               	goto	u5060
  9504  08CC                     u5061:
  9505  08CC  28CE               	goto	l3752
  9506  08CD                     u5060:
  9507  08CD                     l3750:
  9508  08CD  1434               	bsf	___fldiv@aexp^(0+128),0
  9509  08CE                     l3752:
  9510  08CE  0834               	movf	___fldiv@aexp^(0+128),w
  9511  08CF  1903               	btfsc	3,2
  9512  08D0  28D2               	goto	u5071
  9513  08D1  28D3               	goto	u5070
  9514  08D2                     u5071:
  9515  08D2  28E3               	goto	l3762
  9516  08D3                     u5070:
  9517  08D3                     l3754:
  9518  08D3  0A34               	incf	___fldiv@aexp^(0+128),w
  9519  08D4  1D03               	btfss	3,2
  9520  08D5  28D7               	goto	u5081
  9521  08D6  28D8               	goto	u5080
  9522  08D7                     u5081:
  9523  08D7  28E0               	goto	l3758
  9524  08D8                     u5080:
  9525  08D8                     l3756:
  9526  08D8  3000               	movlw	0
  9527  08D9  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9528  08DA  3000               	movlw	0
  9529  08DB  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9530  08DC  3000               	movlw	0
  9531  08DD  00A1               	movwf	(___fldiv@a+1)^(0+128)
  9532  08DE  3000               	movlw	0
  9533  08DF  00A0               	movwf	___fldiv@a^(0+128)
  9534  08E0                     l3758:
  9535  08E0  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  9536  08E1                     l3760:
  9537  08E1  01A3               	clrf	(___fldiv@a^(0+128)+3)
  9538  08E2  28EB               	goto	l758
  9539  08E3                     l3762:
  9540  08E3  3000               	movlw	0
  9541  08E4  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9542  08E5  3000               	movlw	0
  9543  08E6  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9544  08E7  3000               	movlw	0
  9545  08E8  00A1               	movwf	(___fldiv@a+1)^(0+128)
  9546  08E9  3000               	movlw	0
  9547  08EA  00A0               	movwf	___fldiv@a^(0+128)
  9548  08EB                     l758:
  9549  08EB  0823               	movf	(___fldiv@a+3)^(0+128),w
  9550  08EC  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  9551  08ED  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  9552  08EE  0420               	iorwf	___fldiv@a^(0+128),w
  9553  08EF  1D03               	skipz
  9554  08F0  28F2               	goto	u5091
  9555  08F1  28F3               	goto	u5090
  9556  08F2                     u5091:
  9557  08F2  2910               	goto	l3772
  9558  08F3                     u5090:
  9559  08F3                     l3764:
  9560  08F3  3000               	movlw	0
  9561  08F4  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9562  08F5  3000               	movlw	0
  9563  08F6  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9564  08F7  3000               	movlw	0
  9565  08F8  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9566  08F9  3000               	movlw	0
  9567  08FA  00A4               	movwf	___fldiv@b^(0+128)
  9568  08FB  3080               	movlw	128
  9569  08FC  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  9570  08FD  307F               	movlw	127
  9571  08FE  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  9572  08FF                     l3766:
  9573  08FF  082C               	movf	___fldiv@sign^(0+128),w
  9574  0900  1283               	bcf	3,5	;RP0=0, select bank0
  9575  0901  1303               	bcf	3,6	;RP1=0, select bank0
  9576  0902  00E9               	movwf	??___fldiv
  9577  0903  0869               	movf	??___fldiv,w
  9578  0904  1683               	bsf	3,5	;RP0=1, select bank1
  9579  0905  1303               	bcf	3,6	;RP1=0, select bank1
  9580  0906  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  9581  0907                     l3768:
  9582  0907  0827               	movf	(___fldiv@b+3)^(0+128),w
  9583  0908  00A3               	movwf	(?___fldiv+3)^(0+128)
  9584  0909  0826               	movf	(___fldiv@b+2)^(0+128),w
  9585  090A  00A2               	movwf	(?___fldiv+2)^(0+128)
  9586  090B  0825               	movf	(___fldiv@b+1)^(0+128),w
  9587  090C  00A1               	movwf	(?___fldiv+1)^(0+128)
  9588  090D  0824               	movf	___fldiv@b^(0+128),w
  9589  090E  00A0               	movwf	?___fldiv^(0+128)
  9590  090F  2AE1               	goto	l760
  9591  0910                     l3772:
  9592  0910  0833               	movf	___fldiv@bexp^(0+128),w
  9593  0911  1D03               	btfss	3,2
  9594  0912  2914               	goto	u5101
  9595  0913  2915               	goto	u5100
  9596  0914                     u5101:
  9597  0914  291E               	goto	l3778
  9598  0915                     u5100:
  9599  0915                     l3774:
  9600  0915  3000               	movlw	0
  9601  0916  00A3               	movwf	(?___fldiv+3)^(0+128)
  9602  0917  3000               	movlw	0
  9603  0918  00A2               	movwf	(?___fldiv+2)^(0+128)
  9604  0919  3000               	movlw	0
  9605  091A  00A1               	movwf	(?___fldiv+1)^(0+128)
  9606  091B  3000               	movlw	0
  9607  091C  00A0               	movwf	?___fldiv^(0+128)
  9608  091D  2AE1               	goto	l760
  9609  091E                     l3778:
  9610  091E  0833               	movf	___fldiv@bexp^(0+128),w
  9611  091F  1283               	bcf	3,5	;RP0=0, select bank0
  9612  0920  1303               	bcf	3,6	;RP1=0, select bank0
  9613  0921  00E9               	movwf	??___fldiv
  9614  0922  01EA               	clrf	??___fldiv+1
  9615  0923  086A               	movf	??___fldiv+1,w
  9616  0924  00EC               	movwf	??___fldiv+3
  9617  0925  1683               	bsf	3,5	;RP0=1, select bank1
  9618  0926  1303               	bcf	3,6	;RP1=0, select bank1
  9619  0927  0834               	movf	___fldiv@aexp^(0+128),w
  9620  0928  1283               	bcf	3,5	;RP0=0, select bank0
  9621  0929  1303               	bcf	3,6	;RP1=0, select bank0
  9622  092A  0269               	subwf	??___fldiv,w
  9623  092B  00EB               	movwf	??___fldiv+2
  9624  092C  1C03               	skipc
  9625  092D  03EC               	decf	??___fldiv+3,f
  9626  092E  086B               	movf	??___fldiv+2,w
  9627  092F  3E7F               	addlw	127
  9628  0930  1683               	bsf	3,5	;RP0=1, select bank1
  9629  0931  1303               	bcf	3,6	;RP1=0, select bank1
  9630  0932  00AD               	movwf	___fldiv@new_exp^(0+128)
  9631  0933  1283               	bcf	3,5	;RP0=0, select bank0
  9632  0934  1303               	bcf	3,6	;RP1=0, select bank0
  9633  0935  086C               	movf	??___fldiv+3,w
  9634  0936  1803               	skipnc
  9635  0937  3E01               	addlw	1
  9636  0938  3E00               	addlw	0
  9637  0939  1683               	bsf	3,5	;RP0=1, select bank1
  9638  093A  1303               	bcf	3,6	;RP1=0, select bank1
  9639  093B  00AE               	movwf	(___fldiv@new_exp+1)^(0+128)
  9640  093C                     l3780:
  9641  093C  0827               	movf	(___fldiv@b+3)^(0+128),w
  9642  093D  00AB               	movwf	(___fldiv@rem+3)^(0+128)
  9643  093E  0826               	movf	(___fldiv@b+2)^(0+128),w
  9644  093F  00AA               	movwf	(___fldiv@rem+2)^(0+128)
  9645  0940  0825               	movf	(___fldiv@b+1)^(0+128),w
  9646  0941  00A9               	movwf	(___fldiv@rem+1)^(0+128)
  9647  0942  0824               	movf	___fldiv@b^(0+128),w
  9648  0943  00A8               	movwf	___fldiv@rem^(0+128)
  9649  0944                     l3782:
  9650  0944  3000               	movlw	0
  9651  0945  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9652  0946  3000               	movlw	0
  9653  0947  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9654  0948  3000               	movlw	0
  9655  0949  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9656  094A  3000               	movlw	0
  9657  094B  00A4               	movwf	___fldiv@b^(0+128)
  9658  094C                     l3784:
  9659  094C  3000               	movlw	0
  9660  094D  00B2               	movwf	(___fldiv@grs+3)^(0+128)
  9661  094E  3000               	movlw	0
  9662  094F  00B1               	movwf	(___fldiv@grs+2)^(0+128)
  9663  0950  3000               	movlw	0
  9664  0951  00B0               	movwf	(___fldiv@grs+1)^(0+128)
  9665  0952  3000               	movlw	0
  9666  0953  00AF               	movwf	___fldiv@grs^(0+128)
  9667  0954                     l3786:
  9668  0954  01B4               	clrf	___fldiv@aexp^(0+128)
  9669  0955  29B8               	goto	l3806
  9670  0956                     l3788:
  9671  0956  0834               	movf	___fldiv@aexp^(0+128),w
  9672  0957  1903               	btfsc	3,2
  9673  0958  295A               	goto	u5111
  9674  0959  295B               	goto	u5110
  9675  095A                     u5111:
  9676  095A  298D               	goto	l3798
  9677  095B                     u5110:
  9678  095B                     l3790:
  9679  095B  3001               	movlw	1
  9680  095C  1283               	bcf	3,5	;RP0=0, select bank0
  9681  095D  1303               	bcf	3,6	;RP1=0, select bank0
  9682  095E  00E9               	movwf	??___fldiv
  9683  095F                     u5125:
  9684  095F  1003               	clrc
  9685  0960  1683               	bsf	3,5	;RP0=1, select bank1
  9686  0961  1303               	bcf	3,6	;RP1=0, select bank1
  9687  0962  0DA8               	rlf	___fldiv@rem^(0+128),f
  9688  0963  0DA9               	rlf	(___fldiv@rem+1)^(0+128),f
  9689  0964  0DAA               	rlf	(___fldiv@rem+2)^(0+128),f
  9690  0965  0DAB               	rlf	(___fldiv@rem+3)^(0+128),f
  9691  0966  1283               	bcf	3,5	;RP0=0, select bank0
  9692  0967  1303               	bcf	3,6	;RP1=0, select bank0
  9693  0968  0BE9               	decfsz	??___fldiv,f
  9694  0969  295F               	goto	u5125
  9695  096A  3001               	movlw	1
  9696  096B  00E9               	movwf	??___fldiv
  9697  096C                     u5135:
  9698  096C  1003               	clrc
  9699  096D  1683               	bsf	3,5	;RP0=1, select bank1
  9700  096E  1303               	bcf	3,6	;RP1=0, select bank1
  9701  096F  0DA4               	rlf	___fldiv@b^(0+128),f
  9702  0970  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  9703  0971  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  9704  0972  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  9705  0973  1283               	bcf	3,5	;RP0=0, select bank0
  9706  0974  1303               	bcf	3,6	;RP1=0, select bank0
  9707  0975  0BE9               	decfsz	??___fldiv,f
  9708  0976  296C               	goto	u5135
  9709  0977                     l3792:
  9710  0977  1683               	bsf	3,5	;RP0=1, select bank1
  9711  0978  1303               	bcf	3,6	;RP1=0, select bank1
  9712  0979  1FB2               	btfss	(___fldiv@grs+3)^(0+128),7
  9713  097A  297C               	goto	u5141
  9714  097B  297D               	goto	u5140
  9715  097C                     u5141:
  9716  097C  297E               	goto	l3796
  9717  097D                     u5140:
  9718  097D                     l3794:
  9719  097D  1424               	bsf	___fldiv@b^(0+128),0
  9720  097E                     l3796:
  9721  097E  3001               	movlw	1
  9722  097F  1283               	bcf	3,5	;RP0=0, select bank0
  9723  0980  1303               	bcf	3,6	;RP1=0, select bank0
  9724  0981  00E9               	movwf	??___fldiv
  9725  0982                     u5155:
  9726  0982  1003               	clrc
  9727  0983  1683               	bsf	3,5	;RP0=1, select bank1
  9728  0984  1303               	bcf	3,6	;RP1=0, select bank1
  9729  0985  0DAF               	rlf	___fldiv@grs^(0+128),f
  9730  0986  0DB0               	rlf	(___fldiv@grs+1)^(0+128),f
  9731  0987  0DB1               	rlf	(___fldiv@grs+2)^(0+128),f
  9732  0988  0DB2               	rlf	(___fldiv@grs+3)^(0+128),f
  9733  0989  1283               	bcf	3,5	;RP0=0, select bank0
  9734  098A  1303               	bcf	3,6	;RP1=0, select bank0
  9735  098B  0BE9               	decfsz	??___fldiv,f
  9736  098C  2982               	goto	u5155
  9737  098D                     l3798:
  9738  098D  1683               	bsf	3,5	;RP0=1, select bank1
  9739  098E  1303               	bcf	3,6	;RP1=0, select bank1
  9740  098F  0823               	movf	(___fldiv@a+3)^(0+128),w
  9741  0990  022B               	subwf	(___fldiv@rem+3)^(0+128),w
  9742  0991  1D03               	skipz
  9743  0992  299D               	goto	u5165
  9744  0993  0822               	movf	(___fldiv@a+2)^(0+128),w
  9745  0994  022A               	subwf	(___fldiv@rem+2)^(0+128),w
  9746  0995  1D03               	skipz
  9747  0996  299D               	goto	u5165
  9748  0997  0821               	movf	(___fldiv@a+1)^(0+128),w
  9749  0998  0229               	subwf	(___fldiv@rem+1)^(0+128),w
  9750  0999  1D03               	skipz
  9751  099A  299D               	goto	u5165
  9752  099B  0820               	movf	___fldiv@a^(0+128),w
  9753  099C  0228               	subwf	___fldiv@rem^(0+128),w
  9754  099D                     u5165:
  9755  099D  1C03               	skipc
  9756  099E  29A0               	goto	u5161
  9757  099F  29A1               	goto	u5160
  9758  09A0                     u5161:
  9759  09A0  29B0               	goto	l3804
  9760  09A1                     u5160:
  9761  09A1                     l3800:
  9762  09A1  1732               	bsf	(___fldiv@grs^(0+128)+3),6
  9763  09A2                     l3802:
  9764  09A2  0820               	movf	___fldiv@a^(0+128),w
  9765  09A3  02A8               	subwf	___fldiv@rem^(0+128),f
  9766  09A4  0821               	movf	(___fldiv@a+1)^(0+128),w
  9767  09A5  1C03               	skipc
  9768  09A6  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  9769  09A7  02A9               	subwf	(___fldiv@rem+1)^(0+128),f
  9770  09A8  0822               	movf	(___fldiv@a+2)^(0+128),w
  9771  09A9  1C03               	skipc
  9772  09AA  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  9773  09AB  02AA               	subwf	(___fldiv@rem+2)^(0+128),f
  9774  09AC  0823               	movf	(___fldiv@a+3)^(0+128),w
  9775  09AD  1C03               	skipc
  9776  09AE  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  9777  09AF  02AB               	subwf	(___fldiv@rem+3)^(0+128),f
  9778  09B0                     l3804:
  9779  09B0  3001               	movlw	1
  9780  09B1  1283               	bcf	3,5	;RP0=0, select bank0
  9781  09B2  1303               	bcf	3,6	;RP1=0, select bank0
  9782  09B3  00E9               	movwf	??___fldiv
  9783  09B4  0869               	movf	??___fldiv,w
  9784  09B5  1683               	bsf	3,5	;RP0=1, select bank1
  9785  09B6  1303               	bcf	3,6	;RP1=0, select bank1
  9786  09B7  07B4               	addwf	___fldiv@aexp^(0+128),f
  9787  09B8                     l3806:
  9788  09B8  301A               	movlw	26
  9789  09B9  0234               	subwf	___fldiv@aexp^(0+128),w
  9790  09BA  1C03               	skipc
  9791  09BB  29BD               	goto	u5171
  9792  09BC  29BE               	goto	u5170
  9793  09BD                     u5171:
  9794  09BD  2956               	goto	l3788
  9795  09BE                     u5170:
  9796  09BE                     l3808:
  9797  09BE  082B               	movf	(___fldiv@rem+3)^(0+128),w
  9798  09BF  042A               	iorwf	(___fldiv@rem+2)^(0+128),w
  9799  09C0  0429               	iorwf	(___fldiv@rem+1)^(0+128),w
  9800  09C1  0428               	iorwf	___fldiv@rem^(0+128),w
  9801  09C2  1903               	skipnz
  9802  09C3  29C5               	goto	u5181
  9803  09C4  29C6               	goto	u5180
  9804  09C5                     u5181:
  9805  09C5  29F5               	goto	l3822
  9806  09C6                     u5180:
  9807  09C6                     l3810:
  9808  09C6  142F               	bsf	___fldiv@grs^(0+128),0
  9809  09C7  29F5               	goto	l3822
  9810  09C8                     l3812:
  9811  09C8  3001               	movlw	1
  9812  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  9813  09CA  1303               	bcf	3,6	;RP1=0, select bank0
  9814  09CB  00E9               	movwf	??___fldiv
  9815  09CC                     u5195:
  9816  09CC  1003               	clrc
  9817  09CD  1683               	bsf	3,5	;RP0=1, select bank1
  9818  09CE  1303               	bcf	3,6	;RP1=0, select bank1
  9819  09CF  0DA4               	rlf	___fldiv@b^(0+128),f
  9820  09D0  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  9821  09D1  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  9822  09D2  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  9823  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  9824  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  9825  09D5  0BE9               	decfsz	??___fldiv,f
  9826  09D6  29CC               	goto	u5195
  9827  09D7                     l3814:
  9828  09D7  1683               	bsf	3,5	;RP0=1, select bank1
  9829  09D8  1303               	bcf	3,6	;RP1=0, select bank1
  9830  09D9  1FB2               	btfss	(___fldiv@grs+3)^(0+128),7
  9831  09DA  29DC               	goto	u5201
  9832  09DB  29DD               	goto	u5200
  9833  09DC                     u5201:
  9834  09DC  29DE               	goto	l3818
  9835  09DD                     u5200:
  9836  09DD                     l3816:
  9837  09DD  1424               	bsf	___fldiv@b^(0+128),0
  9838  09DE                     l3818:
  9839  09DE  3001               	movlw	1
  9840  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  9841  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  9842  09E1  00E9               	movwf	??___fldiv
  9843  09E2                     u5215:
  9844  09E2  1003               	clrc
  9845  09E3  1683               	bsf	3,5	;RP0=1, select bank1
  9846  09E4  1303               	bcf	3,6	;RP1=0, select bank1
  9847  09E5  0DAF               	rlf	___fldiv@grs^(0+128),f
  9848  09E6  0DB0               	rlf	(___fldiv@grs+1)^(0+128),f
  9849  09E7  0DB1               	rlf	(___fldiv@grs+2)^(0+128),f
  9850  09E8  0DB2               	rlf	(___fldiv@grs+3)^(0+128),f
  9851  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  9852  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  9853  09EB  0BE9               	decfsz	??___fldiv,f
  9854  09EC  29E2               	goto	u5215
  9855  09ED                     l3820:
  9856  09ED  30FF               	movlw	255
  9857  09EE  1683               	bsf	3,5	;RP0=1, select bank1
  9858  09EF  1303               	bcf	3,6	;RP1=0, select bank1
  9859  09F0  07AD               	addwf	___fldiv@new_exp^(0+128),f
  9860  09F1  1803               	skipnc
  9861  09F2  0AAE               	incf	(___fldiv@new_exp+1)^(0+128),f
  9862  09F3  30FF               	movlw	255
  9863  09F4  07AE               	addwf	(___fldiv@new_exp+1)^(0+128),f
  9864  09F5                     l3822:
  9865  09F5  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
  9866  09F6  29F8               	goto	u5221
  9867  09F7  29F9               	goto	u5220
  9868  09F8                     u5221:
  9869  09F8  29C8               	goto	l3812
  9870  09F9                     u5220:
  9871  09F9                     l3824:
  9872  09F9  01B4               	clrf	___fldiv@aexp^(0+128)
  9873  09FA                     l3826:
  9874  09FA  1FB2               	btfss	(___fldiv@grs+3)^(0+128),7
  9875  09FB  29FD               	goto	u5231
  9876  09FC  29FE               	goto	u5230
  9877  09FD                     u5231:
  9878  09FD  2A2C               	goto	l3834
  9879  09FE                     u5230:
  9880  09FE                     l3828:
  9881  09FE  30FF               	movlw	255
  9882  09FF  052F               	andwf	___fldiv@grs^(0+128),w
  9883  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  9884  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  9885  0A02  00E9               	movwf	??___fldiv
  9886  0A03  30FF               	movlw	255
  9887  0A04  1683               	bsf	3,5	;RP0=1, select bank1
  9888  0A05  1303               	bcf	3,6	;RP1=0, select bank1
  9889  0A06  0530               	andwf	(___fldiv@grs+1)^(0+128),w
  9890  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  9891  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  9892  0A09  00EA               	movwf	??___fldiv+1
  9893  0A0A  30FF               	movlw	255
  9894  0A0B  1683               	bsf	3,5	;RP0=1, select bank1
  9895  0A0C  1303               	bcf	3,6	;RP1=0, select bank1
  9896  0A0D  0531               	andwf	(___fldiv@grs+2)^(0+128),w
  9897  0A0E  1283               	bcf	3,5	;RP0=0, select bank0
  9898  0A0F  1303               	bcf	3,6	;RP1=0, select bank0
  9899  0A10  00EB               	movwf	??___fldiv+2
  9900  0A11  307F               	movlw	127
  9901  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  9902  0A13  1303               	bcf	3,6	;RP1=0, select bank1
  9903  0A14  0532               	andwf	(___fldiv@grs+3)^(0+128),w
  9904  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  9905  0A16  1303               	bcf	3,6	;RP1=0, select bank0
  9906  0A17  00EC               	movwf	??___fldiv+3
  9907  0A18  086C               	movf	??___fldiv+3,w
  9908  0A19  046B               	iorwf	??___fldiv+2,w
  9909  0A1A  046A               	iorwf	??___fldiv+1,w
  9910  0A1B  0469               	iorwf	??___fldiv,w
  9911  0A1C  1903               	skipnz
  9912  0A1D  2A1F               	goto	u5241
  9913  0A1E  2A20               	goto	u5240
  9914  0A1F                     u5241:
  9915  0A1F  2A25               	goto	l774
  9916  0A20                     u5240:
  9917  0A20                     l3830:
  9918  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  9919  0A21  1303               	bcf	3,6	;RP1=0, select bank1
  9920  0A22  01B4               	clrf	___fldiv@aexp^(0+128)
  9921  0A23  0AB4               	incf	___fldiv@aexp^(0+128),f
  9922  0A24  2A2C               	goto	l3834
  9923  0A25                     l774:
  9924  0A25  1683               	bsf	3,5	;RP0=1, select bank1
  9925  0A26  1303               	bcf	3,6	;RP1=0, select bank1
  9926  0A27  1C24               	btfss	___fldiv@b^(0+128),0
  9927  0A28  2A2A               	goto	u5251
  9928  0A29  2A2B               	goto	u5250
  9929  0A2A                     u5251:
  9930  0A2A  2A2C               	goto	l3834
  9931  0A2B                     u5250:
  9932  0A2B  2A20               	goto	l3830
  9933  0A2C                     l3834:
  9934  0A2C  0834               	movf	___fldiv@aexp^(0+128),w
  9935  0A2D  1903               	btfsc	3,2
  9936  0A2E  2A30               	goto	u5261
  9937  0A2F  2A31               	goto	u5260
  9938  0A30                     u5261:
  9939  0A30  2A7E               	goto	l3844
  9940  0A31                     u5260:
  9941  0A31                     l3836:
  9942  0A31  3001               	movlw	1
  9943  0A32  07A4               	addwf	___fldiv@b^(0+128),f
  9944  0A33  3000               	movlw	0
  9945  0A34  1803               	skipnc
  9946  0A35  3001               	movlw	1
  9947  0A36  07A5               	addwf	(___fldiv@b+1)^(0+128),f
  9948  0A37  3000               	movlw	0
  9949  0A38  1803               	skipnc
  9950  0A39  3001               	movlw	1
  9951  0A3A  07A6               	addwf	(___fldiv@b+2)^(0+128),f
  9952  0A3B  3000               	movlw	0
  9953  0A3C  1803               	skipnc
  9954  0A3D  3001               	movlw	1
  9955  0A3E  07A7               	addwf	(___fldiv@b+3)^(0+128),f
  9956  0A3F                     l3838:
  9957  0A3F  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  9958  0A40  2A42               	goto	u5271
  9959  0A41  2A43               	goto	u5270
  9960  0A42                     u5271:
  9961  0A42  2A7E               	goto	l3844
  9962  0A43                     u5270:
  9963  0A43                     l3840:
  9964  0A43  0824               	movf	___fldiv@b^(0+128),w
  9965  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  9966  0A45  1303               	bcf	3,6	;RP1=0, select bank0
  9967  0A46  00E9               	movwf	??___fldiv
  9968  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  9969  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  9970  0A49  0825               	movf	(___fldiv@b+1)^(0+128),w
  9971  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  9972  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  9973  0A4C  00EA               	movwf	??___fldiv+1
  9974  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  9975  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  9976  0A4F  0826               	movf	(___fldiv@b+2)^(0+128),w
  9977  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  9978  0A51  1303               	bcf	3,6	;RP1=0, select bank0
  9979  0A52  00EB               	movwf	??___fldiv+2
  9980  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  9981  0A54  1303               	bcf	3,6	;RP1=0, select bank1
  9982  0A55  0827               	movf	(___fldiv@b+3)^(0+128),w
  9983  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  9984  0A57  1303               	bcf	3,6	;RP1=0, select bank0
  9985  0A58  00EC               	movwf	??___fldiv+3
  9986  0A59  3001               	movlw	1
  9987  0A5A  00ED               	movwf	??___fldiv+4
  9988  0A5B                     u5285:
  9989  0A5B  0D6C               	rlf	??___fldiv+3,w
  9990  0A5C  0CEC               	rrf	??___fldiv+3,f
  9991  0A5D  0CEB               	rrf	??___fldiv+2,f
  9992  0A5E  0CEA               	rrf	??___fldiv+1,f
  9993  0A5F  0CE9               	rrf	??___fldiv,f
  9994  0A60                     u5280:
  9995  0A60  0BED               	decfsz	??___fldiv+4,f
  9996  0A61  2A5B               	goto	u5285
  9997  0A62  086C               	movf	??___fldiv+3,w
  9998  0A63  1683               	bsf	3,5	;RP0=1, select bank1
  9999  0A64  1303               	bcf	3,6	;RP1=0, select bank1
 10000  0A65  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10001  0A66  1283               	bcf	3,5	;RP0=0, select bank0
 10002  0A67  1303               	bcf	3,6	;RP1=0, select bank0
 10003  0A68  086B               	movf	??___fldiv+2,w
 10004  0A69  1683               	bsf	3,5	;RP0=1, select bank1
 10005  0A6A  1303               	bcf	3,6	;RP1=0, select bank1
 10006  0A6B  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10007  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
 10008  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
 10009  0A6E  086A               	movf	??___fldiv+1,w
 10010  0A6F  1683               	bsf	3,5	;RP0=1, select bank1
 10011  0A70  1303               	bcf	3,6	;RP1=0, select bank1
 10012  0A71  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10013  0A72  1283               	bcf	3,5	;RP0=0, select bank0
 10014  0A73  1303               	bcf	3,6	;RP1=0, select bank0
 10015  0A74  0869               	movf	??___fldiv,w
 10016  0A75  1683               	bsf	3,5	;RP0=1, select bank1
 10017  0A76  1303               	bcf	3,6	;RP1=0, select bank1
 10018  0A77  00A4               	movwf	___fldiv@b^(0+128)
 10019  0A78                     l3842:
 10020  0A78  3001               	movlw	1
 10021  0A79  07AD               	addwf	___fldiv@new_exp^(0+128),f
 10022  0A7A  1803               	skipnc
 10023  0A7B  0AAE               	incf	(___fldiv@new_exp+1)^(0+128),f
 10024  0A7C  3000               	movlw	0
 10025  0A7D  07AE               	addwf	(___fldiv@new_exp+1)^(0+128),f
 10026  0A7E                     l3844:
 10027  0A7E  082E               	movf	(___fldiv@new_exp+1)^(0+128),w
 10028  0A7F  3A80               	xorlw	128
 10029  0A80  00FF               	movwf	btemp+1
 10030  0A81  3080               	movlw	128
 10031  0A82  027F               	subwf	btemp+1,w
 10032  0A83  1D03               	skipz
 10033  0A84  2A87               	goto	u5295
 10034  0A85  30FF               	movlw	255
 10035  0A86  022D               	subwf	___fldiv@new_exp^(0+128),w
 10036  0A87                     u5295:
 10037  0A87  1C03               	skipc
 10038  0A88  2A8A               	goto	u5291
 10039  0A89  2A8B               	goto	u5290
 10040  0A8A                     u5291:
 10041  0A8A  2A99               	goto	l3848
 10042  0A8B                     u5290:
 10043  0A8B                     l3846:
 10044  0A8B  30FF               	movlw	255
 10045  0A8C  1683               	bsf	3,5	;RP0=1, select bank1
 10046  0A8D  1303               	bcf	3,6	;RP1=0, select bank1
 10047  0A8E  00AD               	movwf	___fldiv@new_exp^(0+128)
 10048  0A8F  3000               	movlw	0
 10049  0A90  00AE               	movwf	(___fldiv@new_exp^(0+128)+1)
 10050  0A91  3000               	movlw	0
 10051  0A92  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10052  0A93  3000               	movlw	0
 10053  0A94  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10054  0A95  3000               	movlw	0
 10055  0A96  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10056  0A97  3000               	movlw	0
 10057  0A98  00A4               	movwf	___fldiv@b^(0+128)
 10058  0A99                     l3848:
 10059  0A99  1683               	bsf	3,5	;RP0=1, select bank1
 10060  0A9A  1303               	bcf	3,6	;RP1=0, select bank1
 10061  0A9B  082E               	movf	(___fldiv@new_exp+1)^(0+128),w
 10062  0A9C  3A80               	xorlw	128
 10063  0A9D  00FF               	movwf	btemp+1
 10064  0A9E  3080               	movlw	128
 10065  0A9F  027F               	subwf	btemp+1,w
 10066  0AA0  1D03               	skipz
 10067  0AA1  2AA4               	goto	u5305
 10068  0AA2  3001               	movlw	1
 10069  0AA3  022D               	subwf	___fldiv@new_exp^(0+128),w
 10070  0AA4                     u5305:
 10071  0AA4  1803               	skipnc
 10072  0AA5  2AA7               	goto	u5301
 10073  0AA6  2AA8               	goto	u5300
 10074  0AA7                     u5301:
 10075  0AA7  2AB5               	goto	l780
 10076  0AA8                     u5300:
 10077  0AA8                     l3850:
 10078  0AA8  1683               	bsf	3,5	;RP0=1, select bank1
 10079  0AA9  1303               	bcf	3,6	;RP1=0, select bank1
 10080  0AAA  01AD               	clrf	___fldiv@new_exp^(0+128)
 10081  0AAB  01AE               	clrf	(___fldiv@new_exp+1)^(0+128)
 10082  0AAC                     l3852:
 10083  0AAC  3000               	movlw	0
 10084  0AAD  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10085  0AAE  3000               	movlw	0
 10086  0AAF  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10087  0AB0  3000               	movlw	0
 10088  0AB1  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10089  0AB2  3000               	movlw	0
 10090  0AB3  00A4               	movwf	___fldiv@b^(0+128)
 10091  0AB4                     l3854:
 10092  0AB4  01AC               	clrf	___fldiv@sign^(0+128)
 10093  0AB5                     l780:
 10094  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
 10095  0AB6  1303               	bcf	3,6	;RP1=0, select bank1
 10096  0AB7  082D               	movf	___fldiv@new_exp^(0+128),w
 10097  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
 10098  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
 10099  0ABA  00E9               	movwf	??___fldiv
 10100  0ABB  0869               	movf	??___fldiv,w
 10101  0ABC  1683               	bsf	3,5	;RP0=1, select bank1
 10102  0ABD  1303               	bcf	3,6	;RP1=0, select bank1
 10103  0ABE  00B3               	movwf	___fldiv@bexp^(0+128)
 10104  0ABF                     l3856:
 10105  0ABF  1C33               	btfss	___fldiv@bexp^(0+128),0
 10106  0AC0  2AC2               	goto	u5311
 10107  0AC1  2AC3               	goto	u5310
 10108  0AC2                     u5311:
 10109  0AC2  2AC5               	goto	l3860
 10110  0AC3                     u5310:
 10111  0AC3                     l3858:
 10112  0AC3  17A6               	bsf	(___fldiv@b^(0+128)+2),7
 10113  0AC4  2ACD               	goto	l782
 10114  0AC5                     l3860:
 10115  0AC5  307F               	movlw	127
 10116  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
 10117  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
 10118  0AC8  00E9               	movwf	??___fldiv
 10119  0AC9  0869               	movf	??___fldiv,w
 10120  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
 10121  0ACB  1303               	bcf	3,6	;RP1=0, select bank1
 10122  0ACC  05A6               	andwf	(___fldiv@b^(0+128)+2),f
 10123  0ACD                     l782:
 10124  0ACD  0833               	movf	___fldiv@bexp^(0+128),w
 10125  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
 10126  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
 10127  0AD0  00E9               	movwf	??___fldiv
 10128  0AD1  1003               	clrc
 10129  0AD2  0C69               	rrf	??___fldiv,w
 10130  0AD3  00EA               	movwf	??___fldiv+1
 10131  0AD4  086A               	movf	??___fldiv+1,w
 10132  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
 10133  0AD6  1303               	bcf	3,6	;RP1=0, select bank1
 10134  0AD7  00A7               	movwf	(___fldiv@b^(0+128)+3)
 10135  0AD8  082C               	movf	___fldiv@sign^(0+128),w
 10136  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
 10137  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
 10138  0ADB  00E9               	movwf	??___fldiv
 10139  0ADC  0869               	movf	??___fldiv,w
 10140  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
 10141  0ADE  1303               	bcf	3,6	;RP1=0, select bank1
 10142  0ADF  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10143  0AE0  2907               	goto	l3768
 10144  0AE1                     l760:
 10145  0AE1  0008               	return
 10146  0AE2                     __end_of___fldiv:
 10147                           
 10148                           	psect	text33
 10149  1DAD                     __ptext33:	
 10150 ;; *************** function _Alarms *****************
 10151 ;; Defined at:
 10152 ;;		line 305 in file "AFC.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;		None
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;		None
 10157 ;; Return value:  Size  Location     Type
 10158 ;;                  2    5[BANK0 ] int 
 10159 ;; Registers used:
 10160 ;;		wreg, status,2, status,0, pclath, cstack
 10161 ;; Tracked objects:
 10162 ;;		On entry : 0/0
 10163 ;;		On exit  : 0/0
 10164 ;;		Unchanged: 0/0
 10165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10166 ;;      Params:         0       2       0       0       0
 10167 ;;      Locals:         0       0       0       0       0
 10168 ;;      Temps:          0       1       0       0       0
 10169 ;;      Totals:         0       3       0       0       0
 10170 ;;Total ram usage:        3 bytes
 10171 ;; Hardware stack levels used:    1
 10172 ;; Hardware stack levels required when called:    2
 10173 ;; This function calls:
 10174 ;;		_ADC_Read
 10175 ;; This function is called by:
 10176 ;;		_main
 10177 ;; This function uses a non-reentrant model
 10178 ;;
 10179                           
 10180                           
 10181                           ;psect for function _Alarms
 10182  1DAD                     _Alarms:
 10183  1DAD                     l3928:	
 10184                           ;incstack = 0
 10185                           ; Regs used in _Alarms: [wreg+status,2+status,0+pclath+cstack]
 10186                           
 10187                           
 10188                           ;AFC.c: 307: AN0RES = ADC_Read(0);
 10189  1DAD  3000               	movlw	0
 10190  1DAE  160A  158A  2653  160A  158A  	fcall	_ADC_Read
 10191  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
 10192  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
 10193  1DB5  0821               	movf	?_ADC_Read+1,w
 10194  1DB6  1683               	bsf	3,5	;RP0=1, select bank3
 10195  1DB7  1703               	bsf	3,6	;RP1=1, select bank3
 10196  1DB8  00A9               	movwf	(_AN0RES+1)^(0+384)
 10197  1DB9  1283               	bcf	3,5	;RP0=0, select bank0
 10198  1DBA  1303               	bcf	3,6	;RP1=0, select bank0
 10199  1DBB  0820               	movf	?_ADC_Read,w
 10200  1DBC  1683               	bsf	3,5	;RP0=1, select bank3
 10201  1DBD  1703               	bsf	3,6	;RP1=1, select bank3
 10202  1DBE  00A8               	movwf	_AN0RES^(0+384)
 10203  1DBF                     l3930:
 10204                           
 10205                           ;AFC.c: 311: _delay((unsigned long)((125)*(8000000/4000000.0)));
 10206  1DBF  3052               	movlw	82
 10207  1DC0  1283               	bcf	3,5	;RP0=0, select bank0
 10208  1DC1  1303               	bcf	3,6	;RP1=0, select bank0
 10209  1DC2  00A7               	movwf	??_Alarms
 10210  1DC3                     u5787:
 10211  1DC3  0BA7               	decfsz	??_Alarms,f
 10212  1DC4  2DC3               	goto	u5787
 10213  1DC5  0000               	nop
 10214  1DC6                     l3932:
 10215                           
 10216                           ;AFC.c: 312: return AN0RES;
 10217  1DC6  1683               	bsf	3,5	;RP0=1, select bank3
 10218  1DC7  1703               	bsf	3,6	;RP1=1, select bank3
 10219  1DC8  0829               	movf	(_AN0RES+1)^(0+384),w
 10220  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
 10221  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
 10222  1DCB  00A6               	movwf	?_Alarms+1
 10223  1DCC  1683               	bsf	3,5	;RP0=1, select bank3
 10224  1DCD  1703               	bsf	3,6	;RP1=1, select bank3
 10225  1DCE  0828               	movf	_AN0RES^(0+384),w
 10226  1DCF  1283               	bcf	3,5	;RP0=0, select bank0
 10227  1DD0  1303               	bcf	3,6	;RP1=0, select bank0
 10228  1DD1  00A5               	movwf	?_Alarms
 10229  1DD2                     l284:
 10230  1DD2  0008               	return
 10231  1DD3                     __end_of_Alarms:
 10232                           
 10233                           	psect	text34
 10234  1E53                     __ptext34:	
 10235 ;; *************** function _ADC_Read *****************
 10236 ;; Defined at:
 10237 ;;		line 233 in file "AFC.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  ANC             1    wreg     unsigned char 
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;  ANC             1    4[BANK0 ] unsigned char 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  2    0[BANK0 ] unsigned int 
 10244 ;; Registers used:
 10245 ;;		wreg, status,2, status,0
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10251 ;;      Params:         0       2       0       0       0
 10252 ;;      Locals:         0       1       0       0       0
 10253 ;;      Temps:          0       2       0       0       0
 10254 ;;      Totals:         0       5       0       0       0
 10255 ;;Total ram usage:        5 bytes
 10256 ;; Hardware stack levels used:    1
 10257 ;; Hardware stack levels required when called:    1
 10258 ;; This function calls:
 10259 ;;		Nothing
 10260 ;; This function is called by:
 10261 ;;		_GetTemp
 10262 ;;		_Alarms
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           
 10267                           ;psect for function _ADC_Read
 10268  1E53                     _ADC_Read:
 10269                           
 10270                           ;incstack = 0
 10271                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
 10272                           ;ADC_Read@ANC stored from wreg
 10273  1E53  1283               	bcf	3,5	;RP0=0, select bank0
 10274  1E54  1303               	bcf	3,6	;RP1=0, select bank0
 10275  1E55  00A4               	movwf	ADC_Read@ANC
 10276  1E56                     l3606:
 10277                           
 10278                           ;AFC.c: 234: if (ANC < 0 || ANC > 7)
 10279  1E56  3008               	movlw	8
 10280  1E57  0224               	subwf	ADC_Read@ANC,w
 10281  1E58  1C03               	skipc
 10282  1E59  2E5B               	goto	u4791
 10283  1E5A  2E5C               	goto	u4790
 10284  1E5B                     u4791:
 10285  1E5B  2E5F               	goto	l3612
 10286  1E5C                     u4790:
 10287  1E5C                     l3608:
 10288                           
 10289                           ;AFC.c: 235: {;AFC.c: 236: return 0;
 10290  1E5C  01A0               	clrf	?_ADC_Read
 10291  1E5D  01A1               	clrf	?_ADC_Read+1
 10292  1E5E  2E85               	goto	l263
 10293  1E5F                     l3612:
 10294                           
 10295                           ;AFC.c: 237: };AFC.c: 238: ADCON0 &= 0x11000101;
 10296  1E5F  3001               	movlw	1
 10297  1E60  00A2               	movwf	??_ADC_Read
 10298  1E61  0822               	movf	??_ADC_Read,w
 10299  1E62  059F               	andwf	31,f	;volatile
 10300                           
 10301                           ;AFC.c: 239: ADCON0 |= ANC << 3;
 10302  1E63  0824               	movf	ADC_Read@ANC,w
 10303  1E64  00A2               	movwf	??_ADC_Read
 10304  1E65  3002               	movlw	2
 10305  1E66                     u4805:
 10306  1E66  1003               	clrc
 10307  1E67  0DA2               	rlf	??_ADC_Read,f
 10308  1E68  3EFF               	addlw	-1
 10309  1E69  1D03               	skipz
 10310  1E6A  2E66               	goto	u4805
 10311  1E6B  1003               	clrc
 10312  1E6C  0D22               	rlf	??_ADC_Read,w
 10313  1E6D  00A3               	movwf	??_ADC_Read+1
 10314  1E6E  0823               	movf	??_ADC_Read+1,w
 10315  1E6F  049F               	iorwf	31,f	;volatile
 10316  1E70                     l3614:
 10317                           
 10318                           ;AFC.c: 241: _delay((unsigned long)((30)*(8000000/4000000.0)));
 10319  1E70  3013               	movlw	19
 10320  1E71  1283               	bcf	3,5	;RP0=0, select bank0
 10321  1E72  1303               	bcf	3,6	;RP1=0, select bank0
 10322  1E73  00A2               	movwf	??_ADC_Read
 10323  1E74                     u5797:
 10324  1E74  0BA2               	decfsz	??_ADC_Read,f
 10325  1E75  2E74               	goto	u5797
 10326  1E76                     l3616:
 10327                           
 10328                           ;AFC.c: 242: GO_DONE = 1;
 10329  1E76  1283               	bcf	3,5	;RP0=0, select bank0
 10330  1E77  1303               	bcf	3,6	;RP1=0, select bank0
 10331  1E78  149F               	bsf	31,1	;volatile
 10332  1E79                     l264:	
 10333                           ;AFC.c: 243: while (ADCON0bits.GO_DONE);
 10334                           
 10335  1E79  189F               	btfsc	31,1	;volatile
 10336  1E7A  2E7C               	goto	u4811
 10337  1E7B  2E7D               	goto	u4810
 10338  1E7C                     u4811:
 10339  1E7C  2E79               	goto	l264
 10340  1E7D                     u4810:
 10341  1E7D                     l3618:
 10342                           
 10343                           ;AFC.c: 245: return ((ADRESH << 8) + ADRESL);
 10344  1E7D  081E               	movf	30,w	;volatile
 10345  1E7E  00A1               	movwf	?_ADC_Read+1
 10346  1E7F  1683               	bsf	3,5	;RP0=1, select bank1
 10347  1E80  1303               	bcf	3,6	;RP1=0, select bank1
 10348  1E81  081E               	movf	30,w	;volatile
 10349  1E82  1283               	bcf	3,5	;RP0=0, select bank0
 10350  1E83  1303               	bcf	3,6	;RP1=0, select bank0
 10351  1E84  00A0               	movwf	?_ADC_Read
 10352  1E85                     l263:
 10353  1E85  0008               	return
 10354  1E86                     __end_of_ADC_Read:
 10355                           
 10356                           	psect	text35
 10357  1C9B                     __ptext35:	
 10358 ;; *************** function _ADC_Init *****************
 10359 ;; Defined at:
 10360 ;;		line 227 in file "AFC.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;		None
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  1    wreg      void 
 10367 ;; Registers used:
 10368 ;;		wreg
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10374 ;;      Params:         0       0       0       0       0
 10375 ;;      Locals:         0       0       0       0       0
 10376 ;;      Temps:          0       0       0       0       0
 10377 ;;      Totals:         0       0       0       0       0
 10378 ;;Total ram usage:        0 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:    1
 10381 ;; This function calls:
 10382 ;;		Nothing
 10383 ;; This function is called by:
 10384 ;;		_main
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388                           
 10389                           ;psect for function _ADC_Init
 10390  1C9B                     _ADC_Init:
 10391  1C9B                     l3926:	
 10392                           ;incstack = 0
 10393                           ; Regs used in _ADC_Init: [wreg]
 10394                           
 10395                           
 10396                           ;AFC.c: 228: ADCON0 = 0x41;
 10397  1C9B  3041               	movlw	65
 10398  1C9C  1283               	bcf	3,5	;RP0=0, select bank0
 10399  1C9D  1303               	bcf	3,6	;RP1=0, select bank0
 10400  1C9E  009F               	movwf	31	;volatile
 10401                           
 10402                           ;AFC.c: 229: ADCON1 = 0x80;
 10403  1C9F  3080               	movlw	128
 10404  1CA0  1683               	bsf	3,5	;RP0=1, select bank1
 10405  1CA1  1303               	bcf	3,6	;RP1=0, select bank1
 10406  1CA2  009F               	movwf	31	;volatile
 10407  1CA3                     l259:
 10408  1CA3  0008               	return
 10409  1CA4                     __end_of_ADC_Init:
 10410                           
 10411                           	psect	text36
 10412  1F78                     __ptext36:	
 10413 ;; *************** function _ISR *****************
 10414 ;; Defined at:
 10415 ;;		line 248 in file "AFC.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  1    wreg      void 
 10422 ;; Registers used:
 10423 ;;		wreg, status,2, status,0
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10429 ;;      Params:         0       0       0       0       0
 10430 ;;      Locals:         0       0       0       0       0
 10431 ;;      Temps:          6       0       0       0       0
 10432 ;;      Totals:         6       0       0       0       0
 10433 ;;Total ram usage:        6 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		Interrupt level 1
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _ISR
 10444  1F78                     _ISR:
 10445  1F78                     i1l3370:
 10446                           
 10447                           ;AFC.c: 253: if (CCP1IF == 1) {
 10448  1F78  1283               	bcf	3,5	;RP0=0, select bank0
 10449  1F79  1303               	bcf	3,6	;RP1=0, select bank0
 10450  1F7A  1D0C               	btfss	12,2	;volatile
 10451  1F7B  2F7D               	goto	u425_21
 10452  1F7C  2F7E               	goto	u425_20
 10453  1F7D                     u425_21:
 10454  1F7D  2FF9               	goto	i1l275
 10455  1F7E                     u425_20:
 10456  1F7E                     i1l3372:
 10457                           
 10458                           ;AFC.c: 256: if ((current_period >= 0) && (current_period <= total_period)) {
 10459  1F7E  1683               	bsf	3,5	;RP0=1, select bank1
 10460  1F7F  1303               	bcf	3,6	;RP1=0, select bank1
 10461  1F80  086F               	movf	(_current_period+3)^(0+128),w
 10462  1F81  1D03               	btfss	3,2
 10463  1F82  2F91               	goto	u426_21
 10464  1F83  086E               	movf	(_current_period+2)^(0+128),w
 10465  1F84  1D03               	btfss	3,2
 10466  1F85  2F91               	goto	u426_21
 10467  1F86  3009               	movlw	9
 10468  1F87  026D               	subwf	(_current_period+1)^(0+128),w
 10469  1F88  1D03               	skipz
 10470  1F89  2F8E               	goto	u426_23
 10471  1F8A  30C5               	movlw	197
 10472  1F8B  026C               	subwf	_current_period^(0+128),w
 10473  1F8C  1D03               	skipz
 10474  1F8D  2F8E               	goto	u426_23
 10475  1F8E                     u426_23:
 10476  1F8E  1803               	btfsc	3,0
 10477  1F8F  2F91               	goto	u426_21
 10478  1F90  2F92               	goto	u426_20
 10479  1F91                     u426_21:
 10480  1F91  2FDB               	goto	i1l3382
 10481  1F92                     u426_20:
 10482  1F92                     i1l3374:
 10483                           
 10484                           ;AFC.c: 258: if (RC2 == 1) {
 10485  1F92  1283               	bcf	3,5	;RP0=0, select bank0
 10486  1F93  1303               	bcf	3,6	;RP1=0, select bank0
 10487  1F94  1D07               	btfss	7,2	;volatile
 10488  1F95  2F97               	goto	u427_21
 10489  1F96  2F98               	goto	u427_20
 10490  1F97                     u427_21:
 10491  1F97  2FC2               	goto	i1l273
 10492  1F98                     u427_20:
 10493  1F98                     i1l3376:
 10494                           
 10495                           ;AFC.c: 259: RC2 = 0;
 10496  1F98  1107               	bcf	7,2	;volatile
 10497  1F99                     i1l3378:
 10498                           
 10499                           ;AFC.c: 260: CCPR = total_period - current_period;
 10500  1F99  30C4               	movlw	196
 10501  1F9A  00F0               	movwf	??_ISR
 10502  1F9B  3009               	movlw	9
 10503  1F9C  00F1               	movwf	??_ISR+1
 10504  1F9D  3000               	movlw	0
 10505  1F9E  00F2               	movwf	??_ISR+2
 10506  1F9F  3000               	movlw	0
 10507  1FA0  00F3               	movwf	??_ISR+3
 10508  1FA1  1683               	bsf	3,5	;RP0=1, select bank1
 10509  1FA2  1303               	bcf	3,6	;RP1=0, select bank1
 10510  1FA3  086C               	movf	_current_period^(0+128),w
 10511  1FA4  02F0               	subwf	??_ISR,f
 10512  1FA5  086D               	movf	(_current_period+1)^(0+128),w
 10513  1FA6  1C03               	skipc
 10514  1FA7  0F6D               	incfsz	(_current_period+1)^(0+128),w
 10515  1FA8  2FAA               	goto	u428_21
 10516  1FA9  2FAB               	goto	u428_22
 10517  1FAA                     u428_21:
 10518  1FAA  02F1               	subwf	??_ISR+1,f
 10519  1FAB                     u428_22:
 10520  1FAB  086E               	movf	(_current_period+2)^(0+128),w
 10521  1FAC  1C03               	skipc
 10522  1FAD  0F6E               	incfsz	(_current_period+2)^(0+128),w
 10523  1FAE  2FB0               	goto	u428_23
 10524  1FAF  2FB1               	goto	u428_24
 10525  1FB0                     u428_23:
 10526  1FB0  02F2               	subwf	??_ISR+2,f
 10527  1FB1                     u428_24:
 10528  1FB1  086F               	movf	(_current_period+3)^(0+128),w
 10529  1FB2  1C03               	skipc
 10530  1FB3  0F6F               	incfsz	(_current_period+3)^(0+128),w
 10531  1FB4  2FB6               	goto	u428_25
 10532  1FB5  2FB7               	goto	u428_26
 10533  1FB6                     u428_25:
 10534  1FB6  02F3               	subwf	??_ISR+3,f
 10535  1FB7                     u428_26:
 10536  1FB7  0873               	movf	??_ISR+3,w
 10537  1FB8  1683               	bsf	3,5	;RP0=1, select bank3
 10538  1FB9  1703               	bsf	3,6	;RP1=1, select bank3
 10539  1FBA  0093               	movwf	(_CCPR+3)^(0+384)
 10540  1FBB  0872               	movf	??_ISR+2,w
 10541  1FBC  0092               	movwf	(_CCPR+2)^(0+384)
 10542  1FBD  0871               	movf	??_ISR+1,w
 10543  1FBE  0091               	movwf	(_CCPR+1)^(0+384)
 10544  1FBF  0870               	movf	??_ISR,w
 10545  1FC0  0090               	movwf	_CCPR^(0+384)
 10546                           
 10547                           ;AFC.c: 261: } else {
 10548  1FC1  2FDB               	goto	i1l3382
 10549  1FC2                     i1l273:
 10550                           
 10551                           ;AFC.c: 262: RC2 = 1;
 10552  1FC2  1507               	bsf	7,2	;volatile
 10553  1FC3                     i1l3380:
 10554                           
 10555                           ;AFC.c: 263: CCPR = current_period;
 10556  1FC3  1683               	bsf	3,5	;RP0=1, select bank1
 10557  1FC4  1303               	bcf	3,6	;RP1=0, select bank1
 10558  1FC5  086F               	movf	(_current_period+3)^(0+128),w
 10559  1FC6  1683               	bsf	3,5	;RP0=1, select bank3
 10560  1FC7  1703               	bsf	3,6	;RP1=1, select bank3
 10561  1FC8  0093               	movwf	(_CCPR+3)^(0+384)
 10562  1FC9  1683               	bsf	3,5	;RP0=1, select bank1
 10563  1FCA  1303               	bcf	3,6	;RP1=0, select bank1
 10564  1FCB  086E               	movf	(_current_period+2)^(0+128),w
 10565  1FCC  1683               	bsf	3,5	;RP0=1, select bank3
 10566  1FCD  1703               	bsf	3,6	;RP1=1, select bank3
 10567  1FCE  0092               	movwf	(_CCPR+2)^(0+384)
 10568  1FCF  1683               	bsf	3,5	;RP0=1, select bank1
 10569  1FD0  1303               	bcf	3,6	;RP1=0, select bank1
 10570  1FD1  086D               	movf	(_current_period+1)^(0+128),w
 10571  1FD2  1683               	bsf	3,5	;RP0=1, select bank3
 10572  1FD3  1703               	bsf	3,6	;RP1=1, select bank3
 10573  1FD4  0091               	movwf	(_CCPR+1)^(0+384)
 10574  1FD5  1683               	bsf	3,5	;RP0=1, select bank1
 10575  1FD6  1303               	bcf	3,6	;RP1=0, select bank1
 10576  1FD7  086C               	movf	_current_period^(0+128),w
 10577  1FD8  1683               	bsf	3,5	;RP0=1, select bank3
 10578  1FD9  1703               	bsf	3,6	;RP1=1, select bank3
 10579  1FDA  0090               	movwf	_CCPR^(0+384)
 10580  1FDB                     i1l3382:
 10581                           
 10582                           ;AFC.c: 264: };AFC.c: 265: };AFC.c: 278: CCPR1H = CCPR >> 8;
 10583  1FDB  1683               	bsf	3,5	;RP0=1, select bank3
 10584  1FDC  1703               	bsf	3,6	;RP1=1, select bank3
 10585  1FDD  0810               	movf	_CCPR^(0+384),w
 10586  1FDE  00F0               	movwf	??_ISR
 10587  1FDF  0811               	movf	(_CCPR+1)^(0+384),w
 10588  1FE0  00F1               	movwf	??_ISR+1
 10589  1FE1  0812               	movf	(_CCPR+2)^(0+384),w
 10590  1FE2  00F2               	movwf	??_ISR+2
 10591  1FE3  0813               	movf	(_CCPR+3)^(0+384),w
 10592  1FE4  00F3               	movwf	??_ISR+3
 10593  1FE5  3008               	movlw	8
 10594  1FE6                     u429_25:
 10595  1FE6  1003               	clrc
 10596  1FE7  0CF3               	rrf	??_ISR+3,f
 10597  1FE8  0CF2               	rrf	??_ISR+2,f
 10598  1FE9  0CF1               	rrf	??_ISR+1,f
 10599  1FEA  0CF0               	rrf	??_ISR,f
 10600  1FEB                     u429_20:
 10601  1FEB  3EFF               	addlw	-1
 10602  1FEC  1D03               	skipz
 10603  1FED  2FE6               	goto	u429_25
 10604  1FEE  0870               	movf	??_ISR,w
 10605  1FEF  1283               	bcf	3,5	;RP0=0, select bank0
 10606  1FF0  1303               	bcf	3,6	;RP1=0, select bank0
 10607  1FF1  0096               	movwf	22	;volatile
 10608  1FF2                     i1l3384:
 10609                           
 10610                           ;AFC.c: 279: CCPR1L = CCPR;
 10611  1FF2  1683               	bsf	3,5	;RP0=1, select bank3
 10612  1FF3  1703               	bsf	3,6	;RP1=1, select bank3
 10613  1FF4  0810               	movf	_CCPR^(0+384),w
 10614  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
 10615  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
 10616  1FF7  0095               	movwf	21	;volatile
 10617  1FF8                     i1l3386:
 10618                           
 10619                           ;AFC.c: 280: CCP1IF = 0;
 10620  1FF8  110C               	bcf	12,2	;volatile
 10621  1FF9                     i1l275:
 10622  1FF9  0875               	movf	??_ISR+5,w
 10623  1FFA  008A               	movwf	10
 10624  1FFB  0E74               	swapf	??_ISR+4,w
 10625  1FFC  0083               	movwf	3
 10626  1FFD  0EFE               	swapf	btemp,f
 10627  1FFE  0E7E               	swapf	btemp,w
 10628  1FFF  0009               	retfie
 10629  2000                     __end_of_ISR:
 10630  007E                     btemp	set	126	;btemp
 10631  007E                     wtemp0	set	126
 10632                           
 10633                           	psect	intentry
 10634  0004                     __pintentry:	
 10635                           ;incstack = 0
 10636                           ; Regs used in _ISR: [wreg+status,2+status,0]
 10637                           
 10638  0004                     interrupt_function:
 10639  007E                     saved_w	set	btemp
 10640  0004  00FE               	movwf	btemp
 10641  0005  0E03               	swapf	3,w
 10642  0006  00F4               	movwf	??_ISR+4
 10643  0007  080A               	movf	10,w
 10644  0008  00F5               	movwf	??_ISR+5
 10645  0009  160A  158A  2F78   	ljmp	_ISR
 10646                           
 10647                           	psect	config
 10648                           
 10649                           ;Config register CONFIG1 @ 0x2007
 10650                           ;	Oscillator Selection bits
 10651                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10652                           ;	Watchdog Timer Enable bit
 10653                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10654                           ;	Power-up Timer Enable bit
 10655                           ;	PWRTE = OFF, PWRT disabled
 10656                           ;	RE3/MCLR pin function select bit
 10657                           ;	MCLRE = 0x1, unprogrammed default
 10658                           ;	Code Protection bit
 10659                           ;	CP = ON, Program memory code protection is enabled
 10660                           ;	Data Code Protection bit
 10661                           ;	CPD = ON, Data memory code protection is enabled
 10662                           ;	Brown Out Reset Selection bits
 10663                           ;	BOREN = OFF, BOR disabled
 10664                           ;	Internal External Switchover bit
 10665                           ;	IESO = 0x1, unprogrammed default
 10666                           ;	Fail-Safe Clock Monitor Enabled bit
 10667                           ;	FCMEN = 0x1, unprogrammed default
 10668                           ;	Low Voltage Programming Enable bit
 10669                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10670                           ;	In-Circuit Debugger Mode bit
 10671                           ;	DEBUG = 0x1, unprogrammed default
 10672  2007                     	org	8199
 10673  2007  2C32               	dw	11314
 10674                           
 10675                           ;Config register CONFIG2 @ 0x2008
 10676                           ;	Brown-out Reset Selection bit
 10677                           ;	BOR4V = 0x1, unprogrammed default
 10678                           ;	Flash Program Memory Self Write Enable bits
 10679                           ;	WRT = OFF, Write protection off
 10680  2008                     	org	8200
 10681  2008  3FFF               	dw	16383

Data Sizes:
    Strings     101
    Constant    50
    Data        13
    BSS         79
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     79      80
    BANK1            80     66      80
    BANK3            96      3      75
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_6(CODE[4]), STR_5(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> fanSTR(BANK3[16]), TempSTR(BANK3[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    fanSTR	PTR unsigned char [16] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    TempSTR	PTR unsigned char [16] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[13]), STR_10(CODE[13]), STR_9(CODE[2]), STR_8(CODE[10]), 
		 -> STR_7(CODE[11]), fanSTR(BANK3[16]), TempSTR(BANK3[16]), STR_4(CODE[12]), 
		 -> STR_3(CODE[14]), STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _map->___fldiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _GetTemp->_log
    _log->___fldiv
    _log->_eval_poly
    _frexp->___fleq
    _eval_poly->___flmul
    ___flmul->___flsub
    ___xxtofl->_ADC_Read
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___fladd->_frexp
    ___fldiv->___flmul
    _Alarms->_ADC_Read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_GetTemp
    _map->___fldiv
    _GetTemp->___fltol
    _log->___fldiv
    ___fltol->_map

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   56572
                                              0 BANK3      3     3      0
                           _ADC_Init
                             _Alarms
                            _GetTemp
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            ___fltol
                           ___xxtofl
                                _map
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2595
                                             14 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _map                                                 24     4     20   15188
                                             21 BANK1     24     4     20
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2    1309
                                              6 BANK0      7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     189
                                              4 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       2     1      1    1334
                                              6 BANK0      2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     282
                                              6 BANK0      3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     189
                                              6 BANK0      1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     189
                                              4 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     127
                                              2 BANK0      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTemp                                             10     8      2   34106
                                             56 BANK1     10     8      2
                           _ADC_Read
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  7     3      4   18432
                                             78 BANK0      1     1      0
                                             21 BANK1      6     2      4
                            ___fladd
                            ___fldiv (ARG)
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5    1022
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     520
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           16     9      7    7785
                                             73 BANK0      5     5      0
                                              0 BANK1     11     4      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4213
                                             47 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     974
                                              5 BANK0     14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     460
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     533
                                             45 BANK1     11     7      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3833
                                             39 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3048
                                             19 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2943
                                             73 BANK0      5     5      0
                                              0 BANK1     21    13      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _Alarms                                               3     1      2      62
                                              5 BANK0      3     1      2
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      62
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Alarms
     _ADC_Read
   _GetTemp
     _ADC_Read
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
       _frexp (ARG)
         ___fleq
     ___fldiv
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
       ___xxtofl (ARG)
         _ADC_Read (ARG)
       _frexp (ARG)
         ___fleq
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
     ___fltol
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___fldiv (ARG)
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
               _frexp (ARG)
                 ___fleq
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
       ___xxtofl (ARG)
         _ADC_Read (ARG)
       _map (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___fldiv
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _ADC_Read (ARG)
                 _frexp (ARG)
                   ___fleq
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
               _frexp (ARG)
                 ___fleq
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
               _frexp (ARG)
                 ___fleq
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
         ___xxtofl (ARG)
           _ADC_Read (ARG)
     ___xxtofl
       _ADC_Read (ARG)
     _log
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___fldiv (ARG)
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
               _frexp (ARG)
                 ___fleq
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _ADC_Read (ARG)
       _eval_poly (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
               _frexp (ARG)
                 ___fleq
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
       _frexp (ARG)
         ___fleq
   _I2C_Master_Init
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   ___fltol
     ___fladd (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
       _frexp (ARG)
         ___fleq
     ___fldiv (ARG)
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
     ___xxtofl (ARG)
       _ADC_Read (ARG)
     _map (ARG)
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___fldiv
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
               _frexp (ARG)
                 ___fleq
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
       ___xxtofl (ARG)
         _ADC_Read (ARG)
   ___xxtofl
     _ADC_Read (ARG)
   _map
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
       _frexp (ARG)
         ___fleq
     ___fldiv
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
             _frexp (ARG)
               ___fleq
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
           _frexp (ARG)
             ___fleq
       ___xxtofl (ARG)
         _ADC_Read (ARG)
       _frexp (ARG)
         ___fleq
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
         _frexp (ARG)
           ___fleq
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      3      4B       9       78.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     42      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F7      12        0.0%
ABS                  0      0      F7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Aug 07 03:17:19 2023

              ___fldiv@aexp 00B4                ___fldiv@bexp 00B3                           _c 0079  
                         _i 00E2                           pc 0002                ___fldiv@sign 00AC  
                        l51 1CC6                          l60 07FF                          l45 1CB9  
                        l54 1CAC                          l71 1CE5                          l48 1CBA  
                        l72 1CE6                          l81 1186                          l90 1D2B  
                        l84 1D4A                          _T0 01CA                          l69 1CE1  
                        l93 1D88                          l87 1D69                          l99 1ECB  
                        _RS 0078                          _c2 01D2                          _RT 0198  
                        _VR 0194                          _i2 01A2                          _ln 01CE  
                        fsr 0004         ___wmul@multiplicand 0022         __Umul8_16@word_mpld 0026  
                       l123 1CD4                         l108 1E52                         l411 1DF9  
                       l405 17FF                         l263 1E85                         l264 1E79  
                       l281 0FFF                         l409 1DE1                         l602 0869  
                       l259 1CA3                         l284 1DD2                         l605 087E  
                       l702 0B45                         l278 150D                         l706 0BEC  
                       l810 07AE                         l394 1757                         l723 0CB7  
                       l715 0D69                         l708 0BC3                         l804 0726  
                       l580 1F1B                         l733 0CFD                         l727 0CDB  
                       l583 11A5                         l760 0AE1                         l744 0D5D  
                       l736 0D3B                         l745 0D69                         l817 1E10  
                       l681 10ED                         l586 1211                         l842 124F  
                       l578 1EEA                         l595 087E                         l587 122A  
                       l819 1E22                         l579 1F06                         l691 07F6  
                       l780 0AB5                         l748 1DAC                         l844 12E6  
                       l782 0ACD                         l774 0A25                         l758 08EB  
                       l862 1D0D                         l855 12B0                         l856 12BC  
                       l848 1294                         l874 167F                         l892 1F77  
                       l798 07BA                         l886 13CC                         _RB1 0031  
                       _RC2 003A                         _PEN 048A                         _ISR 1F78  
                       _SEN 0488                         _VRT 00E8                         _map 13CD  
                       _log 150E                         fsr0 0004                         indf 0000  
              ___flmul@aexp 005D                ___flmul@bexp 0062                ___flmul@sign 005C  
              ___flmul@temp 0067                ___flmul@prod 0063             __end_of_LCD_CMD 1D2C  
                      ?_ISR 0070         LCD_Write_String@Str 0026              _LCD_Set_Cursor 1E23  
              ___fltol@exp1 00D7                        l2300 0B73                        l2310 0B87  
                      l2302 0B77                        l2230 1F18                        l2320 0BC7  
                      l2312 0B8B                        l2304 0B7B                        l2240 0AEF  
                      l2232 1F1A                        l2224 1ECC                        l4000 1718  
                      l2410 0D37                        l2402 0D02                        l2330 0BE0  
                      l2322 0BD0                        l2306 0B7F                        l2314 0B8F  
                      l2250 0B06                        l2242 0AF3                        l2226 1EE2  
                      l4002 171D                        l2420 0D53                        l2412 0D40  
                      l2404 0D07                        l2340 0BFE                        l2324 0BD2  
                      l2332 0BE4                        l2316 0B90                        l2308 0B83  
                      l2260 0B1C                        l2252 0B07                        l2244 0AF4  
                      l2236 0AE2                        l2228 1EFE                        l4020 1762  
                      l4012 173B                        l4100 006E                        l2422 0D57  
                      l2414 0D45                        l2406 0D15                        l2350 0C28  
                      l2342 0C15                        l2334 0BF0                        l2326 0BD6  
                      l2318 0BA7                        l2270 0B2D                        l2262 0B1D  
                      l2246 0AF9                        l2254 0B09                        l2238 0AE9  
                      l4030 1783                        l4022 176E                        l4014 1745  
                      l4110 0076                        l4102 006F                        l2424 0D59  
                      l2416 0D4D                        l2408 0D19                        l2360 0C51  
                      l2352 0C2C                        l2344 0C19                        l2336 0BF5  
                      l2328 0BD7                        l2280 0B4B                        l2272 0B32  
                      l2264 0B23                        l2256 0B11                        l2248 0AFE  
                      l2600 1237                        l3400 1CD8                        l4040 17A5  
                      l4032 178F                        l4024 1772                        l4016 174B  
                      l4008 171F                        l4200 02E5                        l4120 0089  
                      l4112 0077                        l4104 0072                        l2426 0D64  
                      l2418 0D52                        l2370 0CBF                        l2362 0C8F  
                      l2354 0C2D                        l2346 0C1D                        l2290 0B5F  
                      l2282 0B4F                        l2274 0B3A                        l2266 0B27  
                      l2258 0B16                        l2610 1265                        l2602 1247  
                      l3410 1E0A                        l3402 1CDD                        l4042 17D5  
                      l4034 1795                        l4026 1778                        l4018 1751  
                      l4050 17FB                        l4210 0334                        l4202 02F7  
                      l4130 00A9                        l4122 008B                        l4114 0079  
                      l4106 0073                        l2428 0D68                        l2380 0CDA  
                      l2372 0CC4                        l2364 0C95                        l2356 0C36  
                      l2348 0C26                        l2292 0B63                        l2284 0B53  
                      l2276 0B3B                        l2268 0B28                        l2620 129B  
                      l2612 1272                        l2604 1257                        l3412 1E19  
                      l3404 1DFD                        l3500 06AA                        l3420 045A  
                      l4044 17DC                        l4036 179C                        l4028 177F  
                      l4220 036D                        l4212 033F                        l4204 0311  
                      l4140 00D7                        l4132 00B3                        l4124 008F  
                      l4116 0083                        l4108 0075                        l2382 0CDF  
                      l2390 0CEB                        l2366 0C9A                        l2358 0C3B  
                      l2294 0B67                        l2286 0B57                        l2278 0B3D  
                      l2630 12D4                        l2622 12A6                        l2614 1279  
                      l3414 1E1E                        l3406 1DFF                        l3510 06F6  
                      l3502 06D2                        l3430 0471                        l3422 0461  
                      l4046 17E0                        l4038 17A0                        l4230 03B3  
                      l4222 037B                        l4214 0349                        l4206 031B  
                      l4150 010B                        l4142 00E1                        l4134 00BE  
                      l4126 0094                        l4118 0086                        l2384 0CE2  
                      l2376 0CCD                        l2368 0CA9                        l2392 0CEF  
                      l2296 0B6B                        l2288 0B5B                        l2632 12D9  
                      l2624 12AA                        l2616 127D                        l2608 1260  
                      l3408 1E06                        l3520 070B                        l3512 06F7  
                      l3504 06DB                        l3440 048D                        l3432 0476  
                      l3424 0467                        l3600 1D19                        l4048 17E9  
                      l4240 03E6                        l4232 03C4                        l4224 0386  
                      l4216 0354                        l4208 0326                        l4160 0149  
                      l4144 00ED                        l4152 0113                        l4136 00CF  
                      l4128 009E                        l2394 0CF0                        l2386 0CE4  
                      l2378 0CD6                        l2298 0B6F                        l2634 12DD  
                      l2626 12B4                        l2618 128B                        l3530 0730  
                      l3522 070F                        l3514 0700                        l3506 06E9  
                      l3450 04A2                        l3442 0493                        l3434 047E  
                      l3426 046B                        l3418 1D2F                        l3602 1D6D  
                      l4250 0417                        l4234 03C8                        l4242 03EE  
                      l4218 0362                        l4226 0394                        l4170 0177  
                      l4162 014E                        l4154 0122                        l4146 00F8  
                      l4138 00D2                        l3612 1E5F                        l2396 0CF4  
                      l2388 0CE9                        l2580 11B9                        l2636 12DE  
                      l2628 12BE                        l3540 076E                        l3532 073E  
                      l3524 0723                        l3508 06F2                        l3516 0706  
                      l3460 04BE                        l3452 04AA                        l3444 0497  
                      l3436 0480                        l3428 046C                        l3604 1D6F  
                      l3700 07C6                        l4252 0422                        l4244 03FD  
                      l4236 03D3                        l4228 03A3                        l4180 01BF  
                      l4172 0189                        l4164 0158                        l4156 013B  
                      l4148 0100                        l3614 1E70                        l3606 1E56  
                      l2398 0CFA                        l2750 0819                        l2590 1227  
                      l2582 11C1                        l3550 07A2                        l3542 0779  
                      l3534 0742                        l3518 070A                        l3470 0501  
                      l3454 04AC                        l3446 0498                        l3438 0488  
                      l3630 1571                        l3622 150E                        l3390 1CC0  
                      l3710 07E5                        l3702 07CD                        l4254 042C  
                      l4246 0408                        l4238 03DB                        l4190 02B7  
                      l4182 0295                        l4174 0194                        l4166 0163  
                      l4158 013F                        l3616 1E76                        l3608 1E5C  
                      l3800 09A1                        l3720 1D8D                        l2760 083D  
                      l2752 082E                        l2744 0803                        l2592 1229  
                      l2584 11C5                        l2576 1187                        l3552 07A6  
                      l3544 0788                        l3536 075B                        l3528 072B  
                      l3480 058A                        l3472 051D                        l3464 04C7  
                      l3456 04B4                        l3448 049D                        l3640 1614  
                      l3624 1537                        l3392 1CA4                        l3560 1D4E  
                      l3712 07EC                        l3704 07D1                        l4256 0437  
                      l4248 040D                        l4192 02C7                        l4184 02A4  
                      l4176 01A5                        l4168 0172                        l4096 0056  
                      l3618 1E7D                        l3810 09C6                        l3802 09A2  
                      l3730 0898                        l2754 082F                        l2746 0810  
                      l2586 11E9                        l2578 119D                        l3554 07A7  
                      l3546 0792                        l3538 0761                        l3490 05FD  
                      l3482 059A                        l3474 0549                        l3466 04D7  
                      l3458 04B9                        l3570 1F3F                        l3634 1582  
                      l3394 1CA9                        l3562 1D52                        l3706 07D5  
                      l3714 07F2                        l3650 1D0A                        l4258 0447  
                      l4194 02D4                        l4178 01B2                        l4186 02A7  
                      l4098 006B                        l3820 09ED                        l3812 09C8  
                      l3804 09B0                        l3740 08AC                        l3732 0899  
                      l3724 087F                        l2756 0837                        l2588 11ED  
                      l2596 122E                        l3556 07B2                        l3548 0794  
                      l3492 061A                        l3484 05B7                        l3476 0565  
                      l3468 04E4                        l3580 1F76                        l3636 15EB  
                      l3628 1548                        l3388 1CBA                        l3396 07F7  
                      l3564 1D59                        l3900 1176                        l3708 07DF  
                      l3660 1DDB                        l3652 1D0C                        l3644 1CFD  
                      l4196 02D7                        l4188 02B4                        l3830 0A20  
                      l3814 09D7                        l3822 09F5                        l3806 09B8  
                      l3750 08CD                        l3734 089E                        l3742 08AE  
                      l3726 088A                        l3718 1D89                        l2774 085E  
                      l2766 0845                        l2758 0839                        l2598 1233  
                      l3494 0647                        l3486 05C7                        l3478 0581  
                      l3590 13BE                        l3582 1F77                        l3574 1F48  
                      l3566 1F1C                        l3638 15F1                        l3398 07FC  
                      l3910 1E26                        l3902 1E86                        l3670 10A8  
                      l3662 1DE8                        l3646 1CFE                        l4198 02E1  
                      ?_map 00B5                        l3840 0A43                        l3824 09F9  
                      l3816 09DD                        l3808 09BE                        l3760 08E1  
                      l3752 08CE                        l3744 08B6                        l3736 08A3  
                      l3728 0894                        l2776 086E                        l2768 0857  
                      l3496 0657                        l3488 05E4                        l3592 13C4  
                      l3576 1F65                        l3568 1F37                        l3912 1E27  
                      l3920 1E47                        l3904 1E8B                        l3680 10C0  
                      l3672 10AC                        l3664 1DEF                        l3656 1DD3  
                      l3648 1D04                        l3930 1DBF                        l3850 0AA8  
                      l3842 0A78                        l3834 0A2C                        l3826 09FA  
                      l3818 09DE                        l3754 08D3                        l3762 08E3  
                      l3746 08BF                        l3738 08AB                        l2778 0873  
                      l3498 0684                        l3586 12E7                        l3578 1F72  
                      l3922 1CC7                        l3914 1E2F                        l3906 1EA7  
                      l3690 10E3                        l3682 10C4                        l3674 10B2  
                      l3666 1DF5                        l3658 1DD7                        l3932 1DC6  
                      l3860 0AC5                        l3852 0AAC                        l3836 0A31  
                      l3844 0A7E                        l3828 09FE                        l3780 093C  
                      l3764 08F3                        l3772 0910                        l3756 08D8  
                      l3748 08C9                        l3588 132A                        l3940 0DBC  
                      l3596 1D11                        l3924 1CCD                        l3916 1E37  
                      l3908 1EAF                        l3684 10D5                        l3676 10B5  
                      l3692 10E9                        l3926 1C9B                        l3854 0AB4  
                      l3846 0A8B                        l3838 0A3F                        l3790 095B  
                      l3782 0944                        l3774 0915                        l3766 08FF  
                      l3758 08E0                        l3950 0EE2                        l3942 0DFB  
                      l3870 1CB4                        l3598 1D12                        l3918 1E3F  
                      l3686 10DB                        l3678 10BC                        l3928 1DAD  
                      l3856 0ABF                        l3848 0A99                        l3792 0977  
                      l3784 094C                        l3768 0907                        l3952 0F79  
                      l3944 0E36                        l3936 0D6A                        l3872 1CB7  
                      l3880 10FB                        l3688 10DC                        l3696 07BB  
                      l3858 0AC3                        l3794 097D                        l3786 0954  
                      l3778 091E                        l3954 0FA3                        l3946 0E67  
                      l3938 0D74                        l3874 1CB8                        l3866 1CAD  
                      l3890 113C                        l3882 110C                        l3962 13CD  
                      l3698 07C3                        l3970 168E                        l3796 097E  
                      l3788 0956                        l3956 0FF2                        l3948 0E94  
                      l3868 1CB1                        l3892 1146                        l3884 1116  
                      l3876 10F1                        l3980 16B1                        l3972 1695  
                      ?_log 00B5                        l3798 098D                        l3958 0FF9  
                      l3894 1156                        l3886 1126                        l3878 10F5  
                      l3982 16C6                        l3990 16ED                        l3974 169A  
                      l3966 1683                        l3896 115C                        l3888 112C  
                      l3992 1704                        l3984 16D9                        l3976 169D  
                      l3968 1688                        l3898 116C                        l3994 170C  
                      l3986 16DD                        l3978 16AD                        l3996 1710  
                      l3998 1714                        _CCPR 0190                        STR_1 1042  
                      STR_2 1051                        STR_3 105F                        STR_4 107A  
                      STR_5 109B                        STR_6 10A1                        STR_7 1086  
                      STR_8 1091                        STR_9 10A5                        u2210 1EE2  
                      u2211 1EE1                        u2300 0B32                        u2220 1EFE  
                      u2301 0B31                        u3101 11D4                        u2221 1EFD  
                      u2310 0B4B                        u3110 11ED                        u3102 11D5  
                      u2230 1F18                        u2311 0B4A                        u3111 11EC  
                      u3103 11DA                        u2231 1F17                        u2400 0BF0  
                      u2320 0B4F                        u2240 0AF3                        u3104 11DB  
                      u3200 129A                        u2401 0BEF                        u2321 0B4E  
                      u2241 0AF2                        u3121 11FC                        u3105 11E0  
                      u3201 1299                        u2410 0BF5                        u2330 0BA7  
                      u2250 0AF9                        u3130 1227                        u3122 11FD  
                      u3106 11E1                        u2411 0BF4                        u2331 0BA6  
                      u2251 0AF8                        u3131 1226                        u3123 1202  
                      u2235 1F14                        u2500 0C9A                        u2340 0BB2  
                      u2260 0AFE                        u3124 1203                        u3220 12AA  
                      u3140 1233                        u2501 0C99                        u2421 0C07  
                      u2341 0BB0                        u2261 0AFD                        u3125 1208  
                      u3221 12A9                        u3141 1232                        u2510 0CBF  
                      u2430 0C19                        u2422 0C0E                        u2350 0BB3  
                      u2270 0B1C                        u3126 1209                        u3070 119D  
                      u3230 12B0                        u3150 1237                        u2511 0CBE  
                      u2431 0C18                        u2423 0C15                        u2335 0BA3  
                      u2271 0B1B                        u3135 1223                        u3071 119C  
                      u3231 12AF                        u3215 129F                        u3151 1236  
                      u2600 0D01                        u2520 0CC4                        u2440 0C1D  
                      u2360 0BC7                        u2280 0B27                        u3080 11B9  
                      u3240 12B4                        u3160 1257                        u5000 07DF  
                      u2601 0D00                        u2521 0CC3                        u2441 0C1C  
                      u2361 0BC6                        u2281 0B26                        u3081 11B8  
                      u3241 12B3                        u3161 1256                        u5001 07DE  
                      u2610 0D07                        u2450 0C2C                        u2370 0BD6  
                      u2290 0B2D                        u3090 11C5                        u3250 12C9  
                      u2611 0D06                        u2451 0C2B                        u2371 0BD5  
                      u2291 0B2C                        u3091 11C4                        u5100 0915  
                      u2620 0D19                        u2540 0CDA                        u3500 0856  
                      u3260 12D9                        u3180 1278                        u4300 1CC0  
                      u5020 07F2                        u5101 0914                        u2621 0D18  
                      u2541 0CD9                        u3501 0855                        u3261 12D8  
                      u3181 1277                        u4301 1CBF                        u5021 07F1  
                      u5005 07DB                        u5110 095B                        u5030 0898  
                      u2630 0D28                        u2550 0CDF                        u2470 0C51  
                      u2390 0BEC                        u3510 085D                        u3270 12DD  
                      u4310 1CC6                        u5111 095A                        u5031 0897  
                      u2551 0CDE                        u2535 0CCF                        u2471 0C50  
                      u2391 0BEB                        u3511 085C                        u3271 12DC  
                      u3255 12C4                        u3175 126A                        u4311 1CC5  
                      u5015 07E6                        u5200 09DD                        u5040 089E  
                      u2640 0D37                        u2560 0CE9                        u4400 049D  
                      u4320 1CE5                        u5201 09DC                        u5041 089D  
                      u2641 0D36                        u2561 0CE8                        u2481 0C68  
                      u2473 0C4D                        u2465 0C2F                        u2385 0BD9  
                      u4401 049C                        u4321 1CE4                        u5050 08A3  
                      u2650 0D40                        u2570 0CEF                        u2490 0C7C  
                      u2482 0C69                        u3530 086E                        u3450 0810  
                      u4330 1E0A                        u4410 04A2                        u5051 08A2  
                      u2651 0D3F                        u2635 0D23                        u2571 0CEE  
                      u2491 0C7D                        u2483 0C6E                        u3531 086D  
                      u3451 080F                        u3195 128C                        u4331 1E09  
                      u4411 04A1                        u5300 0AA8                        u5220 09F9  
                      u5140 097D                        u5060 08CD                        u2660 0D45  
                      u2580 0CF4                        u2492 0C82                        u2484 0C6F  
                      u3540 0873                        u3460 0827                        u4420 04B9  
                      u5301 0AA7                        u5221 09F8                        u5141 097C  
                      u5125 095F                        u5061 08CC                        u2661 0D44  
                      u2581 0CF3                        u2493 0C83                        u2485 0C74  
                      u3541 0872                        u3525 0860                        u4501 05D6  
                      u4421 04B8                        u5310 0AC3                        u5230 09FE  
                      u5070 08D3                        u2670 0D52                        u2590 0CFA  
                      u2486 0C75                        u3470 083D                        u4350 1E1E  
                      u4502 05DD                        u4430 04BE                        u5311 0AC2  
                      u5231 09FD                        u5215 09E2                        u5135 096C  
                      u5071 08D2                        u2671 0D51                        u2591 0CF9  
                      u3471 083C                        u4351 1E1D                        u4503 05E4  
                      u4431 04BD                        u5240 0A20                        u5160 09A1  
                      u5080 08D8                        u2680 0D57                        u3480 0844  
                      u4360 046B                        u5320 1E95                        u5400 1745  
                      u5305 0AA4                        u5241 0A1F                        u5161 09A0  
                      u5081 08D7                        u2681 0D56                        u3481 0843  
                      u3465 0822                        u4345 1E11                        u4521 060C  
                      u4441 050F                        u4361 046A                        u5401 1744  
                      u5250 0A2B                        u5170 09BE                        u5090 08F3  
                      u2690 0D68                        u4610 06F6                        u4522 0613  
                      u4442 0516                        u4370 0471                        u5330 1EB9  
                      u5410 174B                        u5251 0A2A                        u5171 09BD  
                      u5155 0982                        u5091 08F2                        u2691 0D67  
                      u4611 06F5                        u4531 0639                        u4523 061A  
                      u4515 05E6                        u4451 052B                        u4443 051D  
                      u4371 0470                        u5411 174A                        u5260 0A31  
                      u5180 09C6                        u4700 076E                        u4532 0640  
                      u4452 0532                        u4380 0476                        u5340 1ECB  
                      u5420 1751                        u5500 0122                        u5261 0A30  
                      u5181 09C5                        u5165 099D                        u4701 076D  
                      u4605 06EB                        u4541 0666                        u4533 0647  
                      u4461 0557                        u4453 0539                        u4381 0475  
                      u5341 1ECA                        u5421 1750                        u5501 0121  
                      u5270 0A43                        u4710 0788                        u4630 070A  
                      u4550 0690                        u4542 066D                        u4462 055E  
                      u4390 0497                        u5430 1762                        u5350 168E  
                      u5510 01B2                        u5271 0A42                        u3495 0846  
                      u4711 0787                        u4631 0709                        u4543 0674  
                      u4471 0573                        u4463 0565                        u4391 0496  
                      u5431 1761                        u5351 168D                        u5511 01B1  
                      u5280 0A60                        u4720 07A6                        u4640 070F  
                      u4472 057A                        u5440 1778                        u5360 16AD  
                      u5520 01BF                        u4721 07A5                        u4705 076A  
                      u4641 070E                        u4625 06F9                        u4561 069C  
                      u4473 0581                        u5441 1777                        u5361 16AC  
                      u5521 01BE                        u5505 011E                        u4810 1E7D  
                      u5290 0A8B                        u4650 0723                        u4570 06B8  
                      u4562 06A3                        u4730 1F37                        u5450 178F  
                      u5370 16ED                        u5530 02B4                        u4811 1E7C  
                      u5291 0A8A                        u5195 09CC                        u4715 0784  
                      u4651 0722                        u4563 06AA                        u4555 068B  
                      u4491 05A9                        u4731 1F36                        u5451 178E  
                      u5435 175E                        u5371 16EC                        u5531 02B3  
                      u5515 01AE                        u4660 072A                        u4492 05B0  
                      u4820 1537                        u4900 10B2                        u5460 1795  
                      u5380 1714                        u5540 02D4                        _RCEN 048B  
                      u4805 1E66                        u5285 0A5B                        u4661 0729  
                      u4581 06C4                        u4493 05B7                        u4485 0583  
                      u4821 1536                        u4901 10B1                        u5461 1794  
                      u5381 1713                        u5541 02D3                        u5525 01BB  
                      u4670 0730                        u4582 06CB                        u4830 1571  
                      u5470 17E9                        u5390 173A                        u5550 03A3  
                      u5295 0A87                        u4671 072F                        u4583 06D2  
                      u4575 06B3                        u4831 1570                        u5471 17E8  
                      u5391 1739                        u5551 03A2                        u5535 02B0  
                      u5607 0106                        u4680 0742                        u4760 13C4  
                      u4920 10C4                        u4840 1D04                        u5480 17FB  
                      u5560 03B2                        u4681 0741                        u4761 13C3  
                      u4745 12EE                        u4921 10C3                        u4841 1D03  
                      u5481 17FA                        u5561 03B1                        u5545 02D0  
                      u5617 0135                        u4690 0751                        u4850 1D0A  
                      u5570 03FD                        u4595 06D4                        u4755 1335  
                      u5707 1142                        u4915 10B6                        u4851 1D09  
                      u5395 1736                        u5571 03FC                        u5555 039F  
                      u5627 016B                        u4940 10D5                        u4860 1DDB  
                      u5580 0456                        u5717 1152                        u4941 10D4  
                      u4861 1DDA                        u5581 0455                        u5565 03AE  
                      u5637 038E                        u4790 1E5C                        u4791 1E5B  
                      u4695 074C                        u4775 1D1E                        u5727 1162  
                      u4935 10C5                        u5575 03F9                        u5647 03E1  
                      u4960 10E9                        u5737 1172                        u4785 1D7B  
                      u4961 10E8                        u4945 10D1                        u5585 0452  
                      u5657 043D                        u4970 07C3                        u4890 1DF5  
                      u5747 1182                        u5667 1101                        u4955 10DD  
                      u4971 07C2                        u4891 1DF4                        u4875 1DE2  
                      u5757 1CD1                        u5677 1112                        u4885 1DE9  
                      u5597 00C9                        u4990 07D5                        u5767 1D66  
                      u5687 1122                        u4991 07D4                        u5777 0FF6  
                      u5697 1132                        u4985 07C7                        u5787 1DC3  
                      u5797 1E74                        _RSEN 0489           ?_LCD_Write_String 0026  
                      _main 0056          __size_of_LCD_Clear 000E                        map@x 00B5  
                      btemp 007E                        log@x 00B5            __end_of_ADC_Init 1CA4  
          __end_of_ADC_Read 1E86                        start 000C          ??_LCD_Write_String 0028  
           ___fldiv@new_exp 00AD             __end_of_GetTemp 1000        LCD_Write_4Bit@Nibble 0023  
                     ??_ISR 0070                _total_period 101A                       ??_map 006E  
                     ??_log 006E            __end_of_LCD_Init 1187            ?_I2C_Master_Init 0070  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070               ___fltol@sign1 00D6  
           __end_of___fladd 0D6A                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___fldiv 0AE2                       STR_10 106D  
                     STR_11 106D             __end_of___flmul 07BB             __end_of___flsub 1DAD  
           __end_of___fltol 087F                       _T1CON 0010             __end_of___lwdiv 10EE  
                     i1l273 1FC2             __end_of___lwmod 07F7                       i1l275 1FF9  
                     _TMR1H 000F                       _TMR1L 000E                       _SSPIF 0063  
    __end_of_LCD_Set_Cursor 1E53             __end_of_dpowers 101A                       _frexp 1F1C  
                     _errno 01A0             __end_of_isdigit 1D0E                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_sprintf 1800  
            _LCD_Write_4Bit 1D4B              _LCD_Write_Char 1D6A             __initialization 000F  
               log@exponent 00B9                __end_of_main 045A           _IO_Expander_Write 1D2C  
        ?_IO_Expander_Write 0070                      ??_main 01D8           __end_of_LCD_Clear 1CD5  
                 ??_LCD_CMD 0024           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070  
       ??_IO_Expander_Write 0021             ?_LCD_Set_Cursor 0026          ??_I2C_Master_Start 0020  
                    _ADCON0 001F                      _ADCON1 009F          ??_I2C_Master_Write 0020  
                    _AN0RES 01A8                      _CCP1IE 0462                      _CCP1IF 0062  
                    ?_frexp 002C                      _ADRESH 001E                      _ADRESL 009E  
                    _CCPR1H 0016                      _CCPR1L 0015                      i1l3370 1F78  
                    i1l3380 1FC3                      i1l3372 1F7E                      i1l3374 1F92  
                    i1l3382 1FDB                      i1l3384 1FF2                      i1l3376 1F98  
                    i1l3386 1FF8                      i1l3378 1F99                      _INTCON 000B  
                    u425_20 1F7E                      u425_21 1F7D                      u426_20 1F92  
                    u426_21 1F91                      u426_23 1F8E                      u427_20 1F98  
                    u427_21 1F97                      u428_21 1FAA                      u428_22 1FAB  
                    u428_23 1FB0                      u428_24 1FB1                      u428_25 1FB6  
                    u428_26 1FB7                      u429_20 1FEB                      u429_25 1FE6  
                 ??_GetTemp 00DA                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
    __end_of_LCD_Write_4Bit 1D6A            __end_of___xxtofl 12E7                      _RAlarm 00E4  
                    _Alarms 1DAD      __end_of_LCD_Write_Char 1D89   __end_of_IO_Expander_Write 1D4B  
                    ___flge 1187                      ___fleq 1ECC                      _fanLCD 01A4  
                 ??___fladd 003B                      _fanSTR 01AA                      ___wmul 1DD3  
                 ??___fldiv 0069                   ??___flmul 0057                   ??___flsub 004F  
                 ??___fltol 00D1                   ??___lwdiv 0024                   ??___lwmod 002C  
              __pdataCOMMON 0079                   ??_isdigit 0020          __size_of__Umul8_16 0029  
                 ?_ADC_Init 0070                   ?_ADC_Read 0020                      saved_w 007E  
                 ??_sprintf 0031                  ___flge@ff1 0020                  ___flge@ff2 0024  
              ___xxtofl@arg 002F                ___xxtofl@exp 002E                ___xxtofl@val 0025  
                ___fleq@ff1 0020                  ___fleq@ff2 0024            __end_oflog@coeff 1042  
   __end_of__initialization 0052                   ?_LCD_Init 0070             ?_LCD_Write_4Bit 0070  
              eval_poly@res 00A7                  ___fltol@f1 00CD             ?_LCD_Write_Char 0070  
            __pcstackCOMMON 0070                __pidataBANK1 1C89                __pidataBANK3 1C8D  
             __end_of_frexp 1F78                _GetTemp$1061 00DE                  ??_ADC_Init 0020  
                ??_ADC_Read 0022                     ??_frexp 0031                sprintf@width 003A  
                __pbssBANK1 00E2                  __pbssBANK3 0190          __size_of_eval_poly 00E6  
                ??_LCD_Init 0026                     ?_Alarms 0025           __end_of__Umul8_16 1E23  
__size_of_IO_Expander_Write 001F                  __pmaintext 0056                     ?___flge 0020  
                   ?___fleq 0020                     ?___wmul 0020                  __pintentry 0004  
                   _CCP1CON 0017                     _ACKSTAT 048E   __size_of_LCD_Write_String 0046  
                   _LCD_CMD 1D0E                   ?___xxtofl 0025                     _GO_DONE 00F9  
                   _SSPCON2 0091                     _SSPSTAT 0094                  __stringtab 1000  
                   _GetTemp 0D6A                     _i2c_add 006F             __size_of_Alarms 0026  
                   _TempSTR 01BA             __size_of___flge 00A4             __size_of___fleq 0050  
                   ___fladd 0AE2                _RTemperature 0076                     ___fldiv 087F  
                   ___flmul 045A                     _Voltage 019C                     ___flsub 1D89  
                   ___fltol 0803             __size_of___wmul 0027                     ___lwdiv 10A8  
                   ___lwmod 07BB                 _Temperature 00E6           __end_of_eval_poly 13CD  
          ??_LCD_Set_Cursor 0027                     __ptext1 1680                     __ptext2 1CFA  
                   __ptext3 1DD3                     __ptext4 07BB                     __ptext5 10A8  
                   __ptext6 13CD                     __ptext7 1E86                     __ptext8 1D6A  
                   __ptext9 1E23                __size_of_ISR 0088                     _dpowers 1010  
              __size_of_map 0141                __size_of_log 0172                     _isdigit 1CFA  
                ??___xxtofl 0029                     _tempMax 01D4                     _tempMin 01D6  
  __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009  
                 _LCD_Clear 1CC7                     _sprintf 1680                     clrloop0 1C94  
      end_of_initialization 0052   __size_of_I2C_Master_Start 0009   __size_of_I2C_Master_Write 0012  
                LCD_CMD@CMD 0025                 ___fladd@grs 0046               ___xxtofl@sign 002D  
                 _TRISBbits 0086                   _TRISCbits 0087                  ?_LCD_Clear 0070  
               ___fldiv@grs 00AF                 ___fldiv@rem 00A8           __size_of_ADC_Init 0009  
         __size_of_ADC_Read 0033            ??_LCD_Write_4Bit 0022           LCD_Write_String@i 002B  
          ??_LCD_Write_Char 0024                  map@out_max 00C5                  map@out_min 00C1  
               ___flmul@grs 005E           __size_of_LCD_Init 0099              __end_of_Alarms 1DD3  
            __end_of___flge 122B              __end_of___fleq 1F1C              __end_of___wmul 1DFA  
          _LCD_Write_String 1E86               __pidataCOMMON 0800         start_initialization 000F  
                eval_poly@d 00A4                  eval_poly@n 00A5                  eval_poly@x 00A0  
               __end_of_ISR 2000                 __end_of_map 150E                 __end_of_log 1680  
                frexp@value 002C           ??_I2C_Master_Init 0020           ??_I2C_Master_Wait 0020  
         ??_I2C_Master_Stop 0020                    ??_Alarms 0027                    ??___flge 0028  
                  ??___fleq 0028                    ??___wmul 0024                  init_fetch0 1CE7  
                 __Umul8_16 1DFA                 __pdataBANK1 00EC                 __pdataBANK3 01D2  
                 ___fladd@a 0037                   ___fladd@b 0033                    ?_LCD_CMD 0070  
                 ___fldiv@a 00A0                   ___fldiv@b 00A4                   ___flmul@a 0053  
                 ___flmul@b 004F              _current_period 00EC                 __pbssCOMMON 0076  
                 ___flsub@a 0047                   ___flsub@b 004B                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00A0               __pcstackBANK3 01D8  
               ??_LCD_Clear 0026           __size_of___xxtofl 00BC                    ?_GetTemp 00D8  
               sprintf@flag 0036                 sprintf@prec 0035                   __pnvBANK0 006F  
          _I2C_Master_Start 1CA4            _I2C_Master_Write 1CD5            ___lwdiv@dividend 0022  
     IO_Expander_Write@Data 0021                    ?___fladd 0033                    ?___fldiv 00A0  
                  ?___flmul 004F                    ?___flsub 0047                    ?___fltol 00CD  
                ?__Umul8_16 0020                    ?___lwdiv 0020                    ?___lwmod 0028  
      I2C_Master_Write@data 0020                   __pstrings 1000                    ?_isdigit 0070  
                 _eval_poly 12E7                    _ADC_Init 1C9B                    _ADC_Read 1E53  
               ADC_Read@ANC 0024            ___lwdiv@quotient 0026                    ?_sprintf 002E  
            __size_of_frexp 005C           interrupt_function 0004                    _LCD_Init 10EE  
            ___wmul@product 0024                   clear_ram0 1C93                   map@in_max 00BD  
                 map@in_min 00B9                  _ADCON0bits 001F                 __stringbase 100F  
         ___wmul@multiplier 0020                  ?_eval_poly 00A0            __size_of_LCD_CMD 001E  
  __end_of_LCD_Write_String 1ECC            __size_of_GetTemp 0296                   frexp@eptr 0030  
               ??__Umul8_16 0022            __size_of___fladd 0288            __size_of___fldiv 0263  
          __size_of___flmul 0361            __size_of___flsub 0024            __size_of___fltol 007C  
          __size_of___lwdiv 0046            __size_of___lwmod 003C                    _map$1060 00C9  
        __end_of__stringtab 1010                 _isdigit$791 0020                  sprintf@val 0037  
           _I2C_Master_Init 1CAD                    ___xxtofl 122B                    _fanSpeed 01A6  
           _I2C_Master_Wait 1CBA             _I2C_Master_Stop 07F7            __size_of_isdigit 0014  
           ___lwdiv@divisor 0020             ___lwdiv@counter 0025                    __ptext10 10EE  
                  __ptext11 1CC7                    __ptext20 0D6A                    __ptext12 1D0E  
                  __ptext21 150E                    __ptext13 1D4B                    __ptext30 1D89  
                  __ptext22 1F1C                    __ptext14 1D2C                    __ptext31 0AE2  
                  __ptext23 1ECC                    __ptext15 1CD5                    __ptext32 087F  
                  __ptext24 12E7                    __ptext16 07F7                    __ptext33 1DAD  
                  __ptext25 045A                    __ptext17 1CA4                    __ptext34 1E53  
                  __ptext26 1DFA                    __ptext18 1CBA                    __ptext35 1C9B  
                  __ptext27 122B                    __ptext19 1CAD                    __ptext36 1F78  
                  __ptext28 1187                    __ptext29 0803        __end_of_total_period 101E  
   __size_of_LCD_Set_Cursor 0030            __size_of_sprintf 0180             _BackLight_State 007B  
             __size_of_main 0404                    log@coeff 101E    __end_of_I2C_Master_Start 1CAD  
  __end_of_I2C_Master_Write 1CE7                 ??_eval_poly 0069          LCD_Write_Char@Data 0025  
                  init_ram0 1CEB                    isdigit@c 0021                    intlevel1 0000  
                 sprintf@ap 0034                   sprintf@sp 0039            ___lwmod@dividend 002A  
                 stringcode 100A     __size_of_LCD_Write_4Bit 001F     __size_of_LCD_Write_Char 001F  
   __end_of_I2C_Master_Init 1CBA     __end_of_I2C_Master_Wait 1CC7     __end_of_I2C_Master_Stop 0800  
           LCD_Init@I2C_Add 0028      __Umul8_16@multiplicand 0020                    sprintf@c 003C  
                  sprintf@f 002E             ___lwmod@divisor 0028             ___lwmod@counter 002D  
                  stringdir 100A                    stringtab 1000           LCD_Set_Cursor@COL 0026  
         LCD_Set_Cursor@ROW 0027               ___fladd@signs 0043                ___fladd@aexp 0044  
              ___fladd@bexp 0045        __Umul8_16@multiplier 0028           __Umul8_16@product 0024  
